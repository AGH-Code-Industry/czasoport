//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/CustomInput/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Movement"",
            ""id"": ""49f89eb3-3731-4013-b482-811d9a50f464"",
            ""actions"": [
                {
                    ""name"": ""Navigation"",
                    ""type"": ""Value"",
                    ""id"": ""b1198fdf-2896-4189-96b8-c10c220e96eb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Value"",
                    ""id"": ""baa00e32-c686-4b4d-a33d-312d24dff2c2"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FocusChange"",
                    ""type"": ""Button"",
                    ""id"": ""78620b48-2da2-4144-a11a-779fed0bc172"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WSAD Movement"",
                    ""id"": ""1ca86eb7-7861-4e2b-bcfc-c98f8b924c67"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""edb6cb24-6e75-42c9-9c6b-f5adc97a3279"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e40c1526-0031-4a0e-89c5-dceba3bed010"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""510fda43-6fd4-4d8b-93f4-30b2573393b4"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""306e7db1-631b-4e39-85fc-f793bcf4a35d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""85f4d5b4-619b-4e5c-a33e-34e2e8344236"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01ce6c9e-d5bc-463e-bf17-d5fd826f1f4f"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4dc19f4-d79a-4885-b5d8-22bb8930239d"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d252635-92c4-4f8f-b9a6-d7c56f47b60d"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FocusChange"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb6209ab-555d-42d0-b633-23debe7ab985"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FocusChange"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24715080-f07b-430c-bef1-8bb0e2237721"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FocusChange"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Mouse"",
            ""id"": ""896d2dea-d0ad-464e-9fd0-c4eef17aa433"",
            ""actions"": [
                {
                    ""name"": ""LeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""61b83fc5-9d6f-4e6b-a538-f6e02fea6a30"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""Button"",
                    ""id"": ""dfed5a7c-acc0-43d9-8b57-ffc539756354"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""Button"",
                    ""id"": ""5f342b7f-5890-40d4-a26c-78d3ef9f65fd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""708a0841-f61a-4bb3-81fa-74876be3d530"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""bf571fc7-fd04-4b4f-83ec-11fbcf3681d7"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""74365026-8cb3-4290-bdd7-45e1c2d6835c"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ed29a0f-55ff-4e50-bb8a-d5fb4eca8aed"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47faa8ef-3b9f-481c-987e-05b60ada6552"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Inventory"",
            ""id"": ""fc8fca9d-86fc-447a-ac13-4a132dfa431d"",
            ""actions"": [
                {
                    ""name"": ""PreviousItem"",
                    ""type"": ""Button"",
                    ""id"": ""45aea01a-a722-4c90-a43c-a8015e62d569"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextItem"",
                    ""type"": ""Button"",
                    ""id"": ""ba78845c-3d0c-4aab-9f70-8abaa44b6f65"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChooseItem"",
                    ""type"": ""Button"",
                    ""id"": ""bd5a2519-8e0c-4e50-9277-29a60aed0704"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Drop"",
                    ""type"": ""Button"",
                    ""id"": ""a3434d3e-8c03-486c-a645-7cc926d60ab7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""dc0d5fdf-aecb-4627-9e82-d653170db6b4"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc741d90-57f5-4fae-9dcd-d3ed511fcd5e"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2cfc290c-aa3e-4332-b031-5d0c02a0098f"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PreviousItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6e9b904-cd7c-40ae-836b-cd97939cf32c"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": ""Scale"",
                    ""groups"": """",
                    ""action"": ""ChooseItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a6a35b85-c3a7-43c7-80e2-090b7b253b57"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=2)"",
                    ""groups"": """",
                    ""action"": ""ChooseItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""534842cf-7b82-48ec-a206-bd0611b8e83b"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=3)"",
                    ""groups"": """",
                    ""action"": ""ChooseItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a8ec26b-f62a-4d1d-9faf-44a2eb2b90f7"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": ""Scale(factor=4)"",
                    ""groups"": """",
                    ""action"": ""ChooseItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d4379f7-bcaf-41b7-99d9-e04d9c490500"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f1326ce-b58b-4759-b807-14cde7ccef06"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Teleport"",
            ""id"": ""6ccf2c11-001c-43f8-8527-693c643c409d"",
            ""actions"": [
                {
                    ""name"": ""TeleportBack"",
                    ""type"": ""Button"",
                    ""id"": ""6507383e-b573-45f7-bb3b-21b5e8d37c6b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TeleportForward"",
                    ""type"": ""Button"",
                    ""id"": ""d2a680eb-4e3f-47d1-b0a7-c6b40fbe393b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2610a022-4ed5-465f-823b-d9734c42ba08"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TeleportBack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d3cd4d7-b0ec-451b-9405-307d5e7bbdb4"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TeleportBack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e254c626-ad00-43e0-b4fe-a27e3e13b3af"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TeleportForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f4f6676-6872-454a-9af5-253fc16f338c"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TeleportForward"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Interactions"",
            ""id"": ""4f600a2c-bc54-4477-97dc-41a103db97c8"",
            ""actions"": [
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""cd0cc705-f3d7-4e40-b9ca-39aed3abc820"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LongInteraction"",
                    ""type"": ""Button"",
                    ""id"": ""d6af5767-8d5c-498e-a3ad-4f188035148f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""CustomHold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ItemInteraction"",
                    ""type"": ""Button"",
                    ""id"": ""4d7a8354-4b10-40f6-8c8a-000e914a019b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LongItemInteraction"",
                    ""type"": ""Button"",
                    ""id"": ""d3246bfa-964c-4c8e-a9a7-d2c148a6c2c6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""CustomHold"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""dab1e5ac-df9b-4a96-ba30-580c175dcf48"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e758873-e747-4ceb-916c-0a207cbfd8a9"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f95537c-2525-4a23-a3e2-37e5672e5bdd"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4aca212e-2e55-4f51-a83f-08a8fa032922"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ItemInteraction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0e3eeb5-4383-4748-9ae5-e7bf829c4e54"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ItemInteraction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6b69d0a-a5b0-4027-b597-3debd9f8330d"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ItemInteraction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e1cc700-1cf0-4573-98f2-7ecde3f240f2"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LongInteraction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93c373fc-7549-4049-9ac4-cea7aa455a72"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LongInteraction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7fdc9889-9f10-4df2-af9f-790166a247fa"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LongInteraction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c0ec4eae-0496-41b3-85bc-908089996f2b"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LongItemInteraction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4907b09-ed4b-4cc5-bcb1-266959bcc867"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LongItemInteraction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c7e7a06e-2b30-45d6-b7dd-b13bac2d1700"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LongItemInteraction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Game"",
            ""id"": ""19e46316-6712-4054-9454-eb4211345833"",
            ""actions"": [
                {
                    ""name"": ""TogglePause"",
                    ""type"": ""Button"",
                    ""id"": ""7088c9b2-580d-4d34-b28e-06c8ea872416"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""819c33cf-b8c8-49cc-b772-fbf5a6883d82"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TogglePause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Movement
        m_Movement = asset.FindActionMap("Movement", throwIfNotFound: true);
        m_Movement_Navigation = m_Movement.FindAction("Navigation", throwIfNotFound: true);
        m_Movement_Run = m_Movement.FindAction("Run", throwIfNotFound: true);
        m_Movement_FocusChange = m_Movement.FindAction("FocusChange", throwIfNotFound: true);
        // Mouse
        m_Mouse = asset.FindActionMap("Mouse", throwIfNotFound: true);
        m_Mouse_LeftClick = m_Mouse.FindAction("LeftClick", throwIfNotFound: true);
        m_Mouse_RightClick = m_Mouse.FindAction("RightClick", throwIfNotFound: true);
        m_Mouse_MiddleClick = m_Mouse.FindAction("MiddleClick", throwIfNotFound: true);
        m_Mouse_MousePosition = m_Mouse.FindAction("MousePosition", throwIfNotFound: true);
        // Inventory
        m_Inventory = asset.FindActionMap("Inventory", throwIfNotFound: true);
        m_Inventory_PreviousItem = m_Inventory.FindAction("PreviousItem", throwIfNotFound: true);
        m_Inventory_NextItem = m_Inventory.FindAction("NextItem", throwIfNotFound: true);
        m_Inventory_ChooseItem = m_Inventory.FindAction("ChooseItem", throwIfNotFound: true);
        m_Inventory_Drop = m_Inventory.FindAction("Drop", throwIfNotFound: true);
        // Teleport
        m_Teleport = asset.FindActionMap("Teleport", throwIfNotFound: true);
        m_Teleport_TeleportBack = m_Teleport.FindAction("TeleportBack", throwIfNotFound: true);
        m_Teleport_TeleportForward = m_Teleport.FindAction("TeleportForward", throwIfNotFound: true);
        // Interactions
        m_Interactions = asset.FindActionMap("Interactions", throwIfNotFound: true);
        m_Interactions_Interaction = m_Interactions.FindAction("Interaction", throwIfNotFound: true);
        m_Interactions_LongInteraction = m_Interactions.FindAction("LongInteraction", throwIfNotFound: true);
        m_Interactions_ItemInteraction = m_Interactions.FindAction("ItemInteraction", throwIfNotFound: true);
        m_Interactions_LongItemInteraction = m_Interactions.FindAction("LongItemInteraction", throwIfNotFound: true);
        // Game
        m_Game = asset.FindActionMap("Game", throwIfNotFound: true);
        m_Game_TogglePause = m_Game.FindAction("TogglePause", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Movement
    private readonly InputActionMap m_Movement;
    private IMovementActions m_MovementActionsCallbackInterface;
    private readonly InputAction m_Movement_Navigation;
    private readonly InputAction m_Movement_Run;
    private readonly InputAction m_Movement_FocusChange;
    public struct MovementActions
    {
        private @InputActions m_Wrapper;
        public MovementActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigation => m_Wrapper.m_Movement_Navigation;
        public InputAction @Run => m_Wrapper.m_Movement_Run;
        public InputAction @FocusChange => m_Wrapper.m_Movement_FocusChange;
        public InputActionMap Get() { return m_Wrapper.m_Movement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovementActions set) { return set.Get(); }
        public void SetCallbacks(IMovementActions instance)
        {
            if (m_Wrapper.m_MovementActionsCallbackInterface != null)
            {
                @Navigation.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnNavigation;
                @Navigation.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnNavigation;
                @Navigation.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnNavigation;
                @Run.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnRun;
                @FocusChange.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnFocusChange;
                @FocusChange.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnFocusChange;
                @FocusChange.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnFocusChange;
            }
            m_Wrapper.m_MovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Navigation.started += instance.OnNavigation;
                @Navigation.performed += instance.OnNavigation;
                @Navigation.canceled += instance.OnNavigation;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
                @FocusChange.started += instance.OnFocusChange;
                @FocusChange.performed += instance.OnFocusChange;
                @FocusChange.canceled += instance.OnFocusChange;
            }
        }
    }
    public MovementActions @Movement => new MovementActions(this);

    // Mouse
    private readonly InputActionMap m_Mouse;
    private IMouseActions m_MouseActionsCallbackInterface;
    private readonly InputAction m_Mouse_LeftClick;
    private readonly InputAction m_Mouse_RightClick;
    private readonly InputAction m_Mouse_MiddleClick;
    private readonly InputAction m_Mouse_MousePosition;
    public struct MouseActions
    {
        private @InputActions m_Wrapper;
        public MouseActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftClick => m_Wrapper.m_Mouse_LeftClick;
        public InputAction @RightClick => m_Wrapper.m_Mouse_RightClick;
        public InputAction @MiddleClick => m_Wrapper.m_Mouse_MiddleClick;
        public InputAction @MousePosition => m_Wrapper.m_Mouse_MousePosition;
        public InputActionMap Get() { return m_Wrapper.m_Mouse; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MouseActions set) { return set.Get(); }
        public void SetCallbacks(IMouseActions instance)
        {
            if (m_Wrapper.m_MouseActionsCallbackInterface != null)
            {
                @LeftClick.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnLeftClick;
                @LeftClick.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnLeftClick;
                @LeftClick.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnLeftClick;
                @RightClick.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnRightClick;
                @RightClick.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnRightClick;
                @RightClick.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnRightClick;
                @MiddleClick.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnMiddleClick;
                @MousePosition.started -= m_Wrapper.m_MouseActionsCallbackInterface.OnMousePosition;
                @MousePosition.performed -= m_Wrapper.m_MouseActionsCallbackInterface.OnMousePosition;
                @MousePosition.canceled -= m_Wrapper.m_MouseActionsCallbackInterface.OnMousePosition;
            }
            m_Wrapper.m_MouseActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LeftClick.started += instance.OnLeftClick;
                @LeftClick.performed += instance.OnLeftClick;
                @LeftClick.canceled += instance.OnLeftClick;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
                @MiddleClick.started += instance.OnMiddleClick;
                @MiddleClick.performed += instance.OnMiddleClick;
                @MiddleClick.canceled += instance.OnMiddleClick;
                @MousePosition.started += instance.OnMousePosition;
                @MousePosition.performed += instance.OnMousePosition;
                @MousePosition.canceled += instance.OnMousePosition;
            }
        }
    }
    public MouseActions @Mouse => new MouseActions(this);

    // Inventory
    private readonly InputActionMap m_Inventory;
    private IInventoryActions m_InventoryActionsCallbackInterface;
    private readonly InputAction m_Inventory_PreviousItem;
    private readonly InputAction m_Inventory_NextItem;
    private readonly InputAction m_Inventory_ChooseItem;
    private readonly InputAction m_Inventory_Drop;
    public struct InventoryActions
    {
        private @InputActions m_Wrapper;
        public InventoryActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @PreviousItem => m_Wrapper.m_Inventory_PreviousItem;
        public InputAction @NextItem => m_Wrapper.m_Inventory_NextItem;
        public InputAction @ChooseItem => m_Wrapper.m_Inventory_ChooseItem;
        public InputAction @Drop => m_Wrapper.m_Inventory_Drop;
        public InputActionMap Get() { return m_Wrapper.m_Inventory; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InventoryActions set) { return set.Get(); }
        public void SetCallbacks(IInventoryActions instance)
        {
            if (m_Wrapper.m_InventoryActionsCallbackInterface != null)
            {
                @PreviousItem.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnPreviousItem;
                @PreviousItem.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnPreviousItem;
                @PreviousItem.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnPreviousItem;
                @NextItem.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnNextItem;
                @NextItem.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnNextItem;
                @NextItem.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnNextItem;
                @ChooseItem.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnChooseItem;
                @ChooseItem.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnChooseItem;
                @ChooseItem.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnChooseItem;
                @Drop.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnDrop;
                @Drop.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnDrop;
                @Drop.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnDrop;
            }
            m_Wrapper.m_InventoryActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PreviousItem.started += instance.OnPreviousItem;
                @PreviousItem.performed += instance.OnPreviousItem;
                @PreviousItem.canceled += instance.OnPreviousItem;
                @NextItem.started += instance.OnNextItem;
                @NextItem.performed += instance.OnNextItem;
                @NextItem.canceled += instance.OnNextItem;
                @ChooseItem.started += instance.OnChooseItem;
                @ChooseItem.performed += instance.OnChooseItem;
                @ChooseItem.canceled += instance.OnChooseItem;
                @Drop.started += instance.OnDrop;
                @Drop.performed += instance.OnDrop;
                @Drop.canceled += instance.OnDrop;
            }
        }
    }
    public InventoryActions @Inventory => new InventoryActions(this);

    // Teleport
    private readonly InputActionMap m_Teleport;
    private ITeleportActions m_TeleportActionsCallbackInterface;
    private readonly InputAction m_Teleport_TeleportBack;
    private readonly InputAction m_Teleport_TeleportForward;
    public struct TeleportActions
    {
        private @InputActions m_Wrapper;
        public TeleportActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @TeleportBack => m_Wrapper.m_Teleport_TeleportBack;
        public InputAction @TeleportForward => m_Wrapper.m_Teleport_TeleportForward;
        public InputActionMap Get() { return m_Wrapper.m_Teleport; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TeleportActions set) { return set.Get(); }
        public void SetCallbacks(ITeleportActions instance)
        {
            if (m_Wrapper.m_TeleportActionsCallbackInterface != null)
            {
                @TeleportBack.started -= m_Wrapper.m_TeleportActionsCallbackInterface.OnTeleportBack;
                @TeleportBack.performed -= m_Wrapper.m_TeleportActionsCallbackInterface.OnTeleportBack;
                @TeleportBack.canceled -= m_Wrapper.m_TeleportActionsCallbackInterface.OnTeleportBack;
                @TeleportForward.started -= m_Wrapper.m_TeleportActionsCallbackInterface.OnTeleportForward;
                @TeleportForward.performed -= m_Wrapper.m_TeleportActionsCallbackInterface.OnTeleportForward;
                @TeleportForward.canceled -= m_Wrapper.m_TeleportActionsCallbackInterface.OnTeleportForward;
            }
            m_Wrapper.m_TeleportActionsCallbackInterface = instance;
            if (instance != null)
            {
                @TeleportBack.started += instance.OnTeleportBack;
                @TeleportBack.performed += instance.OnTeleportBack;
                @TeleportBack.canceled += instance.OnTeleportBack;
                @TeleportForward.started += instance.OnTeleportForward;
                @TeleportForward.performed += instance.OnTeleportForward;
                @TeleportForward.canceled += instance.OnTeleportForward;
            }
        }
    }
    public TeleportActions @Teleport => new TeleportActions(this);

    // Interactions
    private readonly InputActionMap m_Interactions;
    private IInteractionsActions m_InteractionsActionsCallbackInterface;
    private readonly InputAction m_Interactions_Interaction;
    private readonly InputAction m_Interactions_LongInteraction;
    private readonly InputAction m_Interactions_ItemInteraction;
    private readonly InputAction m_Interactions_LongItemInteraction;
    public struct InteractionsActions
    {
        private @InputActions m_Wrapper;
        public InteractionsActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Interaction => m_Wrapper.m_Interactions_Interaction;
        public InputAction @LongInteraction => m_Wrapper.m_Interactions_LongInteraction;
        public InputAction @ItemInteraction => m_Wrapper.m_Interactions_ItemInteraction;
        public InputAction @LongItemInteraction => m_Wrapper.m_Interactions_LongItemInteraction;
        public InputActionMap Get() { return m_Wrapper.m_Interactions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InteractionsActions set) { return set.Get(); }
        public void SetCallbacks(IInteractionsActions instance)
        {
            if (m_Wrapper.m_InteractionsActionsCallbackInterface != null)
            {
                @Interaction.started -= m_Wrapper.m_InteractionsActionsCallbackInterface.OnInteraction;
                @Interaction.performed -= m_Wrapper.m_InteractionsActionsCallbackInterface.OnInteraction;
                @Interaction.canceled -= m_Wrapper.m_InteractionsActionsCallbackInterface.OnInteraction;
                @LongInteraction.started -= m_Wrapper.m_InteractionsActionsCallbackInterface.OnLongInteraction;
                @LongInteraction.performed -= m_Wrapper.m_InteractionsActionsCallbackInterface.OnLongInteraction;
                @LongInteraction.canceled -= m_Wrapper.m_InteractionsActionsCallbackInterface.OnLongInteraction;
                @ItemInteraction.started -= m_Wrapper.m_InteractionsActionsCallbackInterface.OnItemInteraction;
                @ItemInteraction.performed -= m_Wrapper.m_InteractionsActionsCallbackInterface.OnItemInteraction;
                @ItemInteraction.canceled -= m_Wrapper.m_InteractionsActionsCallbackInterface.OnItemInteraction;
                @LongItemInteraction.started -= m_Wrapper.m_InteractionsActionsCallbackInterface.OnLongItemInteraction;
                @LongItemInteraction.performed -= m_Wrapper.m_InteractionsActionsCallbackInterface.OnLongItemInteraction;
                @LongItemInteraction.canceled -= m_Wrapper.m_InteractionsActionsCallbackInterface.OnLongItemInteraction;
            }
            m_Wrapper.m_InteractionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Interaction.started += instance.OnInteraction;
                @Interaction.performed += instance.OnInteraction;
                @Interaction.canceled += instance.OnInteraction;
                @LongInteraction.started += instance.OnLongInteraction;
                @LongInteraction.performed += instance.OnLongInteraction;
                @LongInteraction.canceled += instance.OnLongInteraction;
                @ItemInteraction.started += instance.OnItemInteraction;
                @ItemInteraction.performed += instance.OnItemInteraction;
                @ItemInteraction.canceled += instance.OnItemInteraction;
                @LongItemInteraction.started += instance.OnLongItemInteraction;
                @LongItemInteraction.performed += instance.OnLongItemInteraction;
                @LongItemInteraction.canceled += instance.OnLongItemInteraction;
            }
        }
    }
    public InteractionsActions @Interactions => new InteractionsActions(this);

    // Game
    private readonly InputActionMap m_Game;
    private IGameActions m_GameActionsCallbackInterface;
    private readonly InputAction m_Game_TogglePause;
    public struct GameActions
    {
        private @InputActions m_Wrapper;
        public GameActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @TogglePause => m_Wrapper.m_Game_TogglePause;
        public InputActionMap Get() { return m_Wrapper.m_Game; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameActions set) { return set.Get(); }
        public void SetCallbacks(IGameActions instance)
        {
            if (m_Wrapper.m_GameActionsCallbackInterface != null)
            {
                @TogglePause.started -= m_Wrapper.m_GameActionsCallbackInterface.OnTogglePause;
                @TogglePause.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnTogglePause;
                @TogglePause.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnTogglePause;
            }
            m_Wrapper.m_GameActionsCallbackInterface = instance;
            if (instance != null)
            {
                @TogglePause.started += instance.OnTogglePause;
                @TogglePause.performed += instance.OnTogglePause;
                @TogglePause.canceled += instance.OnTogglePause;
            }
        }
    }
    public GameActions @Game => new GameActions(this);
    public interface IMovementActions
    {
        void OnNavigation(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnFocusChange(InputAction.CallbackContext context);
    }
    public interface IMouseActions
    {
        void OnLeftClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
    }
    public interface IInventoryActions
    {
        void OnPreviousItem(InputAction.CallbackContext context);
        void OnNextItem(InputAction.CallbackContext context);
        void OnChooseItem(InputAction.CallbackContext context);
        void OnDrop(InputAction.CallbackContext context);
    }
    public interface ITeleportActions
    {
        void OnTeleportBack(InputAction.CallbackContext context);
        void OnTeleportForward(InputAction.CallbackContext context);
    }
    public interface IInteractionsActions
    {
        void OnInteraction(InputAction.CallbackContext context);
        void OnLongInteraction(InputAction.CallbackContext context);
        void OnItemInteraction(InputAction.CallbackContext context);
        void OnLongItemInteraction(InputAction.CallbackContext context);
    }
    public interface IGameActions
    {
        void OnTogglePause(InputAction.CallbackContext context);
    }
}
