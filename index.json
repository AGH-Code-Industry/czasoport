{
  "api/Application.ApplicationSettingsSO.html": {
    "href": "api/Application.ApplicationSettingsSO.html",
    "title": "Class ApplicationSettingsSO | Czasoport Documentation",
    "keywords": "Class ApplicationSettingsSO Namespace Application Settings for entire application that defines variables for startup, core processes and shutdown public class ApplicationSettingsSO : ScriptableObject Inheritance object ApplicationSettingsSO Fields gameSceneName public string gameSceneName Field Value string lvlDefinitionsResPath public string lvlDefinitionsResPath Field Value string notificationDuration public float notificationDuration Field Value float saveFileName public string saveFileName Field Value string sceneToLoadName public string sceneToLoadName Field Value string"
  },
  "api/Application.GameManager.html": {
    "href": "api/Application.GameManager.html",
    "title": "Class GameManager | Czasoport Documentation",
    "keywords": "Class GameManager Namespace Application public class GameManager : MonoBehaviour Inheritance object GameManager"
  },
  "api/Application.GlobalExceptions.SingletonOverrideException.html": {
    "href": "api/Application.GlobalExceptions.SingletonOverrideException.html",
    "title": "Class SingletonOverrideException | Czasoport Documentation",
    "keywords": "Class SingletonOverrideException Namespace Application.GlobalExceptions public class SingletonOverrideException : Exception, ISerializable Inheritance object Exception SingletonOverrideException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SingletonOverrideException() public SingletonOverrideException() SingletonOverrideException(string) public SingletonOverrideException(string message) Parameters message string SingletonOverrideException(string, Exception) public SingletonOverrideException(string message, Exception inner) Parameters message string inner Exception"
  },
  "api/Application.GlobalExceptions.html": {
    "href": "api/Application.GlobalExceptions.html",
    "title": "Namespace Application.GlobalExceptions | Czasoport Documentation",
    "keywords": "Namespace Application.GlobalExceptions Classes SingletonOverrideException"
  },
  "api/Application.Loggers.LoggerType.html": {
    "href": "api/Application.Loggers.LoggerType.html",
    "title": "Enum Loggers.LoggerType | Czasoport Documentation",
    "keywords": "Enum Loggers.LoggerType Namespace Application public enum Loggers.LoggerType Fields DATA_PERSISTENCE = 7 INTERACTABLE_OBJECTS = 3 INTERACTIONS = 2 INVENTORY = 1 ITEMS = 4 LEVEL_SYSTEM = 0 PAUSE = 6 PORTALS = 5"
  },
  "api/Application.Loggers.html": {
    "href": "api/Application.Loggers.html",
    "title": "Class Loggers | Czasoport Documentation",
    "keywords": "Class Loggers Namespace Application public static class Loggers Inheritance object Loggers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields LoggersList public static Dictionary<Loggers.LoggerType, CLogger> LoggersList Field Value Dictionary<Loggers.LoggerType, CLogger>"
  },
  "api/Application.StartupManager.html": {
    "href": "api/Application.StartupManager.html",
    "title": "Class StartupManager | Czasoport Documentation",
    "keywords": "Class StartupManager Namespace Application public class StartupManager : MonoBehaviour Inheritance object StartupManager"
  },
  "api/Application.html": {
    "href": "api/Application.html",
    "title": "Namespace Application | Czasoport Documentation",
    "keywords": "Namespace Application Classes ApplicationSettingsSO Settings for entire application that defines variables for startup, core processes and shutdown GameManager Loggers StartupManager Enums Loggers.LoggerType"
  },
  "api/AudioSystem.GameMusicManager.html": {
    "href": "api/AudioSystem.GameMusicManager.html",
    "title": "Class GameMusicManager | Czasoport Documentation",
    "keywords": "Class GameMusicManager Namespace AudioSystem State of songs played on each timeline manager. public class GameMusicManager : MonoBehaviour Inheritance object GameMusicManager Fields FutureMusic public AudioClip FutureMusic Field Value AudioClip PastMusic public AudioClip PastMusic Field Value AudioClip PresentMusic public AudioClip PresentMusic Field Value AudioClip audioMixer public AudioMixer audioMixer Field Value AudioMixer musicPlayer public MusicPlayer musicPlayer Field Value MusicPlayer"
  },
  "api/AudioSystem.GameSFX.html": {
    "href": "api/AudioSystem.GameSFX.html",
    "title": "Class GameSFX | Czasoport Documentation",
    "keywords": "Class GameSFX Namespace AudioSystem public class GameSFX : SFX Inheritance object SFX GameSFX Inherited Members SFX.audioSource SFX.audioMixer SFX.CreateSoundPlayingEventHandler<T>(AudioClip) Fields itemPickedSound public AudioClip itemPickedSound Field Value AudioClip itemRemovedSound public AudioClip itemRemovedSound Field Value AudioClip Methods BindSoundsWithEvents() protected override void BindSoundsWithEvents()"
  },
  "api/AudioSystem.SFX.html": {
    "href": "api/AudioSystem.SFX.html",
    "title": "Class SFX | Czasoport Documentation",
    "keywords": "Class SFX Namespace AudioSystem Base class for associating events with sound effects. public abstract class SFX : MonoBehaviour Inheritance object SFX Derived GameSFX Fields audioMixer public AudioMixer audioMixer Field Value AudioMixer audioSource public AudioSource audioSource Field Value AudioSource Methods BindSoundsWithEvents() protected abstract void BindSoundsWithEvents() CreateSoundPlayingEventHandler<T>(AudioClip) protected EventHandler<T> CreateSoundPlayingEventHandler<T>(AudioClip clip) Parameters clip AudioClip Returns EventHandler<T> Type Parameters T"
  },
  "api/AudioSystem.html": {
    "href": "api/AudioSystem.html",
    "title": "Namespace AudioSystem | Czasoport Documentation",
    "keywords": "Namespace AudioSystem Classes GameMusicManager State of songs played on each timeline manager. GameSFX SFX Base class for associating events with sound effects."
  },
  "api/CustomInput.CInput.html": {
    "href": "api/CustomInput.CInput.html",
    "title": "Class CInput | Czasoport Documentation",
    "keywords": "Class CInput Namespace CustomInput Wrapper for automatically generated InputActions. Provides easier access to reading values from input, takes care of processing for common input values. Incorporates locking mechanism. public static class CInput Inheritance object CInput Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields GameInputLock public static readonly GameInputLock GameInputLock Field Value GameInputLock InputActions InputActions object that CInput is based on. Should be used if there is no wrapper implemented by CInput. public static readonly InputActions InputActions Field Value InputActions InteractionsLock public static readonly InteractionsLock InteractionsLock Field Value InteractionsLock InventoryLock public static readonly InventoryLock InventoryLock Field Value InventoryLock MouseLock public static readonly MouseLock MouseLock Field Value MouseLock MovementLock public static readonly MovementLock MovementLock Field Value MovementLock TeleportLock public static readonly TeleportLock TeleportLock Field Value TeleportLock Properties MousePosition Normal mouse position from InputActions. If you want point in game over which mouse is hovering, use MouseWorldPosition. public static Vector2 MousePosition { get; } Property Value Vector2 MouseWorldPosition Mouse position casted to world coordinates. public static Vector2 MouseWorldPosition { get; } Property Value Vector2 NavigationAxis Vector2 desired player direction/ public static Vector2 NavigationAxis { get; } Property Value Vector2 Run Whether player is running, and how fast he is running (effective on gamepads). public static float Run { get; } Property Value float"
  },
  "api/CustomInput.Exceptions.NoMainCameraException.html": {
    "href": "api/CustomInput.Exceptions.NoMainCameraException.html",
    "title": "Class NoMainCameraException | Czasoport Documentation",
    "keywords": "Class NoMainCameraException Namespace CustomInput.Exceptions public class NoMainCameraException : Exception, ISerializable Inheritance object Exception NoMainCameraException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NoMainCameraException() public NoMainCameraException() NoMainCameraException(string) public NoMainCameraException(string message) Parameters message string NoMainCameraException(string, Exception) public NoMainCameraException(string message, Exception inner) Parameters message string inner Exception"
  },
  "api/CustomInput.Exceptions.html": {
    "href": "api/CustomInput.Exceptions.html",
    "title": "Namespace CustomInput.Exceptions | Czasoport Documentation",
    "keywords": "Namespace CustomInput.Exceptions Classes NoMainCameraException"
  },
  "api/CustomInput.InputTest.html": {
    "href": "api/CustomInput.InputTest.html",
    "title": "Class InputTest | Czasoport Documentation",
    "keywords": "Class InputTest Namespace CustomInput public class InputTest : MonoBehaviour Inheritance object InputTest"
  },
  "api/CustomInput.Interactions.CustomHold.html": {
    "href": "api/CustomInput.Interactions.CustomHold.html",
    "title": "Class CustomHold | Czasoport Documentation",
    "keywords": "Class CustomHold Namespace CustomInput.Interactions public class CustomHold : IInputInteraction Inheritance object CustomHold Fields MinimalTime public float MinimalTime Field Value float Methods Process(ref InputInteractionContext) public void Process(ref InputInteractionContext context) Parameters context InputInteractionContext Reset() public void Reset()"
  },
  "api/CustomInput.Interactions.html": {
    "href": "api/CustomInput.Interactions.html",
    "title": "Namespace CustomInput.Interactions | Czasoport Documentation",
    "keywords": "Namespace CustomInput.Interactions Classes CustomHold"
  },
  "api/CustomInput.Locks.GameInputLock.html": {
    "href": "api/CustomInput.Locks.GameInputLock.html",
    "title": "Class GameInputLock | Czasoport Documentation",
    "keywords": "Class GameInputLock Namespace CustomInput.Locks Provides locking mechanism for Teleport actions. public class GameInputLock Inheritance object GameInputLock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GameInputLock(GameActions) public GameInputLock(InputActions.GameActions input) Parameters input InputActions.GameActions Methods Lock() Lets CustomInput know that current thread is not ready to receive input from user. 'Thread' safe, use instead of Enable and Disable on individual actions. public string Lock() Returns string Key that is needed to unlock the actions. Unlock(string) Lets CustomInput know that current thread is ready to receive input from user. public void Unlock(string key) Parameters key string Obtained by invoking Lock(). Exceptions Exception"
  },
  "api/CustomInput.Locks.InteractionsLock.html": {
    "href": "api/CustomInput.Locks.InteractionsLock.html",
    "title": "Class InteractionsLock | Czasoport Documentation",
    "keywords": "Class InteractionsLock Namespace CustomInput.Locks Provides locking mechanism for Interactions actions. public class InteractionsLock Inheritance object InteractionsLock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InteractionsLock(InteractionsActions) public InteractionsLock(InputActions.InteractionsActions input) Parameters input InputActions.InteractionsActions Methods Lock() Lets CustomInput know that current thread is not ready to receive input from user. 'Thread' safe, use instead of Enable and Disable on individual actions. public string Lock() Returns string Key that is needed to unlock the actions. Unlock(string) Lets CustomInput know that current thread is ready to receive input from user. public void Unlock(string key) Parameters key string Obtained by invoking Lock(). Exceptions Exception"
  },
  "api/CustomInput.Locks.InventoryLock.html": {
    "href": "api/CustomInput.Locks.InventoryLock.html",
    "title": "Class InventoryLock | Czasoport Documentation",
    "keywords": "Class InventoryLock Namespace CustomInput.Locks Provides locking mechanism for user Inventory actions. public class InventoryLock Inheritance object InventoryLock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InventoryLock(InventoryActions) public InventoryLock(InputActions.InventoryActions input) Parameters input InputActions.InventoryActions Methods Lock() Lets CustomInput know that current thread is not ready to receive input from user. 'Thread' safe, use instead of Enable and Disable on individual actions. public string Lock() Returns string Key that is needed to unlock the actions. Unlock(string) Lets CustomInput know that current thread is ready to receive input from user. public void Unlock(string key) Parameters key string Obtained by invoking Lock(). Exceptions Exception"
  },
  "api/CustomInput.Locks.MouseLock.html": {
    "href": "api/CustomInput.Locks.MouseLock.html",
    "title": "Class MouseLock | Czasoport Documentation",
    "keywords": "Class MouseLock Namespace CustomInput.Locks Provides locking mechanism for Mouse actions. public class MouseLock Inheritance object MouseLock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MouseLock(MouseActions) public MouseLock(InputActions.MouseActions input) Parameters input InputActions.MouseActions Methods Lock() Lets CustomInput know that current thread is not ready to receive input from user. 'Thread' safe, use instead of Enable and Disable on individual actions. public string Lock() Returns string Key that is needed to unlock the actions. Unlock(string) Lets CustomInput know that current thread is ready to receive input from user. public void Unlock(string key) Parameters key string Obtained by invoking Lock(). Exceptions Exception"
  },
  "api/CustomInput.Locks.MovementLock.html": {
    "href": "api/CustomInput.Locks.MovementLock.html",
    "title": "Class MovementLock | Czasoport Documentation",
    "keywords": "Class MovementLock Namespace CustomInput.Locks Provides locking mechanism for Movement actions. public class MovementLock Inheritance object MovementLock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MovementLock(MovementActions) public MovementLock(InputActions.MovementActions input) Parameters input InputActions.MovementActions Methods Lock() Lets CustomInput know that current thread is not ready to receive input from user. 'Thread' safe, use instead of Enable and Disable on individual actions. public string Lock() Returns string Key that is needed to unlock the actions. Unlock(string) Lets CustomInput know that current thread is ready to receive input from user. public void Unlock(string key) Parameters key string Obtained by invoking Lock(). Exceptions Exception"
  },
  "api/CustomInput.Locks.TeleportLock.html": {
    "href": "api/CustomInput.Locks.TeleportLock.html",
    "title": "Class TeleportLock | Czasoport Documentation",
    "keywords": "Class TeleportLock Namespace CustomInput.Locks Provides locking mechanism for Teleport actions. public class TeleportLock Inheritance object TeleportLock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TeleportLock(TeleportActions) public TeleportLock(InputActions.TeleportActions input) Parameters input InputActions.TeleportActions Methods Lock() Lets CustomInput know that current thread is not ready to receive input from user. 'Thread' safe, use instead of Enable and Disable on individual actions. public string Lock() Returns string Key that is needed to unlock the actions. Unlock(string) Lets CustomInput know that current thread is ready to receive input from user. public void Unlock(string key) Parameters key string Obtained by invoking Lock(). Exceptions Exception"
  },
  "api/CustomInput.Locks.html": {
    "href": "api/CustomInput.Locks.html",
    "title": "Namespace CustomInput.Locks | Czasoport Documentation",
    "keywords": "Namespace CustomInput.Locks Classes GameInputLock Provides locking mechanism for Teleport actions. InteractionsLock Provides locking mechanism for Interactions actions. InventoryLock Provides locking mechanism for user Inventory actions. MouseLock Provides locking mechanism for Mouse actions. MovementLock Provides locking mechanism for Movement actions. TeleportLock Provides locking mechanism for Teleport actions."
  },
  "api/CustomInput.html": {
    "href": "api/CustomInput.html",
    "title": "Namespace CustomInput | Czasoport Documentation",
    "keywords": "Namespace CustomInput Classes CInput Wrapper for automatically generated InputActions. Provides easier access to reading values from input, takes care of processing for common input values. Incorporates locking mechanism. InputTest"
  },
  "api/DataPersistence.DataPersistenceManager.html": {
    "href": "api/DataPersistence.DataPersistenceManager.html",
    "title": "Class DataPersistenceManager | Czasoport Documentation",
    "keywords": "Class DataPersistenceManager Namespace DataPersistence public class DataPersistenceManager : MonoBehaviour Inheritance object DataPersistenceManager Fields gameData [NonSerialized] public GameData gameData Field Value GameData Properties Instance public static DataPersistenceManager Instance { get; } Property Value DataPersistenceManager Methods CreateNewGame() public void CreateNewGame() LoadGame() public void LoadGame() LoadGameFromDisk() public void LoadGameFromDisk() SaveGame() public void SaveGame() SaveGameToDisk() public void SaveGameToDisk()"
  },
  "api/DataPersistence.DataTypes.NotificationGameData.html": {
    "href": "api/DataPersistence.DataTypes.NotificationGameData.html",
    "title": "Class NotificationGameData | Czasoport Documentation",
    "keywords": "Class NotificationGameData Namespace DataPersistence.DataTypes [Serializable] public class NotificationGameData Inheritance object NotificationGameData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NotificationGameData() public NotificationGameData() Fields notificationHistory public List<Notification> notificationHistory Field Value List<Notification>"
  },
  "api/DataPersistence.DataTypes.PlayerGameData.html": {
    "href": "api/DataPersistence.DataTypes.PlayerGameData.html",
    "title": "Class PlayerGameData | Czasoport Documentation",
    "keywords": "Class PlayerGameData Namespace DataPersistence.DataTypes [Serializable] public class PlayerGameData Inheritance object PlayerGameData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PlayerGameData() public PlayerGameData() Fields position public Vector2 position Field Value Vector2"
  },
  "api/DataPersistence.DataTypes.html": {
    "href": "api/DataPersistence.DataTypes.html",
    "title": "Namespace DataPersistence.DataTypes | Czasoport Documentation",
    "keywords": "Namespace DataPersistence.DataTypes Classes NotificationGameData PlayerGameData"
  },
  "api/DataPersistence.DefaultSaveDataSO.html": {
    "href": "api/DataPersistence.DefaultSaveDataSO.html",
    "title": "Class DefaultSaveDataSO | Czasoport Documentation",
    "keywords": "Class DefaultSaveDataSO Namespace DataPersistence Settings for entire application that defines variables for startup, core processes and shutdown public class DefaultSaveDataSO : ScriptableObject Inheritance object DefaultSaveDataSO Fields startingLevel public LevelInfoSO startingLevel Field Value LevelInfoSO startingPlayerPositionOffset public Vector2 startingPlayerPositionOffset Field Value Vector2 startingTimeline public TimeLine startingTimeline Field Value TimeLine"
  },
  "api/DataPersistence.FileDataHandler.html": {
    "href": "api/DataPersistence.FileDataHandler.html",
    "title": "Class FileDataHandler | Czasoport Documentation",
    "keywords": "Class FileDataHandler Namespace DataPersistence public class FileDataHandler Inheritance object FileDataHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FileDataHandler(string, string) public FileDataHandler(string saveDirectory, string saveFileName) Parameters saveDirectory string saveFileName string Methods Load() public GameData Load() Returns GameData Save(GameData) public bool Save(GameData gameData) Parameters gameData GameData Returns bool"
  },
  "api/DataPersistence.GameData.html": {
    "href": "api/DataPersistence.GameData.html",
    "title": "Class GameData | Czasoport Documentation",
    "keywords": "Class GameData Namespace DataPersistence [Serializable] public class GameData Inheritance object GameData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GameData() public GameData() Fields currentLevel public string currentLevel Field Value string currentTimeline public TimeLine currentTimeline Field Value TimeLine notificationGameData public NotificationGameData notificationGameData Field Value NotificationGameData playerGameData public PlayerGameData playerGameData Field Value PlayerGameData"
  },
  "api/DataPersistence.IDataPersistence.html": {
    "href": "api/DataPersistence.IDataPersistence.html",
    "title": "Interface IDataPersistence | Czasoport Documentation",
    "keywords": "Interface IDataPersistence Namespace DataPersistence public interface IDataPersistence Methods LoadPersistentData(GameData) void LoadPersistentData(GameData gameData) Parameters gameData GameData SavePersistentData(ref GameData) void SavePersistentData(ref GameData gameData) Parameters gameData GameData"
  },
  "api/DataPersistence.html": {
    "href": "api/DataPersistence.html",
    "title": "Namespace DataPersistence | Czasoport Documentation",
    "keywords": "Namespace DataPersistence Classes DataPersistenceManager DefaultSaveDataSO Settings for entire application that defines variables for startup, core processes and shutdown FileDataHandler GameData Interfaces IDataPersistence"
  },
  "api/DentedPixel.LTExamples.PathBezier.html": {
    "href": "api/DentedPixel.LTExamples.PathBezier.html",
    "title": "Class PathBezier | Czasoport Documentation",
    "keywords": "Class PathBezier Namespace DentedPixel.LTExamples public class PathBezier : MonoBehaviour Inheritance object PathBezier Fields trans public Transform[] trans Field Value Transform[]"
  },
  "api/DentedPixel.LTExamples.TestingUnitTests.html": {
    "href": "api/DentedPixel.LTExamples.TestingUnitTests.html",
    "title": "Class TestingUnitTests | Czasoport Documentation",
    "keywords": "Class TestingUnitTests Namespace DentedPixel.LTExamples public class TestingUnitTests : MonoBehaviour Inheritance object TestingUnitTests Fields cube1 public GameObject cube1 Field Value GameObject cube2 public GameObject cube2 Field Value GameObject cube3 public GameObject cube3 Field Value GameObject cube4 public GameObject cube4 Field Value GameObject cubeAlpha1 public GameObject cubeAlpha1 Field Value GameObject cubeAlpha2 public GameObject cubeAlpha2 Field Value GameObject"
  },
  "api/DentedPixel.LTExamples.html": {
    "href": "api/DentedPixel.LTExamples.html",
    "title": "Namespace DentedPixel.LTExamples | Czasoport Documentation",
    "keywords": "Namespace DentedPixel.LTExamples Classes PathBezier TestingUnitTests"
  },
  "api/DentedPixel.LeanDummy.html": {
    "href": "api/DentedPixel.LeanDummy.html",
    "title": "Class LeanDummy | Czasoport Documentation",
    "keywords": "Class LeanDummy Namespace DentedPixel public class LeanDummy Inheritance object LeanDummy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/DentedPixel.html": {
    "href": "api/DentedPixel.html",
    "title": "Namespace DentedPixel | Czasoport Documentation",
    "keywords": "Namespace DentedPixel Classes LeanDummy"
  },
  "api/Global.Audio.html": {
    "href": "api/Global.Audio.html",
    "title": "Class Audio | Czasoport Documentation",
    "keywords": "Class Audio Namespace Global public class Audio : MonoBehaviour Inheritance object Audio Fields itemPickedSound public AudioClip itemPickedSound Field Value AudioClip itemRemovedSound public AudioClip itemRemovedSound Field Value AudioClip"
  },
  "api/Global.CrossingLight.html": {
    "href": "api/Global.CrossingLight.html",
    "title": "Class CrossingLight | Czasoport Documentation",
    "keywords": "Class CrossingLight Namespace Global public class CrossingLight : MonoBehaviour Inheritance object CrossingLight Fields lightChangeInterval public float lightChangeInterval Field Value float"
  },
  "api/Global.Czasoport.html": {
    "href": "api/Global.Czasoport.html",
    "title": "Class Czasoport | Czasoport Documentation",
    "keywords": "Class Czasoport Namespace Global public class Czasoport : InteractableObject, IItemInteractable, IHandInteractable, ILongHandInteractable, ILongItemInteractable Inheritance object InteractableObject Czasoport Implements IItemInteractable IHandInteractable ILongHandInteractable ILongItemInteractable Inherited Members InteractableObject.definition InteractableObject.Logger InteractableObject.LongInteractionItem(Item) InteractableObject.LongInteractionHand() Methods InteractionHand() public override void InteractionHand() InteractionItem(Item) public override bool InteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/Global.CzasoportPart.html": {
    "href": "api/Global.CzasoportPart.html",
    "title": "Class CzasoportPart | Czasoport Documentation",
    "keywords": "Class CzasoportPart Namespace Global public class CzasoportPart : InteractableObject, IItemInteractable, IHandInteractable, ILongHandInteractable, ILongItemInteractable Inheritance object InteractableObject CzasoportPart Implements IItemInteractable IHandInteractable ILongHandInteractable ILongItemInteractable Inherited Members InteractableObject.definition InteractableObject.Logger InteractableObject.LongInteractionItem(Item) InteractableObject.LongInteractionHand() Methods InteractionHand() public override void InteractionHand() InteractionItem(Item) public override bool InteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/Global.ExampleSpline.html": {
    "href": "api/Global.ExampleSpline.html",
    "title": "Class ExampleSpline | Czasoport Documentation",
    "keywords": "Class ExampleSpline Namespace Global public class ExampleSpline : MonoBehaviour Inheritance object ExampleSpline Fields trans public Transform[] trans Field Value Transform[]"
  },
  "api/Global.FollowWorld.html": {
    "href": "api/Global.FollowWorld.html",
    "title": "Class FollowWorld | Czasoport Documentation",
    "keywords": "Class FollowWorld Namespace Global public class FollowWorld : MonoBehaviour Inheritance object FollowWorld"
  },
  "api/Global.Following.html": {
    "href": "api/Global.Following.html",
    "title": "Class Following | Czasoport Documentation",
    "keywords": "Class Following Namespace Global public class Following : MonoBehaviour Inheritance object Following Fields dude1 public Transform dude1 Field Value Transform dude1Title public Transform dude1Title Field Value Transform dude2 public Transform dude2 Field Value Transform dude2Title public Transform dude2Title Field Value Transform dude3 public Transform dude3 Field Value Transform dude3Title public Transform dude3Title Field Value Transform dude4 public Transform dude4 Field Value Transform dude4Title public Transform dude4Title Field Value Transform dude5 public Transform dude5 Field Value Transform dude5Title public Transform dude5Title Field Value Transform followArrow public Transform followArrow Field Value Transform planet public Transform planet Field Value Transform"
  },
  "api/Global.GeneralAdvancedTechniques.html": {
    "href": "api/Global.GeneralAdvancedTechniques.html",
    "title": "Class GeneralAdvancedTechniques | Czasoport Documentation",
    "keywords": "Class GeneralAdvancedTechniques Namespace Global public class GeneralAdvancedTechniques : MonoBehaviour Inheritance object GeneralAdvancedTechniques Fields avatar2dRecursive public GameObject avatar2dRecursive Field Value GameObject avatarMove public GameObject avatarMove Field Value GameObject avatarRecursive public GameObject avatarRecursive Field Value GameObject avatarSpeed public GameObject[] avatarSpeed Field Value GameObject[] avatarSpeed2 public GameObject[] avatarSpeed2 Field Value GameObject[] movePts public Transform[] movePts Field Value Transform[] textField public RectTransform textField Field Value RectTransform wingPersonPanel public RectTransform wingPersonPanel Field Value RectTransform"
  },
  "api/Global.GeneralBasic.html": {
    "href": "api/Global.GeneralBasic.html",
    "title": "Class GeneralBasic | Czasoport Documentation",
    "keywords": "Class GeneralBasic Namespace Global public class GeneralBasic : MonoBehaviour Inheritance object GeneralBasic Fields prefabAvatar public GameObject prefabAvatar Field Value GameObject"
  },
  "api/Global.GeneralBasics2d.html": {
    "href": "api/Global.GeneralBasics2d.html",
    "title": "Class GeneralBasics2d | Czasoport Documentation",
    "keywords": "Class GeneralBasics2d Namespace Global public class GeneralBasics2d : MonoBehaviour Inheritance object GeneralBasics2d Fields dudeTexture public Texture2D dudeTexture Field Value Texture2D prefabParticles public GameObject prefabParticles Field Value GameObject"
  },
  "api/Global.GeneralCameraShake.html": {
    "href": "api/Global.GeneralCameraShake.html",
    "title": "Class GeneralCameraShake | Czasoport Documentation",
    "keywords": "Class GeneralCameraShake Namespace Global public class GeneralCameraShake : MonoBehaviour Inheritance object GeneralCameraShake"
  },
  "api/Global.GeneralEasingTypes.html": {
    "href": "api/Global.GeneralEasingTypes.html",
    "title": "Class GeneralEasingTypes | Czasoport Documentation",
    "keywords": "Class GeneralEasingTypes Namespace Global public class GeneralEasingTypes : MonoBehaviour Inheritance object GeneralEasingTypes Fields animationCurve public AnimationCurve animationCurve Field Value AnimationCurve lineDrawScale public float lineDrawScale Field Value float"
  },
  "api/Global.GeneralEventsListeners.MyEvents.html": {
    "href": "api/Global.GeneralEventsListeners.MyEvents.html",
    "title": "Enum GeneralEventsListeners.MyEvents | Czasoport Documentation",
    "keywords": "Enum GeneralEventsListeners.MyEvents Namespace Global public enum GeneralEventsListeners.MyEvents Fields CHANGE_COLOR = 0 JUMP = 1 LENGTH = 2"
  },
  "api/Global.GeneralEventsListeners.html": {
    "href": "api/Global.GeneralEventsListeners.html",
    "title": "Class GeneralEventsListeners | Czasoport Documentation",
    "keywords": "Class GeneralEventsListeners Namespace Global public class GeneralEventsListeners : MonoBehaviour Inheritance object GeneralEventsListeners"
  },
  "api/Global.GeneralSequencer.html": {
    "href": "api/Global.GeneralSequencer.html",
    "title": "Class GeneralSequencer | Czasoport Documentation",
    "keywords": "Class GeneralSequencer Namespace Global public class GeneralSequencer : MonoBehaviour Inheritance object GeneralSequencer Fields avatar1 public GameObject avatar1 Field Value GameObject dustCloudPrefab public GameObject dustCloudPrefab Field Value GameObject speedScale public float speedScale Field Value float star public GameObject star Field Value GameObject Methods Start() public void Start()"
  },
  "api/Global.GeneralSimpleUI.html": {
    "href": "api/Global.GeneralSimpleUI.html",
    "title": "Class GeneralSimpleUI | Czasoport Documentation",
    "keywords": "Class GeneralSimpleUI Namespace Global public class GeneralSimpleUI : MonoBehaviour Inheritance object GeneralSimpleUI Fields button public RectTransform button Field Value RectTransform"
  },
  "api/Global.GeneralUISpace.html": {
    "href": "api/Global.GeneralUISpace.html",
    "title": "Class GeneralUISpace | Czasoport Documentation",
    "keywords": "Class GeneralUISpace Namespace Global public class GeneralUISpace : MonoBehaviour Inheritance object GeneralUISpace Fields chatBar1 public RectTransform chatBar1 Field Value RectTransform chatBar2 public RectTransform chatBar2 Field Value RectTransform chatRect public RectTransform chatRect Field Value RectTransform chatSprites public Sprite[] chatSprites Field Value Sprite[] chatText public UnityEngine.UI.Text chatText Field Value Text chatWindow public RectTransform chatWindow Field Value RectTransform mainButton1 public RectTransform mainButton1 Field Value RectTransform mainButton2 public RectTransform mainButton2 Field Value RectTransform mainParagraphText public RectTransform mainParagraphText Field Value RectTransform mainTitleText public RectTransform mainTitleText Field Value RectTransform mainWindow public RectTransform mainWindow Field Value RectTransform pauseRing1 public RectTransform pauseRing1 Field Value RectTransform pauseRing2 public RectTransform pauseRing2 Field Value RectTransform pauseWindow public RectTransform pauseWindow Field Value RectTransform rawImageRect public RectTransform rawImageRect Field Value RectTransform"
  },
  "api/Global.InputActions.GameActions.html": {
    "href": "api/Global.InputActions.GameActions.html",
    "title": "Struct InputActions.GameActions | Czasoport Documentation",
    "keywords": "Struct InputActions.GameActions Namespace Global public struct InputActions.GameActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors GameActions(InputActions) public GameActions(InputActions wrapper) Parameters wrapper InputActions Properties TogglePause public InputAction TogglePause { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(IGameActions) public void SetCallbacks(InputActions.IGameActions instance) Parameters instance InputActions.IGameActions Operators implicit operator InputActionMap(GameActions) public static implicit operator InputActionMap(InputActions.GameActions set) Parameters set InputActions.GameActions Returns InputActionMap"
  },
  "api/Global.InputActions.IGameActions.html": {
    "href": "api/Global.InputActions.IGameActions.html",
    "title": "Interface InputActions.IGameActions | Czasoport Documentation",
    "keywords": "Interface InputActions.IGameActions Namespace Global public interface InputActions.IGameActions Methods OnTogglePause(CallbackContext) void OnTogglePause(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/Global.InputActions.IInteractionsActions.html": {
    "href": "api/Global.InputActions.IInteractionsActions.html",
    "title": "Interface InputActions.IInteractionsActions | Czasoport Documentation",
    "keywords": "Interface InputActions.IInteractionsActions Namespace Global public interface InputActions.IInteractionsActions Methods OnInteraction(CallbackContext) void OnInteraction(InputAction.CallbackContext context) Parameters context CallbackContext OnLongInteraction(CallbackContext) void OnLongInteraction(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/Global.InputActions.IInventoryActions.html": {
    "href": "api/Global.InputActions.IInventoryActions.html",
    "title": "Interface InputActions.IInventoryActions | Czasoport Documentation",
    "keywords": "Interface InputActions.IInventoryActions Namespace Global public interface InputActions.IInventoryActions Methods OnChooseItem(CallbackContext) void OnChooseItem(InputAction.CallbackContext context) Parameters context CallbackContext OnDrop(CallbackContext) void OnDrop(InputAction.CallbackContext context) Parameters context CallbackContext OnNextItem(CallbackContext) void OnNextItem(InputAction.CallbackContext context) Parameters context CallbackContext OnPreviousItem(CallbackContext) void OnPreviousItem(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/Global.InputActions.IMouseActions.html": {
    "href": "api/Global.InputActions.IMouseActions.html",
    "title": "Interface InputActions.IMouseActions | Czasoport Documentation",
    "keywords": "Interface InputActions.IMouseActions Namespace Global public interface InputActions.IMouseActions Methods OnLeftClick(CallbackContext) void OnLeftClick(InputAction.CallbackContext context) Parameters context CallbackContext OnMiddleClick(CallbackContext) void OnMiddleClick(InputAction.CallbackContext context) Parameters context CallbackContext OnMousePosition(CallbackContext) void OnMousePosition(InputAction.CallbackContext context) Parameters context CallbackContext OnRightClick(CallbackContext) void OnRightClick(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/Global.InputActions.IMovementActions.html": {
    "href": "api/Global.InputActions.IMovementActions.html",
    "title": "Interface InputActions.IMovementActions | Czasoport Documentation",
    "keywords": "Interface InputActions.IMovementActions Namespace Global public interface InputActions.IMovementActions Methods OnFocusChange(CallbackContext) void OnFocusChange(InputAction.CallbackContext context) Parameters context CallbackContext OnNavigation(CallbackContext) void OnNavigation(InputAction.CallbackContext context) Parameters context CallbackContext OnRun(CallbackContext) void OnRun(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/Global.InputActions.ITeleportActions.html": {
    "href": "api/Global.InputActions.ITeleportActions.html",
    "title": "Interface InputActions.ITeleportActions | Czasoport Documentation",
    "keywords": "Interface InputActions.ITeleportActions Namespace Global public interface InputActions.ITeleportActions Methods OnTeleportBack(CallbackContext) void OnTeleportBack(InputAction.CallbackContext context) Parameters context CallbackContext OnTeleportForward(CallbackContext) void OnTeleportForward(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/Global.InputActions.InteractionsActions.html": {
    "href": "api/Global.InputActions.InteractionsActions.html",
    "title": "Struct InputActions.InteractionsActions | Czasoport Documentation",
    "keywords": "Struct InputActions.InteractionsActions Namespace Global public struct InputActions.InteractionsActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors InteractionsActions(InputActions) public InteractionsActions(InputActions wrapper) Parameters wrapper InputActions Properties Interaction public InputAction Interaction { get; } Property Value InputAction LongInteraction public InputAction LongInteraction { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(IInteractionsActions) public void SetCallbacks(InputActions.IInteractionsActions instance) Parameters instance InputActions.IInteractionsActions Operators implicit operator InputActionMap(InteractionsActions) public static implicit operator InputActionMap(InputActions.InteractionsActions set) Parameters set InputActions.InteractionsActions Returns InputActionMap"
  },
  "api/Global.InputActions.InventoryActions.html": {
    "href": "api/Global.InputActions.InventoryActions.html",
    "title": "Struct InputActions.InventoryActions | Czasoport Documentation",
    "keywords": "Struct InputActions.InventoryActions Namespace Global public struct InputActions.InventoryActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors InventoryActions(InputActions) public InventoryActions(InputActions wrapper) Parameters wrapper InputActions Properties ChooseItem public InputAction ChooseItem { get; } Property Value InputAction Drop public InputAction Drop { get; } Property Value InputAction NextItem public InputAction NextItem { get; } Property Value InputAction PreviousItem public InputAction PreviousItem { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(IInventoryActions) public void SetCallbacks(InputActions.IInventoryActions instance) Parameters instance InputActions.IInventoryActions Operators implicit operator InputActionMap(InventoryActions) public static implicit operator InputActionMap(InputActions.InventoryActions set) Parameters set InputActions.InventoryActions Returns InputActionMap"
  },
  "api/Global.InputActions.MouseActions.html": {
    "href": "api/Global.InputActions.MouseActions.html",
    "title": "Struct InputActions.MouseActions | Czasoport Documentation",
    "keywords": "Struct InputActions.MouseActions Namespace Global public struct InputActions.MouseActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors MouseActions(InputActions) public MouseActions(InputActions wrapper) Parameters wrapper InputActions Properties LeftClick public InputAction LeftClick { get; } Property Value InputAction MiddleClick public InputAction MiddleClick { get; } Property Value InputAction MousePosition public InputAction MousePosition { get; } Property Value InputAction RightClick public InputAction RightClick { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(IMouseActions) public void SetCallbacks(InputActions.IMouseActions instance) Parameters instance InputActions.IMouseActions Operators implicit operator InputActionMap(MouseActions) public static implicit operator InputActionMap(InputActions.MouseActions set) Parameters set InputActions.MouseActions Returns InputActionMap"
  },
  "api/Global.InputActions.MovementActions.html": {
    "href": "api/Global.InputActions.MovementActions.html",
    "title": "Struct InputActions.MovementActions | Czasoport Documentation",
    "keywords": "Struct InputActions.MovementActions Namespace Global public struct InputActions.MovementActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors MovementActions(InputActions) public MovementActions(InputActions wrapper) Parameters wrapper InputActions Properties FocusChange public InputAction FocusChange { get; } Property Value InputAction Navigation public InputAction Navigation { get; } Property Value InputAction Run public InputAction Run { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(IMovementActions) public void SetCallbacks(InputActions.IMovementActions instance) Parameters instance InputActions.IMovementActions Operators implicit operator InputActionMap(MovementActions) public static implicit operator InputActionMap(InputActions.MovementActions set) Parameters set InputActions.MovementActions Returns InputActionMap"
  },
  "api/Global.InputActions.TeleportActions.html": {
    "href": "api/Global.InputActions.TeleportActions.html",
    "title": "Struct InputActions.TeleportActions | Czasoport Documentation",
    "keywords": "Struct InputActions.TeleportActions Namespace Global public struct InputActions.TeleportActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TeleportActions(InputActions) public TeleportActions(InputActions wrapper) Parameters wrapper InputActions Properties TeleportBack public InputAction TeleportBack { get; } Property Value InputAction TeleportForward public InputAction TeleportForward { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(ITeleportActions) public void SetCallbacks(InputActions.ITeleportActions instance) Parameters instance InputActions.ITeleportActions Operators implicit operator InputActionMap(TeleportActions) public static implicit operator InputActionMap(InputActions.TeleportActions set) Parameters set InputActions.TeleportActions Returns InputActionMap"
  },
  "api/Global.InputActions.html": {
    "href": "api/Global.InputActions.html",
    "title": "Class InputActions | Czasoport Documentation",
    "keywords": "Class InputActions Namespace Global public class InputActions : IInputActionCollection2, IDisposable Inheritance object InputActions Implements IDisposable Constructors InputActions() public InputActions() Properties Game public InputActions.GameActions Game { get; } Property Value InputActions.GameActions Interactions public InputActions.InteractionsActions Interactions { get; } Property Value InputActions.InteractionsActions Inventory public InputActions.InventoryActions Inventory { get; } Property Value InputActions.InventoryActions Mouse public InputActions.MouseActions Mouse { get; } Property Value InputActions.MouseActions Movement public InputActions.MovementActions Movement { get; } Property Value InputActions.MovementActions Teleport public InputActions.TeleportActions Teleport { get; } Property Value InputActions.TeleportActions asset public InputActionAsset asset { get; } Property Value InputActionAsset bindingMask public InputBinding? bindingMask { get; set; } Property Value InputBinding? bindings public IEnumerable<InputBinding> bindings { get; } Property Value IEnumerable<InputBinding> controlSchemes public ReadOnlyArray<InputControlScheme> controlSchemes { get; } Property Value ReadOnlyArray<InputControlScheme> devices public ReadOnlyArray<InputDevice>? devices { get; set; } Property Value ReadOnlyArray<InputDevice>? Methods Contains(InputAction) public bool Contains(InputAction action) Parameters action InputAction Returns bool Disable() public void Disable() Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Enable() public void Enable() FindAction(string, bool) public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false) Parameters actionNameOrId string throwIfNotFound bool Returns InputAction FindBinding(InputBinding, out InputAction) public int FindBinding(InputBinding bindingMask, out InputAction action) Parameters bindingMask InputBinding action InputAction Returns int GetEnumerator() public IEnumerator<InputAction> GetEnumerator() Returns IEnumerator<InputAction>"
  },
  "api/Global.LTBezier.html": {
    "href": "api/Global.LTBezier.html",
    "title": "Class LTBezier | Czasoport Documentation",
    "keywords": "Class LTBezier Namespace Global public class LTBezier Inheritance object LTBezier Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LTBezier(Vector3, Vector3, Vector3, Vector3, float) public LTBezier(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float precision) Parameters a Vector3 b Vector3 c Vector3 d Vector3 precision float Fields length public float length Field Value float Methods point(float) public Vector3 point(float t) Parameters t float Returns Vector3"
  },
  "api/Global.LTBezierPath.html": {
    "href": "api/Global.LTBezierPath.html",
    "title": "Class LTBezierPath | Czasoport Documentation",
    "keywords": "Class LTBezierPath Namespace Global public class LTBezierPath Inheritance object LTBezierPath Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LTBezierPath() public LTBezierPath() LTBezierPath(Vector3[]) public LTBezierPath(Vector3[] pts_) Parameters pts_ Vector3[] Fields length public float length Field Value float orientToPath public bool orientToPath Field Value bool orientToPath2d public bool orientToPath2d Field Value bool pts public Vector3[] pts Field Value Vector3[] Properties distance public float distance { get; } Property Value float Methods gizmoDraw(float) public void gizmoDraw(float t = -1) Parameters t float place(Transform, float) Place an object along a certain point on the path (facing the direction perpendicular to the path) public void place(Transform transform, float ratio) Parameters transform Transform ratio float place(Transform, float, Vector3) Place an object along a certain point on the path, with it facing a certain direction perpendicular to the path public void place(Transform transform, float ratio, Vector3 worldUp) Parameters transform Transform ratio float worldUp Vector3 place2d(Transform, float) public void place2d(Transform transform, float ratio) Parameters transform Transform ratio float placeLocal(Transform, float) Place an object along a certain point on the path (facing the direction perpendicular to the path) - Local Space, not world-space public void placeLocal(Transform transform, float ratio) Parameters transform Transform ratio float placeLocal(Transform, float, Vector3) Place an object along a certain point on the path, with it facing a certain direction perpendicular to the path - Local Space, not world-space public void placeLocal(Transform transform, float ratio, Vector3 worldUp) Parameters transform Transform ratio float worldUp Vector3 placeLocal2d(Transform, float) public void placeLocal2d(Transform transform, float ratio) Parameters transform Transform ratio float point(float) Retrieve a point along a path public Vector3 point(float ratio) Parameters ratio float Returns Vector3 ratioAtPoint(Vector3, float) Retrieve the closest ratio near the point public float ratioAtPoint(Vector3 pt, float precision = 0.01) Parameters pt Vector3 precision float Returns float setPoints(Vector3[]) public void setPoints(Vector3[] pts_) Parameters pts_ Vector3[]"
  },
  "api/Global.LTDescr.ActionMethodDelegate.html": {
    "href": "api/Global.LTDescr.ActionMethodDelegate.html",
    "title": "Delegate LTDescr.ActionMethodDelegate | Czasoport Documentation",
    "keywords": "Delegate LTDescr.ActionMethodDelegate Namespace Global public delegate void LTDescr.ActionMethodDelegate()"
  },
  "api/Global.LTDescr.EaseTypeDelegate.html": {
    "href": "api/Global.LTDescr.EaseTypeDelegate.html",
    "title": "Delegate LTDescr.EaseTypeDelegate | Czasoport Documentation",
    "keywords": "Delegate LTDescr.EaseTypeDelegate Namespace Global public delegate Vector3 LTDescr.EaseTypeDelegate() Returns Vector3"
  },
  "api/Global.LTDescr.html": {
    "href": "api/Global.LTDescr.html",
    "title": "Class LTDescr | Czasoport Documentation",
    "keywords": "Class LTDescr Namespace Global public class LTDescr Inheritance object LTDescr Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LTDescr() public LTDescr() Fields _optional public LTDescrOptional _optional Field Value LTDescrOptional counter public uint counter Field Value uint delay public float delay Field Value float destroyOnComplete public bool destroyOnComplete Field Value bool direction public float direction Field Value float directionLast public float directionLast Field Value float dt public static float dt Field Value float easeMethod public LTDescr.EaseTypeDelegate easeMethod Field Value LTDescr.EaseTypeDelegate hasExtraOnCompletes public bool hasExtraOnCompletes Field Value bool hasInitiliazed public bool hasInitiliazed Field Value bool hasPhysics public bool hasPhysics Field Value bool hasUpdateCallback public bool hasUpdateCallback Field Value bool lastVal public float lastVal Field Value float loopCount public int loopCount Field Value int loopType public LeanTweenType loopType Field Value LeanTweenType newVect public static Vector3 newVect Field Value Vector3 onCompleteOnRepeat public bool onCompleteOnRepeat Field Value bool onCompleteOnStart public bool onCompleteOnStart Field Value bool overshoot public float overshoot Field Value float passed public float passed Field Value float period public float period Field Value float ratioPassed public float ratioPassed Field Value float rawImage public UnityEngine.UI.RawImage rawImage Field Value RawImage rectTransform public RectTransform rectTransform Field Value RectTransform scale public float scale Field Value float speed public float speed Field Value float spriteRen public SpriteRenderer spriteRen Field Value SpriteRenderer sprites public UnityEngine.Sprite[] sprites Field Value Sprite[] time public float time Field Value float toggle public bool toggle Field Value bool trans public Transform trans Field Value Transform type public TweenAction type Field Value TweenAction uiImage public UnityEngine.UI.Image uiImage Field Value Image uiText public UnityEngine.UI.Text uiText Field Value Text useEstimatedTime public bool useEstimatedTime Field Value bool useFrames public bool useFrames Field Value bool useManualTime public bool useManualTime Field Value bool useRecursion public bool useRecursion Field Value bool usesNormalDt public bool usesNormalDt Field Value bool val public static float val Field Value float Properties easeInternal public LTDescr.ActionMethodDelegate easeInternal { get; set; } Property Value LTDescr.ActionMethodDelegate from public Vector3 from { get; set; } Property Value Vector3 id public int id { get; } Property Value int initInternal public LTDescr.ActionMethodDelegate initInternal { get; set; } Property Value LTDescr.ActionMethodDelegate optional public LTDescrOptional optional { get; set; } Property Value LTDescrOptional to public Vector3 to { get; set; } Property Value Vector3 toTrans public Transform toTrans { get; } Property Value Transform uniqueId public int uniqueId { get; } Property Value int Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. callOnCompletes() public void callOnCompletes() cancel(GameObject) [Obsolete(\"Use 'LeanTween.cancel( id )' instead\")] public LTDescr cancel(GameObject gameObject) Parameters gameObject GameObject Returns LTDescr pause() public LTDescr pause() Returns LTDescr reset() public void reset() resume() public LTDescr resume() Returns LTDescr setAlpha() public LTDescr setAlpha() Returns LTDescr setAlphaVertex() public LTDescr setAlphaVertex() Returns LTDescr setAudio(object) public LTDescr setAudio(object audio) Parameters audio object Returns LTDescr setAxis(Vector3) public LTDescr setAxis(Vector3 axis) Parameters axis Vector3 Returns LTDescr setCallback() public LTDescr setCallback() Returns LTDescr setCallbackColor() public LTDescr setCallbackColor() Returns LTDescr setCanvasAlpha() public LTDescr setCanvasAlpha() Returns LTDescr setCanvasColor() public LTDescr setCanvasColor() Returns LTDescr setCanvasGroupAlpha() public LTDescr setCanvasGroupAlpha() Returns LTDescr setCanvasMove() public LTDescr setCanvasMove() Returns LTDescr setCanvasMoveX() public LTDescr setCanvasMoveX() Returns LTDescr setCanvasMoveY() public LTDescr setCanvasMoveY() Returns LTDescr setCanvasMoveZ() public LTDescr setCanvasMoveZ() Returns LTDescr setCanvasPlaySprite() public LTDescr setCanvasPlaySprite() Returns LTDescr setCanvasRotateAround() public LTDescr setCanvasRotateAround() Returns LTDescr setCanvasRotateAroundLocal() public LTDescr setCanvasRotateAroundLocal() Returns LTDescr setCanvasScale() public LTDescr setCanvasScale() Returns LTDescr setCanvasSizeDelta() public LTDescr setCanvasSizeDelta() Returns LTDescr setColor() public LTDescr setColor() Returns LTDescr setDelay(float) public LTDescr setDelay(float delay) Parameters delay float Returns LTDescr setDelayedSound() public LTDescr setDelayedSound() Returns LTDescr setDestroyOnComplete(bool) public LTDescr setDestroyOnComplete(bool doesDestroy) Parameters doesDestroy bool Returns LTDescr setDiff(Vector3) public LTDescr setDiff(Vector3 diff) Parameters diff Vector3 Returns LTDescr setDirection(float) public LTDescr setDirection(float direction) Parameters direction float Returns LTDescr setEase(AnimationCurve) public LTDescr setEase(AnimationCurve easeCurve) Parameters easeCurve AnimationCurve Returns LTDescr setEase(LeanTweenType) public LTDescr setEase(LeanTweenType easeType) Parameters easeType LeanTweenType Returns LTDescr setEaseInBack() public LTDescr setEaseInBack() Returns LTDescr setEaseInBounce() public LTDescr setEaseInBounce() Returns LTDescr setEaseInCirc() public LTDescr setEaseInCirc() Returns LTDescr setEaseInCubic() public LTDescr setEaseInCubic() Returns LTDescr setEaseInElastic() public LTDescr setEaseInElastic() Returns LTDescr setEaseInExpo() public LTDescr setEaseInExpo() Returns LTDescr setEaseInOutBack() public LTDescr setEaseInOutBack() Returns LTDescr setEaseInOutBounce() public LTDescr setEaseInOutBounce() Returns LTDescr setEaseInOutCirc() public LTDescr setEaseInOutCirc() Returns LTDescr setEaseInOutCubic() public LTDescr setEaseInOutCubic() Returns LTDescr setEaseInOutElastic() public LTDescr setEaseInOutElastic() Returns LTDescr setEaseInOutExpo() public LTDescr setEaseInOutExpo() Returns LTDescr setEaseInOutQuad() public LTDescr setEaseInOutQuad() Returns LTDescr setEaseInOutQuart() public LTDescr setEaseInOutQuart() Returns LTDescr setEaseInOutQuint() public LTDescr setEaseInOutQuint() Returns LTDescr setEaseInOutSine() public LTDescr setEaseInOutSine() Returns LTDescr setEaseInQuad() public LTDescr setEaseInQuad() Returns LTDescr setEaseInQuart() public LTDescr setEaseInQuart() Returns LTDescr setEaseInQuint() public LTDescr setEaseInQuint() Returns LTDescr setEaseInSine() public LTDescr setEaseInSine() Returns LTDescr setEaseLinear() public LTDescr setEaseLinear() Returns LTDescr setEaseOutBack() public LTDescr setEaseOutBack() Returns LTDescr setEaseOutBounce() public LTDescr setEaseOutBounce() Returns LTDescr setEaseOutCirc() public LTDescr setEaseOutCirc() Returns LTDescr setEaseOutCubic() public LTDescr setEaseOutCubic() Returns LTDescr setEaseOutElastic() public LTDescr setEaseOutElastic() Returns LTDescr setEaseOutExpo() public LTDescr setEaseOutExpo() Returns LTDescr setEaseOutQuad() public LTDescr setEaseOutQuad() Returns LTDescr setEaseOutQuart() public LTDescr setEaseOutQuart() Returns LTDescr setEaseOutQuint() public LTDescr setEaseOutQuint() Returns LTDescr setEaseOutSine() public LTDescr setEaseOutSine() Returns LTDescr setEasePunch() public LTDescr setEasePunch() Returns LTDescr setEaseShake() public LTDescr setEaseShake() Returns LTDescr setEaseSpring() public LTDescr setEaseSpring() Returns LTDescr setFollow() public LTDescr setFollow() Returns LTDescr setFrameRate(float) public LTDescr setFrameRate(float frameRate) Parameters frameRate float Returns LTDescr setFrom(float) public LTDescr setFrom(float from) Parameters from float Returns LTDescr setFrom(Vector3) public LTDescr setFrom(Vector3 from) Parameters from Vector3 Returns LTDescr setFromColor(Color) public LTDescr setFromColor(Color col) Parameters col Color Returns LTDescr setGUIAlpha() public LTDescr setGUIAlpha() Returns LTDescr setGUIMove() public LTDescr setGUIMove() Returns LTDescr setGUIMoveMargin() public LTDescr setGUIMoveMargin() Returns LTDescr setGUIRotate() public LTDescr setGUIRotate() Returns LTDescr setGUIScale() public LTDescr setGUIScale() Returns LTDescr setHasInitialized(bool) public LTDescr setHasInitialized(bool has) Parameters has bool Returns LTDescr setId(uint, uint) public LTDescr setId(uint id, uint global_counter) Parameters id uint global_counter uint Returns LTDescr setIgnoreTimeScale(bool) public LTDescr setIgnoreTimeScale(bool useUnScaledTime) Parameters useUnScaledTime bool Returns LTDescr setLoopClamp() public LTDescr setLoopClamp() Returns LTDescr setLoopClamp(int) public LTDescr setLoopClamp(int loops) Parameters loops int Returns LTDescr setLoopCount(int) public LTDescr setLoopCount(int loopCount) Parameters loopCount int Returns LTDescr setLoopOnce() public LTDescr setLoopOnce() Returns LTDescr setLoopPingPong() public LTDescr setLoopPingPong() Returns LTDescr setLoopPingPong(int) public LTDescr setLoopPingPong(int loops) Parameters loops int Returns LTDescr setLoopType(LeanTweenType) public LTDescr setLoopType(LeanTweenType loopType) Parameters loopType LeanTweenType Returns LTDescr setMove() public LTDescr setMove() Returns LTDescr setMoveCurved() public LTDescr setMoveCurved() Returns LTDescr setMoveCurvedLocal() public LTDescr setMoveCurvedLocal() Returns LTDescr setMoveLocal() public LTDescr setMoveLocal() Returns LTDescr setMoveLocalX() public LTDescr setMoveLocalX() Returns LTDescr setMoveLocalY() public LTDescr setMoveLocalY() Returns LTDescr setMoveLocalZ() public LTDescr setMoveLocalZ() Returns LTDescr setMoveSpline() public LTDescr setMoveSpline() Returns LTDescr setMoveSplineLocal() public LTDescr setMoveSplineLocal() Returns LTDescr setMoveToTransform() public LTDescr setMoveToTransform() Returns LTDescr setMoveX() public LTDescr setMoveX() Returns LTDescr setMoveY() public LTDescr setMoveY() Returns LTDescr setMoveZ() public LTDescr setMoveZ() Returns LTDescr setOffset(Vector3) public LTDescr setOffset(Vector3 offset) Parameters offset Vector3 Returns LTDescr setOnComplete(Action) public LTDescr setOnComplete(Action onComplete) Parameters onComplete Action Returns LTDescr setOnComplete(Action<object>) public LTDescr setOnComplete(Action<object> onComplete) Parameters onComplete Action<object> Returns LTDescr setOnComplete(Action<object>, object) public LTDescr setOnComplete(Action<object> onComplete, object onCompleteParam) Parameters onComplete Action<object> onCompleteParam object Returns LTDescr setOnCompleteOnRepeat(bool) public LTDescr setOnCompleteOnRepeat(bool isOn) Parameters isOn bool Returns LTDescr setOnCompleteOnStart(bool) public LTDescr setOnCompleteOnStart(bool isOn) Parameters isOn bool Returns LTDescr setOnCompleteParam(object) public LTDescr setOnCompleteParam(object onCompleteParam) Parameters onCompleteParam object Returns LTDescr setOnStart(Action) public LTDescr setOnStart(Action onStart) Parameters onStart Action Returns LTDescr setOnUpdate(Action<Color, object>) public LTDescr setOnUpdate(Action<Color, object> onUpdate) Parameters onUpdate Action<Color, object> Returns LTDescr setOnUpdate(Action<Color>) public LTDescr setOnUpdate(Action<Color> onUpdate) Parameters onUpdate Action<Color> Returns LTDescr setOnUpdate(Action<float, object>, object) public LTDescr setOnUpdate(Action<float, object> onUpdate, object onUpdateParam = null) Parameters onUpdate Action<float, object> onUpdateParam object Returns LTDescr setOnUpdate(Action<float>) public LTDescr setOnUpdate(Action<float> onUpdate) Parameters onUpdate Action<float> Returns LTDescr setOnUpdate(Action<Vector2>, object) public LTDescr setOnUpdate(Action<Vector2> onUpdate, object onUpdateParam = null) Parameters onUpdate Action<Vector2> onUpdateParam object Returns LTDescr setOnUpdate(Action<Vector3, object>, object) public LTDescr setOnUpdate(Action<Vector3, object> onUpdate, object onUpdateParam = null) Parameters onUpdate Action<Vector3, object> onUpdateParam object Returns LTDescr setOnUpdate(Action<Vector3>, object) public LTDescr setOnUpdate(Action<Vector3> onUpdate, object onUpdateParam = null) Parameters onUpdate Action<Vector3> onUpdateParam object Returns LTDescr setOnUpdateColor(Action<Color, object>) public LTDescr setOnUpdateColor(Action<Color, object> onUpdate) Parameters onUpdate Action<Color, object> Returns LTDescr setOnUpdateColor(Action<Color>) public LTDescr setOnUpdateColor(Action<Color> onUpdate) Parameters onUpdate Action<Color> Returns LTDescr setOnUpdateObject(Action<float, object>) public LTDescr setOnUpdateObject(Action<float, object> onUpdate) Parameters onUpdate Action<float, object> Returns LTDescr setOnUpdateParam(object) public LTDescr setOnUpdateParam(object onUpdateParam) Parameters onUpdateParam object Returns LTDescr setOnUpdateRatio(Action<float, float>) public LTDescr setOnUpdateRatio(Action<float, float> onUpdate) Parameters onUpdate Action<float, float> Returns LTDescr setOnUpdateVector2(Action<Vector2>) public LTDescr setOnUpdateVector2(Action<Vector2> onUpdate) Parameters onUpdate Action<Vector2> Returns LTDescr setOnUpdateVector3(Action<Vector3>) public LTDescr setOnUpdateVector3(Action<Vector3> onUpdate) Parameters onUpdate Action<Vector3> Returns LTDescr setOrientToPath(bool) public LTDescr setOrientToPath(bool doesOrient) Parameters doesOrient bool Returns LTDescr setOrientToPath2d(bool) public LTDescr setOrientToPath2d(bool doesOrient2d) Parameters doesOrient2d bool Returns LTDescr setOvershoot(float) public LTDescr setOvershoot(float overshoot) Parameters overshoot float Returns LTDescr setPassed(float) public LTDescr setPassed(float passed) Parameters passed float Returns LTDescr setPath(LTBezierPath) public LTDescr setPath(LTBezierPath path) Parameters path LTBezierPath Returns LTDescr setPeriod(float) public LTDescr setPeriod(float period) Parameters period float Returns LTDescr setPoint(Vector3) public LTDescr setPoint(Vector3 point) Parameters point Vector3 Returns LTDescr setRect(LTRect) public LTDescr setRect(LTRect rect) Parameters rect LTRect Returns LTDescr setRect(Rect) public LTDescr setRect(Rect rect) Parameters rect Rect Returns LTDescr setRect(RectTransform) public LTDescr setRect(RectTransform rect) Parameters rect RectTransform Returns LTDescr setRecursive(bool) public LTDescr setRecursive(bool useRecursion) Parameters useRecursion bool Returns LTDescr setRepeat(int) public LTDescr setRepeat(int repeat) Parameters repeat int Returns LTDescr setRotate() public LTDescr setRotate() Returns LTDescr setRotateAround() public LTDescr setRotateAround() Returns LTDescr setRotateAroundLocal() public LTDescr setRotateAroundLocal() Returns LTDescr setRotateLocal() public LTDescr setRotateLocal() Returns LTDescr setRotateX() public LTDescr setRotateX() Returns LTDescr setRotateY() public LTDescr setRotateY() Returns LTDescr setRotateZ() public LTDescr setRotateZ() Returns LTDescr setScale() public LTDescr setScale() Returns LTDescr setScale(float) public LTDescr setScale(float scale) Parameters scale float Returns LTDescr setScaleX() public LTDescr setScaleX() Returns LTDescr setScaleY() public LTDescr setScaleY() Returns LTDescr setScaleZ() public LTDescr setScaleZ() Returns LTDescr setSpeed(float) public LTDescr setSpeed(float speed) Parameters speed float Returns LTDescr setSprites(Sprite[]) public LTDescr setSprites(UnityEngine.Sprite[] sprites) Parameters sprites Sprite[] Returns LTDescr setTarget(Transform) public LTDescr setTarget(Transform trans) Parameters trans Transform Returns LTDescr setTextAlpha() public LTDescr setTextAlpha() Returns LTDescr setTextColor() public LTDescr setTextColor() Returns LTDescr setTime(float) public LTDescr setTime(float time) Parameters time float Returns LTDescr setTo(Transform) public LTDescr setTo(Transform to) Parameters to Transform Returns LTDescr setTo(Vector3) public LTDescr setTo(Vector3 to) Parameters to Vector3 Returns LTDescr setUseEstimatedTime(bool) public LTDescr setUseEstimatedTime(bool useEstimatedTime) Parameters useEstimatedTime bool Returns LTDescr setUseFrames(bool) public LTDescr setUseFrames(bool useFrames) Parameters useFrames bool Returns LTDescr setUseManualTime(bool) public LTDescr setUseManualTime(bool useManualTime) Parameters useManualTime bool Returns LTDescr setValue3() public LTDescr setValue3() Returns LTDescr updateInternal() public bool updateInternal() Returns bool updateNow() public LTDescr updateNow() Returns LTDescr"
  },
  "api/Global.LTDescrOptional.html": {
    "href": "api/Global.LTDescrOptional.html",
    "title": "Class LTDescrOptional | Czasoport Documentation",
    "keywords": "Class LTDescrOptional Namespace Global public class LTDescrOptional Inheritance object LTDescrOptional Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields animationCurve public AnimationCurve animationCurve Field Value AnimationCurve color public Color color Field Value Color initFrameCount public int initFrameCount Field Value int Properties axis public Vector3 axis { get; set; } Property Value Vector3 lastVal public float lastVal { get; set; } Property Value float ltRect public LTRect ltRect { get; set; } Property Value LTRect onComplete public Action onComplete { get; set; } Property Value Action onCompleteObject public Action<object> onCompleteObject { get; set; } Property Value Action<object> onCompleteParam public object onCompleteParam { get; set; } Property Value object onStart public Action onStart { get; set; } Property Value Action onUpdateColor public Action<Color> onUpdateColor { get; set; } Property Value Action<Color> onUpdateColorObject public Action<Color, object> onUpdateColorObject { get; set; } Property Value Action<Color, object> onUpdateFloat public Action<float> onUpdateFloat { get; set; } Property Value Action<float> onUpdateFloatObject public Action<float, object> onUpdateFloatObject { get; set; } Property Value Action<float, object> onUpdateFloatRatio public Action<float, float> onUpdateFloatRatio { get; set; } Property Value Action<float, float> onUpdateParam public object onUpdateParam { get; set; } Property Value object onUpdateVector2 public Action<Vector2> onUpdateVector2 { get; set; } Property Value Action<Vector2> onUpdateVector3 public Action<Vector3> onUpdateVector3 { get; set; } Property Value Action<Vector3> onUpdateVector3Object public Action<Vector3, object> onUpdateVector3Object { get; set; } Property Value Action<Vector3, object> origRotation public Quaternion origRotation { get; set; } Property Value Quaternion path public LTBezierPath path { get; set; } Property Value LTBezierPath point public Vector3 point { get; set; } Property Value Vector3 spline public LTSpline spline { get; set; } Property Value LTSpline toTrans public Transform toTrans { get; set; } Property Value Transform Methods callOnUpdate(float, float) public void callOnUpdate(float val, float ratioPassed) Parameters val float ratioPassed float reset() public void reset()"
  },
  "api/Global.LTEvent.html": {
    "href": "api/Global.LTEvent.html",
    "title": "Class LTEvent | Czasoport Documentation",
    "keywords": "Class LTEvent Namespace Global public class LTEvent Inheritance object LTEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LTEvent(int, object) public LTEvent(int id, object data) Parameters id int data object Fields data public object data Field Value object id public int id Field Value int"
  },
  "api/Global.LTGUI.Element_Type.html": {
    "href": "api/Global.LTGUI.Element_Type.html",
    "title": "Enum LTGUI.Element_Type | Czasoport Documentation",
    "keywords": "Enum LTGUI.Element_Type Namespace Global public enum LTGUI.Element_Type Fields Label = 1 Texture = 0"
  },
  "api/Global.LTGUI.html": {
    "href": "api/Global.LTGUI.html",
    "title": "Class LTGUI | Czasoport Documentation",
    "keywords": "Class LTGUI Namespace Global public class LTGUI Inheritance object LTGUI Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BUTTONS_MAX public static int BUTTONS_MAX Field Value int RECTS_PER_LEVEL public static int RECTS_PER_LEVEL Field Value int RECT_LEVELS public static int RECT_LEVELS Field Value int Methods checkOnScreen(Rect) public static bool checkOnScreen(Rect rect) Parameters rect Rect Returns bool checkWithinRect(Vector2, Rect) public static bool checkWithinRect(Vector2 vec2, Rect rect) Parameters vec2 Vector2 rect Rect Returns bool destroy(int) public static void destroy(int id) Parameters id int destroyAll(int) public static void destroyAll(int depth) Parameters depth int element(LTRect, int) public static LTRect element(LTRect rect, int depth) Parameters rect LTRect depth int Returns LTRect firstTouch() public static Vector2 firstTouch() Returns Vector2 hasNoOverlap(Rect, int) public static bool hasNoOverlap(Rect rect, int depth) Parameters rect Rect depth int Returns bool init() public static void init() initRectCheck() public static void initRectCheck() label(LTRect, string, int) public static LTRect label(LTRect rect, string label, int depth) Parameters rect LTRect label string depth int Returns LTRect label(Rect, string, int) public static LTRect label(Rect rect, string label, int depth) Parameters rect Rect label string depth int Returns LTRect pressedWithinRect(Rect) public static bool pressedWithinRect(Rect rect) Parameters rect Rect Returns bool reset() public static void reset() texture(LTRect, Texture, int) public static LTRect texture(LTRect rect, Texture texture, int depth) Parameters rect LTRect texture Texture depth int Returns LTRect texture(Rect, Texture, int) public static LTRect texture(Rect rect, Texture texture, int depth) Parameters rect Rect texture Texture depth int Returns LTRect update(int) public static void update(int updateLevel) Parameters updateLevel int"
  },
  "api/Global.LTRect.html": {
    "href": "api/Global.LTRect.html",
    "title": "Class LTRect | Czasoport Documentation",
    "keywords": "Class LTRect Namespace Global [Serializable] public class LTRect Inheritance object LTRect Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LTRect() public LTRect() LTRect(Rect) public LTRect(Rect rect) Parameters rect Rect LTRect(float, float, float, float) public LTRect(float x, float y, float width, float height) Parameters x float y float width float height float LTRect(float, float, float, float, float) public LTRect(float x, float y, float width, float height, float alpha) Parameters x float y float width float height float alpha float LTRect(float, float, float, float, float, float) public LTRect(float x, float y, float width, float height, float alpha, float rotation) Parameters x float y float width float height float alpha float rotation float Fields _rect public Rect _rect Field Value Rect alpha public float alpha Field Value float alphaEnabled public bool alphaEnabled Field Value bool color public Color color Field Value Color colorTouched public static bool colorTouched Field Value bool counter public int counter Field Value int fontScaleToFit public bool fontScaleToFit Field Value bool labelStr public string labelStr Field Value string margin public Vector2 margin Field Value Vector2 pivot public Vector2 pivot Field Value Vector2 relativeRect public Rect relativeRect Field Value Rect rotateEnabled public bool rotateEnabled Field Value bool rotateFinished public bool rotateFinished Field Value bool rotation public float rotation Field Value float sizeByHeight public bool sizeByHeight Field Value bool style public GUIStyle style Field Value GUIStyle texture public Texture texture Field Value Texture type public LTGUI.Element_Type type Field Value LTGUI.Element_Type useColor public bool useColor Field Value bool useSimpleScale public bool useSimpleScale Field Value bool Properties hasInitiliazed public bool hasInitiliazed { get; } Property Value bool height public float height { get; set; } Property Value float id public int id { get; } Property Value int rect public Rect rect { get; set; } Property Value Rect width public float width { get; set; } Property Value float x public float x { get; set; } Property Value float y public float y { get; set; } Property Value float Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. reset() public void reset() resetForRotation() public void resetForRotation() setAlpha(float) public LTRect setAlpha(float alpha) Parameters alpha float Returns LTRect setColor(Color) public LTRect setColor(Color color) Parameters color Color Returns LTRect setFontScaleToFit(bool) public LTRect setFontScaleToFit(bool fontScaleToFit) Parameters fontScaleToFit bool Returns LTRect setId(int, int) public void setId(int id, int counter) Parameters id int counter int setLabel(string) public LTRect setLabel(string str) Parameters str string Returns LTRect setSizeByHeight(bool) public LTRect setSizeByHeight(bool sizeByHeight) Parameters sizeByHeight bool Returns LTRect setStyle(GUIStyle) public LTRect setStyle(GUIStyle style) Parameters style GUIStyle Returns LTRect setUseSimpleScale(bool) public LTRect setUseSimpleScale(bool useSimpleScale) Parameters useSimpleScale bool Returns LTRect setUseSimpleScale(bool, Rect) public LTRect setUseSimpleScale(bool useSimpleScale, Rect relativeRect) Parameters useSimpleScale bool relativeRect Rect Returns LTRect"
  },
  "api/Global.LTSeq.html": {
    "href": "api/Global.LTSeq.html",
    "title": "Class LTSeq | Czasoport Documentation",
    "keywords": "Class LTSeq Namespace Global public class LTSeq Inheritance object LTSeq Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields counter public uint counter Field Value uint current public LTSeq current Field Value LTSeq previous public LTSeq previous Field Value LTSeq timeScale public float timeScale Field Value float toggle public bool toggle Field Value bool totalDelay public float totalDelay Field Value float tween public LTDescr tween Field Value LTDescr Properties id public int id { get; } Property Value int Methods append(GameObject, Action) public LTSeq append(GameObject gameObject, Action callback) Parameters gameObject GameObject callback Action Returns LTSeq append(GameObject, Action<object>, object) public LTSeq append(GameObject gameObject, Action<object> callback, object obj) Parameters gameObject GameObject callback Action<object> obj object Returns LTSeq append(LTDescr) public LTSeq append(LTDescr tween) Parameters tween LTDescr Returns LTSeq append(Action) public LTSeq append(Action callback) Parameters callback Action Returns LTSeq append(Action<object>, object) public LTSeq append(Action<object> callback, object obj) Parameters callback Action<object> obj object Returns LTSeq append(float) public LTSeq append(float delay) Parameters delay float Returns LTSeq init(uint, uint) public void init(uint id, uint global_counter) Parameters id uint global_counter uint insert(LTDescr) public LTSeq insert(LTDescr tween) Parameters tween LTDescr Returns LTSeq reset() public void reset() reverse() public LTSeq reverse() Returns LTSeq setScale(float) public LTSeq setScale(float timeScale) Parameters timeScale float Returns LTSeq"
  },
  "api/Global.LTSpline.html": {
    "href": "api/Global.LTSpline.html",
    "title": "Class LTSpline | Czasoport Documentation",
    "keywords": "Class LTSpline Namespace Global Move a GameObject to a certain location [Serializable] public class LTSpline Inheritance object LTSpline Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LTSpline(Vector3[]) public LTSpline(Vector3[] pts) Parameters pts Vector3[] LTSpline(Vector3[], bool) public LTSpline(Vector3[] pts, bool constantSpeed) Parameters pts Vector3[] constantSpeed bool Fields DISTANCE_COUNT public static int DISTANCE_COUNT Field Value int SUBLINE_COUNT public static int SUBLINE_COUNT Field Value int constantSpeed public bool constantSpeed Field Value bool distance public float distance Field Value float orientToPath public bool orientToPath Field Value bool orientToPath2d public bool orientToPath2d Field Value bool pts public Vector3[] pts Field Value Vector3[] ptsAdj [NonSerialized] public Vector3[] ptsAdj Field Value Vector3[] ptsAdjLength public int ptsAdjLength Field Value int Methods drawGizmo(Color) public void drawGizmo(Color color) Parameters color Color drawGizmo(Transform[], Color) public static void drawGizmo(Transform[] arr, Color color) Parameters arr Transform[] color Color drawLine(Transform[], float, Color) public static void drawLine(Transform[] arr, float width, Color color) Parameters arr Transform[] width float color Color drawLinesGLLines(Material, Color, float) public void drawLinesGLLines(Material outlineMaterial, Color color, float width) Parameters outlineMaterial Material color Color width float generateVectors() public Vector3[] generateVectors() Returns Vector3[] gizmoDraw(float) public void gizmoDraw(float t = -1) Parameters t float interp(float) public Vector3 interp(float t) Parameters t float Returns Vector3 map(float) public Vector3 map(float u) Parameters u float Returns Vector3 place(Transform, float) Move a GameObject to a certain location public void place(Transform transform, float ratio) Parameters transform Transform ratio float place(Transform, float, Vector3) Move a GameObject to a certain location public void place(Transform transform, float ratio, Vector3 worldUp) Parameters transform Transform ratio float worldUp Vector3 place2d(Transform, float) public void place2d(Transform transform, float ratio) Parameters transform Transform ratio float placeLocal(Transform, float) Move a GameObject to a certain location public void placeLocal(Transform transform, float ratio) Parameters transform Transform ratio float placeLocal(Transform, float, Vector3) Move a GameObject to a certain location public void placeLocal(Transform transform, float ratio, Vector3 worldUp) Parameters transform Transform ratio float worldUp Vector3 placeLocal2d(Transform, float) public void placeLocal2d(Transform transform, float ratio) Parameters transform Transform ratio float point(float) Move a GameObject to a certain location public Vector3 point(float ratio) Parameters ratio float Returns Vector3 ratioAtPoint(Vector3) Move a GameObject to a certain location public float ratioAtPoint(Vector3 pt) Parameters pt Vector3 Returns float"
  },
  "api/Global.LTUtility.html": {
    "href": "api/Global.LTUtility.html",
    "title": "Class LTUtility | Czasoport Documentation",
    "keywords": "Class LTUtility Namespace Global public class LTUtility Inheritance object LTUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods reverse(Vector3[]) public static Vector3[] reverse(Vector3[] arr) Parameters arr Vector3[] Returns Vector3[]"
  },
  "api/Global.LeanAudio.html": {
    "href": "api/Global.LeanAudio.html",
    "title": "Class LeanAudio | Czasoport Documentation",
    "keywords": "Class LeanAudio Namespace Global public class LeanAudio Inheritance object LeanAudio Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MIN_FREQEUNCY_PERIOD public static float MIN_FREQEUNCY_PERIOD Field Value float PROCESSING_ITERATIONS_MAX public static int PROCESSING_ITERATIONS_MAX Field Value int generatedWaveDistances public static float[] generatedWaveDistances Field Value float[] generatedWaveDistancesCount public static int generatedWaveDistancesCount Field Value int Methods createAudio(AnimationCurve, AnimationCurve, LeanAudioOptions) public static AudioClip createAudio(AnimationCurve volume, AnimationCurve frequency, LeanAudioOptions options = null) Parameters volume AnimationCurve frequency AnimationCurve options LeanAudioOptions Returns AudioClip createAudioStream(AnimationCurve, AnimationCurve, LeanAudioOptions) public static LeanAudioStream createAudioStream(AnimationCurve volume, AnimationCurve frequency, LeanAudioOptions options = null) Parameters volume AnimationCurve frequency AnimationCurve options LeanAudioOptions Returns LeanAudioStream generateAudioFromCurve(AnimationCurve, int) public static AudioClip generateAudioFromCurve(AnimationCurve curve, int frequencyRate = 44100) Parameters curve AnimationCurve frequencyRate int Returns AudioClip options() public static LeanAudioOptions options() Returns LeanAudioOptions play(AudioClip) public static AudioSource play(AudioClip audio) Parameters audio AudioClip Returns AudioSource play(AudioClip, float) public static AudioSource play(AudioClip audio, float volume) Parameters audio AudioClip volume float Returns AudioSource play(AudioClip, Vector3) public static AudioSource play(AudioClip audio, Vector3 pos) Parameters audio AudioClip pos Vector3 Returns AudioSource play(AudioClip, Vector3, float) public static AudioSource play(AudioClip audio, Vector3 pos, float volume) Parameters audio AudioClip pos Vector3 volume float Returns AudioSource playClipAt(AudioClip, Vector3) public static AudioSource playClipAt(AudioClip clip, Vector3 pos) Parameters clip AudioClip pos Vector3 Returns AudioSource printOutAudioClip(AudioClip, ref AnimationCurve, float) public static void printOutAudioClip(AudioClip audioClip, ref AnimationCurve curve, float scaleX = 1) Parameters audioClip AudioClip curve AnimationCurve scaleX float"
  },
  "api/Global.LeanAudioOptions.LeanAudioWaveStyle.html": {
    "href": "api/Global.LeanAudioOptions.LeanAudioWaveStyle.html",
    "title": "Enum LeanAudioOptions.LeanAudioWaveStyle | Czasoport Documentation",
    "keywords": "Enum LeanAudioOptions.LeanAudioWaveStyle Namespace Global public enum LeanAudioOptions.LeanAudioWaveStyle Fields Noise = 3 Sawtooth = 2 Sine = 0 Square = 1"
  },
  "api/Global.LeanAudioOptions.html": {
    "href": "api/Global.LeanAudioOptions.html",
    "title": "Class LeanAudioOptions | Czasoport Documentation",
    "keywords": "Class LeanAudioOptions Namespace Global public class LeanAudioOptions Inheritance object LeanAudioOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LeanAudioOptions() public LeanAudioOptions() Fields frequencyRate public int frequencyRate Field Value int modulation public Vector3[] modulation Field Value Vector3[] stream public LeanAudioStream stream Field Value LeanAudioStream useSetData public bool useSetData Field Value bool vibrato public Vector3[] vibrato Field Value Vector3[] waveNoiseInfluence public float waveNoiseInfluence Field Value float waveNoiseScale public float waveNoiseScale Field Value float waveStyle public LeanAudioOptions.LeanAudioWaveStyle waveStyle Field Value LeanAudioOptions.LeanAudioWaveStyle Methods setFrequency(int) public LeanAudioOptions setFrequency(int frequencyRate) Parameters frequencyRate int Returns LeanAudioOptions setVibrato(Vector3[]) public LeanAudioOptions setVibrato(Vector3[] vibrato) Parameters vibrato Vector3[] Returns LeanAudioOptions setWaveNoise() public LeanAudioOptions setWaveNoise() Returns LeanAudioOptions setWaveNoiseInfluence(float) public LeanAudioOptions setWaveNoiseInfluence(float influence) Parameters influence float Returns LeanAudioOptions setWaveNoiseScale(float) public LeanAudioOptions setWaveNoiseScale(float waveScale) Parameters waveScale float Returns LeanAudioOptions setWaveSawtooth() public LeanAudioOptions setWaveSawtooth() Returns LeanAudioOptions setWaveSine() public LeanAudioOptions setWaveSine() Returns LeanAudioOptions setWaveSquare() public LeanAudioOptions setWaveSquare() Returns LeanAudioOptions setWaveStyle(LeanAudioWaveStyle) public LeanAudioOptions setWaveStyle(LeanAudioOptions.LeanAudioWaveStyle style) Parameters style LeanAudioOptions.LeanAudioWaveStyle Returns LeanAudioOptions"
  },
  "api/Global.LeanAudioStream.html": {
    "href": "api/Global.LeanAudioStream.html",
    "title": "Class LeanAudioStream | Czasoport Documentation",
    "keywords": "Class LeanAudioStream Namespace Global public class LeanAudioStream Inheritance object LeanAudioStream Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LeanAudioStream(float[]) public LeanAudioStream(float[] audioArr) Parameters audioArr float[] Fields audioArr public float[] audioArr Field Value float[] audioClip public AudioClip audioClip Field Value AudioClip position public int position Field Value int Methods OnAudioRead(float[]) public void OnAudioRead(float[] data) Parameters data float[] OnAudioSetPosition(int) public void OnAudioSetPosition(int newPosition) Parameters newPosition int"
  },
  "api/Global.LeanProp.html": {
    "href": "api/Global.LeanProp.html",
    "title": "Enum LeanProp | Czasoport Documentation",
    "keywords": "Enum LeanProp Namespace Global public enum LeanProp Fields color = 9 localPosition = 1 localX = 5 localY = 6 localZ = 7 position = 0 scale = 8 x = 2 y = 3 z = 4"
  },
  "api/Global.LeanSmooth.html": {
    "href": "api/Global.LeanSmooth.html",
    "title": "Class LeanSmooth | Czasoport Documentation",
    "keywords": "Class LeanSmooth Namespace Global public class LeanSmooth Inheritance object LeanSmooth Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods bounceOut(Color, Color, ref Color, float, float, float, float, float, float) public static Color bounceOut(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1, float friction = 2, float accelRate = 0.5, float hitDamping = 0.9) Parameters current Color target Color currentVelocity Color smoothTime float maxSpeed float deltaTime float friction float accelRate float hitDamping float Returns Color bounceOut(float, float, ref float, float, float, float, float, float, float) Moves one value towards another (with an ease that bounces back some when it reaches it's destination) public static float bounceOut(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1, float friction = 2, float accelRate = 0.5, float hitDamping = 0.9) Parameters current float target float currentVelocity float smoothTime float maxSpeed float deltaTime float friction float accelRate float hitDamping float Returns float bounceOut(Vector3, Vector3, ref Vector3, float, float, float, float, float, float) Moves one value towards another (with an ease that bounces back some when it reaches it's destination) public static Vector3 bounceOut(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1, float friction = 2, float accelRate = 0.5, float hitDamping = 0.9) Parameters current Vector3 target Vector3 currentVelocity Vector3 smoothTime float maxSpeed float deltaTime float friction float accelRate float hitDamping float Returns Vector3 damp(Color, Color, ref Color, float, float, float) public static Color damp(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1) Parameters current Color target Color currentVelocity Color smoothTime float maxSpeed float deltaTime float Returns Color damp(float, float, ref float, float, float, float) Moves one value towards another (eases in and out to destination with no overshoot) public static float damp(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1) Parameters current float target float currentVelocity float smoothTime float maxSpeed float deltaTime float Returns float damp(Vector3, Vector3, ref Vector3, float, float, float) Moves one value towards another (eases in and out to destination with no overshoot) public static Vector3 damp(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1) Parameters current Vector3 target Vector3 currentVelocity Vector3 smoothTime float maxSpeed float deltaTime float Returns Vector3 linear(Color, Color, float) public static Color linear(Color current, Color target, float moveSpeed) Parameters current Color target Color moveSpeed float Returns Color linear(float, float, float, float) Moves one value towards another (at a constant speed) public static float linear(float current, float target, float moveSpeed, float deltaTime = -1) Parameters current float target float moveSpeed float deltaTime float Returns float linear(Vector3, Vector3, float, float) Moves one value towards another (at a constant speed) public static Vector3 linear(Vector3 current, Vector3 target, float moveSpeed, float deltaTime = -1) Parameters current Vector3 target Vector3 moveSpeed float deltaTime float Returns Vector3 spring(Color, Color, ref Color, float, float, float, float, float) public static Color spring(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1, float friction = 2, float accelRate = 0.5) Parameters current Color target Color currentVelocity Color smoothTime float maxSpeed float deltaTime float friction float accelRate float Returns Color spring(float, float, ref float, float, float, float, float, float) Moves one value towards another (eases in and out to destination with possible overshoot bounciness) public static float spring(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1, float friction = 2, float accelRate = 0.5) Parameters current float target float currentVelocity float smoothTime float maxSpeed float deltaTime float friction float accelRate float Returns float spring(Vector3, Vector3, ref Vector3, float, float, float, float, float) Moves one value towards another (eases in and out to destination with possible overshoot bounciness) public static Vector3 spring(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1, float friction = 2, float accelRate = 0.5) Parameters current Vector3 target Vector3 currentVelocity Vector3 smoothTime float maxSpeed float deltaTime float friction float accelRate float Returns Vector3"
  },
  "api/Global.LeanTest.html": {
    "href": "api/Global.LeanTest.html",
    "title": "Class LeanTest | Czasoport Documentation",
    "keywords": "Class LeanTest Namespace Global public class LeanTest Inheritance object LeanTest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields expected public static int expected Field Value int testsFinished public static bool testsFinished Field Value bool timeout public static float timeout Field Value float timeoutStarted public static bool timeoutStarted Field Value bool Methods debug(string, bool, string) public static void debug(string name, bool didPass, string failExplaination = null) Parameters name string didPass bool failExplaination string expect(bool, string, string) public static void expect(bool didPass, string definition, string failExplaination = null) Parameters didPass bool definition string failExplaination string formatB(string) public static string formatB(string str) Parameters str string Returns string formatBC(string, string) public static string formatBC(string str, string color) Parameters str string color string Returns string formatC(string, string) public static string formatC(string str, string color) Parameters str string color string Returns string overview() public static void overview() padRight(int) public static string padRight(int len) Parameters len int Returns string printOutLength(string) public static float printOutLength(string str) Parameters str string Returns float"
  },
  "api/Global.LeanTester.html": {
    "href": "api/Global.LeanTester.html",
    "title": "Class LeanTester | Czasoport Documentation",
    "keywords": "Class LeanTester Namespace Global public class LeanTester : MonoBehaviour Inheritance object LeanTester Fields timeout public float timeout Field Value float Methods Start() public void Start()"
  },
  "api/Global.LeanTween.html": {
    "href": "api/Global.LeanTween.html",
    "title": "Class LeanTween | Czasoport Documentation",
    "keywords": "Class LeanTween Namespace Global public class LeanTween : MonoBehaviour Inheritance object LeanTween Fields EVENTS_MAX public static int EVENTS_MAX Field Value int LISTENERS_MAX public static int LISTENERS_MAX Field Value int PI_DIV2 public static float PI_DIV2 Field Value float d public static LTDescr d Field Value LTDescr dtActual public static float dtActual Field Value float dtEstimated public static float dtEstimated Field Value float dtManual public static float dtManual Field Value float punch public static AnimationCurve punch Field Value AnimationCurve shake public static AnimationCurve shake Field Value AnimationCurve startSearch public static int startSearch Field Value int tau public static float tau Field Value float throwErrors public static bool throwErrors Field Value bool Properties maxSearch public static int maxSearch { get; } Property Value int maxSimulataneousTweens public static int maxSimulataneousTweens { get; } Property Value int tweenEmpty public static GameObject tweenEmpty { get; } Property Value GameObject tweensRunning Find out how many tweens you have animating at a given time public static int tweensRunning { get; } Property Value int Methods OnLevelWasLoaded(int) public void OnLevelWasLoaded(int lvl) Parameters lvl int Update() public void Update() add(Vector3[], Vector3) public static Vector3[] add(Vector3[] a, Vector3 b) Parameters a Vector3[] b Vector3 Returns Vector3[] addListener(GameObject, int, Action<LTEvent>) public static void addListener(GameObject caller, int eventId, Action<LTEvent> callback) Parameters caller GameObject eventId int callback Action<LTEvent> addListener(int, Action<LTEvent>) public static void addListener(int eventId, Action<LTEvent> callback) Parameters eventId int callback Action<LTEvent> alpha(GameObject, float, float) Fade a gameobject's material to a certain alpha value. public static LTDescr alpha(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr alpha(LTRect, float, float) Fade a GUI Object public static LTDescr alpha(LTRect ltRect, float to, float time) Parameters ltRect LTRect to float time float Returns LTDescr alpha(RectTransform, float, float) Alpha an Image Component attached to a RectTransform (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr alpha(RectTransform rectTrans, float to, float time) Parameters rectTrans RectTransform to float time float Returns LTDescr alphaCanvas(CanvasGroup, float, float) Fade a Unity UI Canvas Group public static LTDescr alphaCanvas(CanvasGroup canvasGroup, float to, float time) Parameters canvasGroup CanvasGroup to float time float Returns LTDescr alphaText(RectTransform, float, float) public static LTDescr alphaText(RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr alphaVertex(GameObject, float, float) This works by tweening the vertex colors directly public static LTDescr alphaVertex(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr cancel(GameObject) Cancel all tweens that are currently targeting the gameObject public static void cancel(GameObject gameObject) Parameters gameObject GameObject cancel(GameObject, bool) public static void cancel(GameObject gameObject, bool callOnComplete) Parameters gameObject GameObject callOnComplete bool cancel(GameObject, int, bool) public static void cancel(GameObject gameObject, int uniqueId, bool callOnComplete = false) Parameters gameObject GameObject uniqueId int callOnComplete bool cancel(LTRect, int) public static void cancel(LTRect ltRect, int uniqueId) Parameters ltRect LTRect uniqueId int cancel(RectTransform) public static void cancel(RectTransform rect) Parameters rect RectTransform cancel(int) Cancel a specific tween with the provided id public static void cancel(int uniqueId) Parameters uniqueId int cancel(int, bool) public static void cancel(int uniqueId, bool callOnComplete) Parameters uniqueId int callOnComplete bool cancelAll() Cancels all tweens public static void cancelAll() cancelAll(bool) public static void cancelAll(bool callComplete) Parameters callComplete bool clerp(float, float, float) public static float clerp(float start, float end, float val) Parameters start float end float val float Returns float closestRot(float, float) public static float closestRot(float from, float to) Parameters from float to float Returns float color(GameObject, Color, float) Change a gameobject's material to a certain color value public static LTDescr color(GameObject gameObject, Color to, float time) Parameters gameObject GameObject to Color time float Returns LTDescr color(RectTransform, Color, float) Change the Color of an Image Component attached to a RectTransform (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr color(RectTransform rectTrans, Color to, float time) Parameters rectTrans RectTransform to Color time float Returns LTDescr colorText(RectTransform, Color, float) public static LTDescr colorText(RectTransform rectTransform, Color to, float time) Parameters rectTransform RectTransform to Color time float Returns LTDescr delayedCall(GameObject, float, Action) public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action callback) Parameters gameObject GameObject delayTime float callback Action Returns LTDescr delayedCall(GameObject, float, Action<object>) public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action<object> callback) Parameters gameObject GameObject delayTime float callback Action<object> Returns LTDescr delayedCall(float, Action) Call a method after a specified amount of time public static LTDescr delayedCall(float delayTime, Action callback) Parameters delayTime float callback Action Returns LTDescr delayedCall(float, Action<object>) public static LTDescr delayedCall(float delayTime, Action<object> callback) Parameters delayTime float callback Action<object> Returns LTDescr delayedSound(AudioClip, Vector3, float) public static LTDescr delayedSound(AudioClip audio, Vector3 pos, float volume) Parameters audio AudioClip pos Vector3 volume float Returns LTDescr delayedSound(GameObject, AudioClip, Vector3, float) public static LTDescr delayedSound(GameObject gameObject, AudioClip audio, Vector3 pos, float volume) Parameters gameObject GameObject audio AudioClip pos Vector3 volume float Returns LTDescr descr(int) Retrieve a tweens LTDescr object to modify public static LTDescr descr(int uniqueId) Parameters uniqueId int Returns LTDescr description(int) public static LTDescr description(int uniqueId) Parameters uniqueId int Returns LTDescr descriptions(GameObject) Retrieve a tweens LTDescr object(s) to modify public static LTDescr[] descriptions(GameObject gameObject = null) Parameters gameObject GameObject Returns LTDescr[] destroyAfter(LTRect, float) public static LTDescr destroyAfter(LTRect rect, float delayTime) Parameters rect LTRect delayTime float Returns LTDescr dispatchEvent(int) public static void dispatchEvent(int eventId) Parameters eventId int dispatchEvent(int, object) public static void dispatchEvent(int eventId, object data) Parameters eventId int data object drawBezierPath(Vector3, Vector3, Vector3, Vector3, float, Transform) public static void drawBezierPath(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float arrowSize = 0, Transform arrowTransform = null) Parameters a Vector3 b Vector3 c Vector3 d Vector3 arrowSize float arrowTransform Transform easeInBack(float, float, float, float) public static float easeInBack(float start, float end, float val, float overshoot = 1) Parameters start float end float val float overshoot float Returns float easeInBounce(float, float, float) public static float easeInBounce(float start, float end, float val) Parameters start float end float val float Returns float easeInCirc(float, float, float) public static float easeInCirc(float start, float end, float val) Parameters start float end float val float Returns float easeInCubic(float, float, float) public static float easeInCubic(float start, float end, float val) Parameters start float end float val float Returns float easeInElastic(float, float, float, float, float) public static float easeInElastic(float start, float end, float val, float overshoot = 1, float period = 0.3) Parameters start float end float val float overshoot float period float Returns float easeInExpo(float, float, float) public static float easeInExpo(float start, float end, float val) Parameters start float end float val float Returns float easeInOutBack(float, float, float, float) public static float easeInOutBack(float start, float end, float val, float overshoot = 1) Parameters start float end float val float overshoot float Returns float easeInOutBounce(float, float, float) public static float easeInOutBounce(float start, float end, float val) Parameters start float end float val float Returns float easeInOutCirc(float, float, float) public static float easeInOutCirc(float start, float end, float val) Parameters start float end float val float Returns float easeInOutCubic(float, float, float) public static float easeInOutCubic(float start, float end, float val) Parameters start float end float val float Returns float easeInOutElastic(float, float, float, float, float) public static float easeInOutElastic(float start, float end, float val, float overshoot = 1, float period = 0.3) Parameters start float end float val float overshoot float period float Returns float easeInOutExpo(float, float, float) public static float easeInOutExpo(float start, float end, float val) Parameters start float end float val float Returns float easeInOutQuad(float, float, float) public static float easeInOutQuad(float start, float end, float val) Parameters start float end float val float Returns float easeInOutQuadOpt(float, float, float) public static float easeInOutQuadOpt(float start, float diff, float ratioPassed) Parameters start float diff float ratioPassed float Returns float easeInOutQuadOpt(Vector3, Vector3, float) public static Vector3 easeInOutQuadOpt(Vector3 start, Vector3 diff, float ratioPassed) Parameters start Vector3 diff Vector3 ratioPassed float Returns Vector3 easeInOutQuadOpt2(float, float, float, float) public static float easeInOutQuadOpt2(float start, float diffBy2, float val, float val2) Parameters start float diffBy2 float val float val2 float Returns float easeInOutQuart(float, float, float) public static float easeInOutQuart(float start, float end, float val) Parameters start float end float val float Returns float easeInOutQuint(float, float, float) public static float easeInOutQuint(float start, float end, float val) Parameters start float end float val float Returns float easeInOutSine(float, float, float) public static float easeInOutSine(float start, float end, float val) Parameters start float end float val float Returns float easeInQuad(float, float, float) public static float easeInQuad(float start, float end, float val) Parameters start float end float val float Returns float easeInQuadOpt(float, float, float) public static float easeInQuadOpt(float start, float diff, float ratioPassed) Parameters start float diff float ratioPassed float Returns float easeInQuart(float, float, float) public static float easeInQuart(float start, float end, float val) Parameters start float end float val float Returns float easeInQuint(float, float, float) public static float easeInQuint(float start, float end, float val) Parameters start float end float val float Returns float easeInSine(float, float, float) public static float easeInSine(float start, float end, float val) Parameters start float end float val float Returns float easeOutBack(float, float, float, float) public static float easeOutBack(float start, float end, float val, float overshoot = 1) Parameters start float end float val float overshoot float Returns float easeOutBounce(float, float, float) public static float easeOutBounce(float start, float end, float val) Parameters start float end float val float Returns float easeOutCirc(float, float, float) public static float easeOutCirc(float start, float end, float val) Parameters start float end float val float Returns float easeOutCubic(float, float, float) public static float easeOutCubic(float start, float end, float val) Parameters start float end float val float Returns float easeOutElastic(float, float, float, float, float) public static float easeOutElastic(float start, float end, float val, float overshoot = 1, float period = 0.3) Parameters start float end float val float overshoot float period float Returns float easeOutExpo(float, float, float) public static float easeOutExpo(float start, float end, float val) Parameters start float end float val float Returns float easeOutQuad(float, float, float) public static float easeOutQuad(float start, float end, float val) Parameters start float end float val float Returns float easeOutQuadOpt(float, float, float) public static float easeOutQuadOpt(float start, float diff, float ratioPassed) Parameters start float diff float ratioPassed float Returns float easeOutQuart(float, float, float) public static float easeOutQuart(float start, float end, float val) Parameters start float end float val float Returns float easeOutQuint(float, float, float) public static float easeOutQuint(float start, float end, float val) Parameters start float end float val float Returns float easeOutSine(float, float, float) public static float easeOutSine(float start, float end, float val) Parameters start float end float val float Returns float followBounceOut(Transform, Transform, LeanProp, float, float, float, float, float) Follow another transforms position/scale/color (with an ease that bounces back some when it reaches it's destination) public static LTDescr followBounceOut(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1, float friction = 2, float accelRate = 0.5, float hitDamping = 0.9) Parameters trans Transform target Transform prop LeanProp smoothTime float maxSpeed float friction float accelRate float hitDamping float Returns LTDescr followDamp(Transform, Transform, LeanProp, float, float) Follow another transforms position/scale/color with a damp transition (eases in and out to destination with no overshoot) public static LTDescr followDamp(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1) Parameters trans Transform target Transform prop LeanProp smoothTime float maxSpeed float Returns LTDescr followLinear(Transform, Transform, LeanProp, float) Follow another transforms position/scale/color with a constant speed public static LTDescr followLinear(Transform trans, Transform target, LeanProp prop, float moveSpeed) Parameters trans Transform target Transform prop LeanProp moveSpeed float Returns LTDescr followSpring(Transform, Transform, LeanProp, float, float, float, float) Follow another transforms position/scale/color with a springy transition (eases in and out to destination with possible overshoot bounciness) public static LTDescr followSpring(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1, float friction = 2, float accelRate = 0.5) Parameters trans Transform target Transform prop LeanProp smoothTime float maxSpeed float friction float accelRate float Returns LTDescr init() public static void init() init(int) This line is optional. Here you can specify the maximum number of tweens you will use (the default is 400). This must be called before any use of LeanTween is made for it to be effective. public static void init(int maxSimultaneousTweens) Parameters maxSimultaneousTweens int init(int, int) public static void init(int maxSimultaneousTweens, int maxSimultaneousSequences) Parameters maxSimultaneousTweens int maxSimultaneousSequences int isPaused(GameObject) Test whether or not a tween is paused on a GameObject public static bool isPaused(GameObject gameObject = null) Parameters gameObject GameObject Returns bool isPaused(RectTransform) public static bool isPaused(RectTransform rect) Parameters rect RectTransform Returns bool isPaused(int) Test whether or not a tween is paused or not public static bool isPaused(int uniqueId) Parameters uniqueId int Returns bool isTweening(GameObject) Test whether or not a tween is active on a GameObject public static bool isTweening(GameObject gameObject = null) Parameters gameObject GameObject Returns bool isTweening(LTRect) public static bool isTweening(LTRect ltRect) Parameters ltRect LTRect Returns bool isTweening(RectTransform) public static bool isTweening(RectTransform rect) Parameters rect RectTransform Returns bool isTweening(int) Test whether or not a tween is active or not public static bool isTweening(int uniqueId) Parameters uniqueId int Returns bool linear(float, float, float) public static float linear(float start, float end, float val) Parameters start float end float val float Returns float logError(string) public static object logError(string error) Parameters error string Returns object move(GameObject, LTBezierPath, float) public static LTDescr move(GameObject gameObject, LTBezierPath to, float time) Parameters gameObject GameObject to LTBezierPath time float Returns LTDescr move(GameObject, LTSpline, float) public static LTDescr move(GameObject gameObject, LTSpline to, float time) Parameters gameObject GameObject to LTSpline time float Returns LTDescr move(GameObject, Transform, float) Move a GameObject to another transform public static LTDescr move(GameObject gameObject, Transform to, float time) Parameters gameObject GameObject to Transform time float Returns LTDescr move(GameObject, Vector2, float) public static LTDescr move(GameObject gameObject, Vector2 to, float time) Parameters gameObject GameObject to Vector2 time float Returns LTDescr move(GameObject, Vector3, float) Move a GameObject to a certain location public static LTDescr move(GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr move(GameObject, Vector3[], float) Move a GameObject along a set of bezier curves public static LTDescr move(GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr move(LTRect, Vector2, float) Move a GUI Element to a certain location public static LTDescr move(LTRect ltRect, Vector2 to, float time) Parameters ltRect LTRect to Vector2 time float Returns LTDescr move(RectTransform, Vector3, float) Move a RectTransform object (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr move(RectTransform rectTrans, Vector3 to, float time) Parameters rectTrans RectTransform to Vector3 time float Returns LTDescr moveLocal(GameObject, LTBezierPath, float) public static LTDescr moveLocal(GameObject gameObject, LTBezierPath to, float time) Parameters gameObject GameObject to LTBezierPath time float Returns LTDescr moveLocal(GameObject, LTSpline, float) public static LTDescr moveLocal(GameObject gameObject, LTSpline to, float time) Parameters gameObject GameObject to LTSpline time float Returns LTDescr moveLocal(GameObject, Vector3, float) Move a GameObject to a certain location relative to the parent transform. public static LTDescr moveLocal(GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr moveLocal(GameObject, Vector3[], float) Move a GameObject along a set of bezier curves, in local space public static LTDescr moveLocal(GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr moveLocalX(GameObject, float, float) public static LTDescr moveLocalX(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr moveLocalY(GameObject, float, float) public static LTDescr moveLocalY(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr moveLocalZ(GameObject, float, float) public static LTDescr moveLocalZ(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr moveMargin(LTRect, Vector2, float) public static LTDescr moveMargin(LTRect ltRect, Vector2 to, float time) Parameters ltRect LTRect to Vector2 time float Returns LTDescr moveSpline(GameObject, LTSpline, float) Move a GameObject through a set of points public static LTDescr moveSpline(GameObject gameObject, LTSpline to, float time) Parameters gameObject GameObject to LTSpline time float Returns LTDescr moveSpline(GameObject, Vector3[], float) Move a GameObject through a set of points public static LTDescr moveSpline(GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr moveSplineLocal(GameObject, Vector3[], float) Move a GameObject through a set of points, in local space public static LTDescr moveSplineLocal(GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr moveX(GameObject, float, float) Move a GameObject along the x-axis public static LTDescr moveX(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr moveX(RectTransform, float, float) Move a RectTransform object affecting x-axis only (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr moveX(RectTransform rectTrans, float to, float time) Parameters rectTrans RectTransform to float time float Returns LTDescr moveY(GameObject, float, float) Move a GameObject along the y-axis public static LTDescr moveY(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr moveY(RectTransform, float, float) Move a RectTransform object affecting y-axis only (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr moveY(RectTransform rectTrans, float to, float time) Parameters rectTrans RectTransform to float time float Returns LTDescr moveZ(GameObject, float, float) Move a GameObject along the z-axis public static LTDescr moveZ(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr moveZ(RectTransform, float, float) Move a RectTransform object affecting z-axis only (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...)n public static LTDescr moveZ(RectTransform rectTrans, float to, float time) Parameters rectTrans RectTransform to float time float Returns LTDescr options() public static LTDescr options() Returns LTDescr options(LTDescr) public static LTDescr options(LTDescr seed) Parameters seed LTDescr Returns LTDescr pause(GameObject) Pause all tweens for a GameObject public static void pause(GameObject gameObject) Parameters gameObject GameObject pause(GameObject, int) [Obsolete(\"Use 'pause( id )' instead\")] public static void pause(GameObject gameObject, int uniqueId) Parameters gameObject GameObject uniqueId int pause(int) Pause all tweens for a GameObject public static void pause(int uniqueId) Parameters uniqueId int pauseAll() Pause all active tweens public static void pauseAll() play(RectTransform, Sprite[]) Play a sequence of images on a Unity UI Object public static LTDescr play(RectTransform rectTransform, UnityEngine.Sprite[] sprites) Parameters rectTransform RectTransform sprites Sprite[] Returns LTDescr removeListener(GameObject, int, Action<LTEvent>) public static bool removeListener(GameObject caller, int eventId, Action<LTEvent> callback) Parameters caller GameObject eventId int callback Action<LTEvent> Returns bool removeListener(int) public static bool removeListener(int eventId) Parameters eventId int Returns bool removeListener(int, Action<LTEvent>) public static bool removeListener(int eventId, Action<LTEvent> callback) Parameters eventId int callback Action<LTEvent> Returns bool removeTween(int) public static void removeTween(int i) Parameters i int removeTween(int, int) public static void removeTween(int i, int uniqueId) Parameters i int uniqueId int reset() public static void reset() resume(GameObject) Resume all the tweens on a GameObject public static void resume(GameObject gameObject) Parameters gameObject GameObject resume(GameObject, int) [Obsolete(\"Use 'resume( id )' instead\")] public static void resume(GameObject gameObject, int uniqueId) Parameters gameObject GameObject uniqueId int resume(int) Resume a specific tween public static void resume(int uniqueId) Parameters uniqueId int resumeAll() Resume all active tweens public static void resumeAll() rotate(GameObject, Vector3, float) Rotate a GameObject, to values are in passed in degrees public static LTDescr rotate(GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr rotate(LTRect, float, float) Rotate a GUI element (using an LTRect object), to a value that is in degrees public static LTDescr rotate(LTRect ltRect, float to, float time) Parameters ltRect LTRect to float time float Returns LTDescr rotate(RectTransform, float, float) Rotate a RectTransform object (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr rotate(RectTransform rectTrans, float to, float time) Parameters rectTrans RectTransform to float time float Returns LTDescr rotate(RectTransform, Vector3, float) public static LTDescr rotate(RectTransform rectTrans, Vector3 to, float time) Parameters rectTrans RectTransform to Vector3 time float Returns LTDescr rotateAround(GameObject, Vector3, float, float) Rotate a GameObject around a certain Axis (the best method to use when you want to rotate beyond 180 degrees) public static LTDescr rotateAround(GameObject gameObject, Vector3 axis, float add, float time) Parameters gameObject GameObject axis Vector3 add float time float Returns LTDescr rotateAround(RectTransform, Vector3, float, float) Rotate a RectTransform object (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr rotateAround(RectTransform rectTrans, Vector3 axis, float to, float time) Parameters rectTrans RectTransform axis Vector3 to float time float Returns LTDescr rotateAroundLocal(GameObject, Vector3, float, float) Rotate a GameObject around a certain Axis in Local Space (the best method to use when you want to rotate beyond 180 degrees) public static LTDescr rotateAroundLocal(GameObject gameObject, Vector3 axis, float add, float time) Parameters gameObject GameObject axis Vector3 add float time float Returns LTDescr rotateAroundLocal(RectTransform, Vector3, float, float) Rotate a RectTransform object around it's local axis (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr rotateAroundLocal(RectTransform rectTrans, Vector3 axis, float to, float time) Parameters rectTrans RectTransform axis Vector3 to float time float Returns LTDescr rotateLocal(GameObject, Vector3, float) Rotate a GameObject in the objects local space (on the transforms localEulerAngles object) public static LTDescr rotateLocal(GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr rotateX(GameObject, float, float) Rotate a GameObject only on the X axis public static LTDescr rotateX(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr rotateY(GameObject, float, float) Rotate a GameObject only on the Y axis public static LTDescr rotateY(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr rotateZ(GameObject, float, float) Rotate a GameObject only on the Z axis public static LTDescr rotateZ(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr scale(GameObject, Vector3, float) Scale a GameObject to a certain size public static LTDescr scale(GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr scale(LTRect, Vector2, float) Scale a GUI Element to a certain width and height public static LTDescr scale(LTRect ltRect, Vector2 to, float time) Parameters ltRect LTRect to Vector2 time float Returns LTDescr scale(RectTransform, Vector3, float) Scale a RectTransform object (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr scale(RectTransform rectTrans, Vector3 to, float time) Parameters rectTrans RectTransform to Vector3 time float Returns LTDescr scaleX(GameObject, float, float) Scale a GameObject to a certain size along the x-axis only public static LTDescr scaleX(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr scaleY(GameObject, float, float) Scale a GameObject to a certain size along the y-axis only public static LTDescr scaleY(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr scaleZ(GameObject, float, float) Scale a GameObject to a certain size along the z-axis only public static LTDescr scaleZ(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr sequence(bool) Retrieve a sequencer object where you can easily chain together tweens and methods one after another public static LTSeq sequence(bool initSequence = true) Parameters initSequence bool Returns LTSeq size(RectTransform, Vector2, float) Change the sizeDelta of a RectTransform object (used in Unity Canvas, for Buttons, Panel, Scrollbar, etc...) public static LTDescr size(RectTransform rectTrans, Vector2 to, float time) Parameters rectTrans RectTransform to Vector2 time float Returns LTDescr spring(float, float, float) public static float spring(float start, float end, float val) Parameters start float end float val float Returns float textAlpha(RectTransform, float, float) Fade a Unity UI Object public static LTDescr textAlpha(RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr textColor(RectTransform, Color, float) Change the color a Unity UI Object public static LTDescr textColor(RectTransform rectTransform, Color to, float time) Parameters rectTransform RectTransform to Color time float Returns LTDescr tweenOnCurve(LTDescr, float) public static float tweenOnCurve(LTDescr tweenDescr, float ratioPassed) Parameters tweenDescr LTDescr ratioPassed float Returns float tweenOnCurveVector(LTDescr, float) public static Vector3 tweenOnCurveVector(LTDescr tweenDescr, float ratioPassed) Parameters tweenDescr LTDescr ratioPassed float Returns Vector3 update() public static void update() value(GameObject, Color, Color, float) public static LTDescr value(GameObject gameObject, Color from, Color to, float time) Parameters gameObject GameObject from Color to Color time float Returns LTDescr value(GameObject, Action<Color, object>, Color, Color, float) public static LTDescr value(GameObject gameObject, Action<Color, object> callOnUpdate, Color from, Color to, float time) Parameters gameObject GameObject callOnUpdate Action<Color, object> from Color to Color time float Returns LTDescr value(GameObject, Action<Color>, Color, Color, float) public static LTDescr value(GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time) Parameters gameObject GameObject callOnUpdate Action<Color> from Color to Color time float Returns LTDescr value(GameObject, Action<float, object>, float, float, float) public static LTDescr value(GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time) Parameters gameObject GameObject callOnUpdate Action<float, object> from float to float time float Returns LTDescr value(GameObject, Action<float, float>, float, float, float) public static LTDescr value(GameObject gameObject, Action<float, float> callOnUpdateRatio, float from, float to, float time) Parameters gameObject GameObject callOnUpdateRatio Action<float, float> from float to float time float Returns LTDescr value(GameObject, Action<float>, float, float, float) public static LTDescr value(GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time) Parameters gameObject GameObject callOnUpdate Action<float> from float to float time float Returns LTDescr value(GameObject, Action<Vector2>, Vector2, Vector2, float) public static LTDescr value(GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time) Parameters gameObject GameObject callOnUpdate Action<Vector2> from Vector2 to Vector2 time float Returns LTDescr value(GameObject, Action<Vector3>, Vector3, Vector3, float) public static LTDescr value(GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time) Parameters gameObject GameObject callOnUpdate Action<Vector3> from Vector3 to Vector3 time float Returns LTDescr value(GameObject, float, float, float) Tween any particular value (float) public static LTDescr value(GameObject gameObject, float from, float to, float time) Parameters gameObject GameObject from float to float time float Returns LTDescr value(GameObject, Vector2, Vector2, float) Tween any particular value (Vector2) public static LTDescr value(GameObject gameObject, Vector2 from, Vector2 to, float time) Parameters gameObject GameObject from Vector2 to Vector2 time float Returns LTDescr value(GameObject, Vector3, Vector3, float) Tween any particular value (Vector3) public static LTDescr value(GameObject gameObject, Vector3 from, Vector3 to, float time) Parameters gameObject GameObject from Vector3 to Vector3 time float Returns LTDescr value(float, float, float) public static LTDescr value(float from, float to, float time) Parameters from float to float time float Returns LTDescr"
  },
  "api/Global.LeanTweenExt.html": {
    "href": "api/Global.LeanTweenExt.html",
    "title": "Class LeanTweenExt | Czasoport Documentation",
    "keywords": "Class LeanTweenExt Namespace Global public static class LeanTweenExt Inheritance object LeanTweenExt Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LeanAlpha(CanvasGroup, float, float) public static LTDescr LeanAlpha(this CanvasGroup canvas, float to, float time) Parameters canvas CanvasGroup to float time float Returns LTDescr LeanAlpha(GameObject, float, float) public static LTDescr LeanAlpha(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanAlpha(RectTransform, float, float) public static LTDescr LeanAlpha(this RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr LeanAlphaText(RectTransform, float, float) public static LTDescr LeanAlphaText(this RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr LeanAlphaVertex(GameObject, float, float) public static LTDescr LeanAlphaVertex(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanCancel(GameObject) public static void LeanCancel(this GameObject gameObject) Parameters gameObject GameObject LeanCancel(GameObject, bool) public static void LeanCancel(this GameObject gameObject, bool callOnComplete) Parameters gameObject GameObject callOnComplete bool LeanCancel(GameObject, int, bool) public static void LeanCancel(this GameObject gameObject, int uniqueId, bool callOnComplete = false) Parameters gameObject GameObject uniqueId int callOnComplete bool LeanCancel(RectTransform) public static void LeanCancel(this RectTransform rectTransform) Parameters rectTransform RectTransform LeanColor(GameObject, Color, float) public static LTDescr LeanColor(this GameObject gameObject, Color to, float time) Parameters gameObject GameObject to Color time float Returns LTDescr LeanColor(Transform) public static Color LeanColor(this Transform transform) Parameters transform Transform Returns Color LeanColorText(RectTransform, Color, float) public static LTDescr LeanColorText(this RectTransform rectTransform, Color to, float time) Parameters rectTransform RectTransform to Color time float Returns LTDescr LeanDelayedCall(GameObject, float, Action) public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action callback) Parameters gameObject GameObject delayTime float callback Action Returns LTDescr LeanDelayedCall(GameObject, float, Action<object>) public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action<object> callback) Parameters gameObject GameObject delayTime float callback Action<object> Returns LTDescr LeanIsPaused(GameObject) public static bool LeanIsPaused(this GameObject gameObject) Parameters gameObject GameObject Returns bool LeanIsPaused(RectTransform) public static bool LeanIsPaused(this RectTransform rectTransform) Parameters rectTransform RectTransform Returns bool LeanIsTweening(GameObject) public static bool LeanIsTweening(this GameObject gameObject) Parameters gameObject GameObject Returns bool LeanMove(GameObject, LTBezierPath, float) public static LTDescr LeanMove(this GameObject gameObject, LTBezierPath to, float time) Parameters gameObject GameObject to LTBezierPath time float Returns LTDescr LeanMove(GameObject, LTSpline, float) public static LTDescr LeanMove(this GameObject gameObject, LTSpline to, float time) Parameters gameObject GameObject to LTSpline time float Returns LTDescr LeanMove(GameObject, Vector2, float) public static LTDescr LeanMove(this GameObject gameObject, Vector2 to, float time) Parameters gameObject GameObject to Vector2 time float Returns LTDescr LeanMove(GameObject, Vector3, float) public static LTDescr LeanMove(this GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr LeanMove(GameObject, Vector3[], float) public static LTDescr LeanMove(this GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr LeanMove(RectTransform, Vector3, float) public static LTDescr LeanMove(this RectTransform rectTransform, Vector3 to, float time) Parameters rectTransform RectTransform to Vector3 time float Returns LTDescr LeanMove(Transform, LTBezierPath, float) public static LTDescr LeanMove(this Transform transform, LTBezierPath to, float time) Parameters transform Transform to LTBezierPath time float Returns LTDescr LeanMove(Transform, LTSpline, float) public static LTDescr LeanMove(this Transform transform, LTSpline to, float time) Parameters transform Transform to LTSpline time float Returns LTDescr LeanMove(Transform, Vector2, float) public static LTDescr LeanMove(this Transform transform, Vector2 to, float time) Parameters transform Transform to Vector2 time float Returns LTDescr LeanMove(Transform, Vector3, float) public static LTDescr LeanMove(this Transform transform, Vector3 to, float time) Parameters transform Transform to Vector3 time float Returns LTDescr LeanMove(Transform, Vector3[], float) public static LTDescr LeanMove(this Transform transform, Vector3[] to, float time) Parameters transform Transform to Vector3[] time float Returns LTDescr LeanMoveLocal(GameObject, LTBezierPath, float) public static LTDescr LeanMoveLocal(this GameObject gameObject, LTBezierPath to, float time) Parameters gameObject GameObject to LTBezierPath time float Returns LTDescr LeanMoveLocal(GameObject, LTSpline, float) public static LTDescr LeanMoveLocal(this GameObject gameObject, LTSpline to, float time) Parameters gameObject GameObject to LTSpline time float Returns LTDescr LeanMoveLocal(GameObject, Vector3, float) public static LTDescr LeanMoveLocal(this GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr LeanMoveLocal(Transform, LTBezierPath, float) public static LTDescr LeanMoveLocal(this Transform transform, LTBezierPath to, float time) Parameters transform Transform to LTBezierPath time float Returns LTDescr LeanMoveLocal(Transform, LTSpline, float) public static LTDescr LeanMoveLocal(this Transform transform, LTSpline to, float time) Parameters transform Transform to LTSpline time float Returns LTDescr LeanMoveLocal(Transform, Vector3, float) public static LTDescr LeanMoveLocal(this Transform transform, Vector3 to, float time) Parameters transform Transform to Vector3 time float Returns LTDescr LeanMoveLocalX(GameObject, float, float) public static LTDescr LeanMoveLocalX(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanMoveLocalX(Transform, float, float) public static LTDescr LeanMoveLocalX(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanMoveLocalY(GameObject, float, float) public static LTDescr LeanMoveLocalY(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanMoveLocalY(Transform, float, float) public static LTDescr LeanMoveLocalY(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanMoveLocalZ(GameObject, float, float) public static LTDescr LeanMoveLocalZ(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanMoveLocalZ(Transform, float, float) public static LTDescr LeanMoveLocalZ(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanMoveSpline(GameObject, LTSpline, float) public static LTDescr LeanMoveSpline(this GameObject gameObject, LTSpline to, float time) Parameters gameObject GameObject to LTSpline time float Returns LTDescr LeanMoveSpline(GameObject, Vector3[], float) public static LTDescr LeanMoveSpline(this GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr LeanMoveSpline(Transform, LTSpline, float) public static LTDescr LeanMoveSpline(this Transform transform, LTSpline to, float time) Parameters transform Transform to LTSpline time float Returns LTDescr LeanMoveSpline(Transform, Vector3[], float) public static LTDescr LeanMoveSpline(this Transform transform, Vector3[] to, float time) Parameters transform Transform to Vector3[] time float Returns LTDescr LeanMoveSplineLocal(GameObject, Vector3[], float) public static LTDescr LeanMoveSplineLocal(this GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr LeanMoveSplineLocal(Transform, Vector3[], float) public static LTDescr LeanMoveSplineLocal(this Transform transform, Vector3[] to, float time) Parameters transform Transform to Vector3[] time float Returns LTDescr LeanMoveX(GameObject, float, float) public static LTDescr LeanMoveX(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanMoveX(RectTransform, float, float) public static LTDescr LeanMoveX(this RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr LeanMoveX(Transform, float, float) public static LTDescr LeanMoveX(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanMoveY(GameObject, float, float) public static LTDescr LeanMoveY(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanMoveY(RectTransform, float, float) public static LTDescr LeanMoveY(this RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr LeanMoveY(Transform, float, float) public static LTDescr LeanMoveY(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanMoveZ(GameObject, float, float) public static LTDescr LeanMoveZ(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanMoveZ(RectTransform, float, float) public static LTDescr LeanMoveZ(this RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr LeanMoveZ(Transform, float, float) public static LTDescr LeanMoveZ(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanPause(GameObject) public static void LeanPause(this GameObject gameObject) Parameters gameObject GameObject LeanPlay(RectTransform, Sprite[]) public static LTDescr LeanPlay(this RectTransform rectTransform, UnityEngine.Sprite[] sprites) Parameters rectTransform RectTransform sprites Sprite[] Returns LTDescr LeanResume(GameObject) public static void LeanResume(this GameObject gameObject) Parameters gameObject GameObject LeanRotate(GameObject, Vector3, float) public static LTDescr LeanRotate(this GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr LeanRotate(RectTransform, Vector3, float) public static LTDescr LeanRotate(this RectTransform rectTransform, Vector3 to, float time) Parameters rectTransform RectTransform to Vector3 time float Returns LTDescr LeanRotate(Transform, Vector3, float) public static LTDescr LeanRotate(this Transform transform, Vector3 to, float time) Parameters transform Transform to Vector3 time float Returns LTDescr LeanRotateAround(GameObject, Vector3, float, float) public static LTDescr LeanRotateAround(this GameObject gameObject, Vector3 axis, float add, float time) Parameters gameObject GameObject axis Vector3 add float time float Returns LTDescr LeanRotateAround(RectTransform, Vector3, float, float) public static LTDescr LeanRotateAround(this RectTransform rectTransform, Vector3 axis, float add, float time) Parameters rectTransform RectTransform axis Vector3 add float time float Returns LTDescr LeanRotateAround(Transform, Vector3, float, float) public static LTDescr LeanRotateAround(this Transform transform, Vector3 axis, float add, float time) Parameters transform Transform axis Vector3 add float time float Returns LTDescr LeanRotateAroundLocal(GameObject, Vector3, float, float) public static LTDescr LeanRotateAroundLocal(this GameObject gameObject, Vector3 axis, float add, float time) Parameters gameObject GameObject axis Vector3 add float time float Returns LTDescr LeanRotateAroundLocal(RectTransform, Vector3, float, float) public static LTDescr LeanRotateAroundLocal(this RectTransform rectTransform, Vector3 axis, float add, float time) Parameters rectTransform RectTransform axis Vector3 add float time float Returns LTDescr LeanRotateAroundLocal(Transform, Vector3, float, float) public static LTDescr LeanRotateAroundLocal(this Transform transform, Vector3 axis, float add, float time) Parameters transform Transform axis Vector3 add float time float Returns LTDescr LeanRotateX(GameObject, float, float) public static LTDescr LeanRotateX(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanRotateX(Transform, float, float) public static LTDescr LeanRotateX(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanRotateY(GameObject, float, float) public static LTDescr LeanRotateY(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanRotateY(Transform, float, float) public static LTDescr LeanRotateY(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanRotateZ(GameObject, float, float) public static LTDescr LeanRotateZ(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanRotateZ(Transform, float, float) public static LTDescr LeanRotateZ(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanScale(GameObject, Vector3, float) public static LTDescr LeanScale(this GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr LeanScale(RectTransform, Vector3, float) public static LTDescr LeanScale(this RectTransform rectTransform, Vector3 to, float time) Parameters rectTransform RectTransform to Vector3 time float Returns LTDescr LeanScale(Transform, Vector3, float) public static LTDescr LeanScale(this Transform transform, Vector3 to, float time) Parameters transform Transform to Vector3 time float Returns LTDescr LeanScaleX(GameObject, float, float) public static LTDescr LeanScaleX(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanScaleX(Transform, float, float) public static LTDescr LeanScaleX(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanScaleY(GameObject, float, float) public static LTDescr LeanScaleY(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanScaleY(Transform, float, float) public static LTDescr LeanScaleY(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanScaleZ(GameObject, float, float) public static LTDescr LeanScaleZ(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanScaleZ(Transform, float, float) public static LTDescr LeanScaleZ(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanSetLocalPosX(Transform, float) public static void LeanSetLocalPosX(this Transform transform, float val) Parameters transform Transform val float LeanSetLocalPosY(Transform, float) public static void LeanSetLocalPosY(this Transform transform, float val) Parameters transform Transform val float LeanSetLocalPosZ(Transform, float) public static void LeanSetLocalPosZ(this Transform transform, float val) Parameters transform Transform val float LeanSetPosX(Transform, float) public static void LeanSetPosX(this Transform transform, float val) Parameters transform Transform val float LeanSetPosY(Transform, float) public static void LeanSetPosY(this Transform transform, float val) Parameters transform Transform val float LeanSetPosZ(Transform, float) public static void LeanSetPosZ(this Transform transform, float val) Parameters transform Transform val float LeanSize(RectTransform, Vector2, float) public static LTDescr LeanSize(this RectTransform rectTransform, Vector2 to, float time) Parameters rectTransform RectTransform to Vector2 time float Returns LTDescr LeanValue(GameObject, Color, Color, float) public static LTDescr LeanValue(this GameObject gameObject, Color from, Color to, float time) Parameters gameObject GameObject from Color to Color time float Returns LTDescr LeanValue(GameObject, Action<Color>, Color, Color, float) public static LTDescr LeanValue(this GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time) Parameters gameObject GameObject callOnUpdate Action<Color> from Color to Color time float Returns LTDescr LeanValue(GameObject, Action<float, object>, float, float, float) public static LTDescr LeanValue(this GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time) Parameters gameObject GameObject callOnUpdate Action<float, object> from float to float time float Returns LTDescr LeanValue(GameObject, Action<float, float>, float, float, float) public static LTDescr LeanValue(this GameObject gameObject, Action<float, float> callOnUpdate, float from, float to, float time) Parameters gameObject GameObject callOnUpdate Action<float, float> from float to float time float Returns LTDescr LeanValue(GameObject, Action<float>, float, float, float) public static LTDescr LeanValue(this GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time) Parameters gameObject GameObject callOnUpdate Action<float> from float to float time float Returns LTDescr LeanValue(GameObject, Action<Vector2>, Vector2, Vector2, float) public static LTDescr LeanValue(this GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time) Parameters gameObject GameObject callOnUpdate Action<Vector2> from Vector2 to Vector2 time float Returns LTDescr LeanValue(GameObject, Action<Vector3>, Vector3, Vector3, float) public static LTDescr LeanValue(this GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time) Parameters gameObject GameObject callOnUpdate Action<Vector3> from Vector3 to Vector3 time float Returns LTDescr LeanValue(GameObject, float, float, float) public static LTDescr LeanValue(this GameObject gameObject, float from, float to, float time) Parameters gameObject GameObject from float to float time float Returns LTDescr LeanValue(GameObject, Vector2, Vector2, float) public static LTDescr LeanValue(this GameObject gameObject, Vector2 from, Vector2 to, float time) Parameters gameObject GameObject from Vector2 to Vector2 time float Returns LTDescr LeanValue(GameObject, Vector3, Vector3, float) public static LTDescr LeanValue(this GameObject gameObject, Vector3 from, Vector3 to, float time) Parameters gameObject GameObject from Vector3 to Vector3 time float Returns LTDescr"
  },
  "api/Global.LeanTweenType.html": {
    "href": "api/Global.LeanTweenType.html",
    "title": "Enum LeanTweenType | Czasoport Documentation",
    "keywords": "Enum LeanTweenType Namespace Global public enum LeanTweenType Fields animationCurve = 38 clamp = 36 easeInBack = 26 easeInBounce = 23 easeInCirc = 20 easeInCubic = 5 easeInElastic = 29 easeInExpo = 17 easeInOutBack = 28 easeInOutBounce = 25 easeInOutCirc = 22 easeInOutCubic = 7 easeInOutElastic = 31 easeInOutExpo = 19 easeInOutQuad = 4 easeInOutQuart = 10 easeInOutQuint = 13 easeInOutSine = 16 easeInQuad = 3 easeInQuart = 8 easeInQuint = 11 easeInSine = 14 easeOutBack = 27 easeOutBounce = 24 easeOutCirc = 21 easeOutCubic = 6 easeOutElastic = 30 easeOutExpo = 18 easeOutQuad = 2 easeOutQuart = 9 easeOutQuint = 12 easeOutSine = 15 easeShake = 33 easeSpring = 32 linear = 1 notUsed = 0 once = 35 pingPong = 37 punch = 34"
  },
  "api/Global.LogoCinematic.html": {
    "href": "api/Global.LogoCinematic.html",
    "title": "Class LogoCinematic | Czasoport Documentation",
    "keywords": "Class LogoCinematic Namespace Global public class LogoCinematic : MonoBehaviour Inheritance object LogoCinematic Fields lean public GameObject lean Field Value GameObject tween public GameObject tween Field Value GameObject"
  },
  "api/Global.MusicPlayer.html": {
    "href": "api/Global.MusicPlayer.html",
    "title": "Class MusicPlayer | Czasoport Documentation",
    "keywords": "Class MusicPlayer Namespace Global API to play song with fade in effect and specified delay; public class MusicPlayer : MonoBehaviour Inheritance object MusicPlayer Fields FadeDuration public float FadeDuration Field Value float audioSource public AudioSource audioSource Field Value AudioSource Methods ClipTime() public float ClipTime() Returns float Play(AudioClip, float) public void Play(AudioClip clip, float delay = 0) Parameters clip AudioClip delay float"
  },
  "api/Global.NotificationManager.html": {
    "href": "api/Global.NotificationManager.html",
    "title": "Class NotificationManager | Czasoport Documentation",
    "keywords": "Class NotificationManager Namespace Global public class NotificationManager : MonoBehaviour, IDataPersistence Inheritance object NotificationManager Implements IDataPersistence Fields Instance public static NotificationManager Instance Field Value NotificationManager Methods LoadPersistentData(GameData) public void LoadPersistentData(GameData gameData) Parameters gameData GameData RaiseNotification(Notification) public void RaiseNotification(Notification notification) Parameters notification Notification SavePersistentData(ref GameData) public void SavePersistentData(ref GameData gameData) Parameters gameData GameData"
  },
  "api/Global.NotificationUIController.html": {
    "href": "api/Global.NotificationUIController.html",
    "title": "Class NotificationUIController | Czasoport Documentation",
    "keywords": "Class NotificationUIController Namespace Global public class NotificationUIController : MonoBehaviour Inheritance object NotificationUIController Methods CloseNotificationPanel() public void CloseNotificationPanel() OpenNotificationPanel() public void OpenNotificationPanel()"
  },
  "api/Global.OldGUIExamplesCS.html": {
    "href": "api/Global.OldGUIExamplesCS.html",
    "title": "Class OldGUIExamplesCS | Czasoport Documentation",
    "keywords": "Class OldGUIExamplesCS Namespace Global public class OldGUIExamplesCS : MonoBehaviour Inheritance object OldGUIExamplesCS Fields beauty public Texture2D beauty Field Value Texture2D grumpy public Texture2D grumpy Field Value Texture2D Methods catMoved() public void catMoved()"
  },
  "api/Global.PathBezier2d.html": {
    "href": "api/Global.PathBezier2d.html",
    "title": "Class PathBezier2d | Czasoport Documentation",
    "keywords": "Class PathBezier2d Namespace Global public class PathBezier2d : MonoBehaviour Inheritance object PathBezier2d Fields cubes public Transform[] cubes Field Value Transform[] dude1 public GameObject dude1 Field Value GameObject dude2 public GameObject dude2 Field Value GameObject"
  },
  "api/Global.PathSpline2d.html": {
    "href": "api/Global.PathSpline2d.html",
    "title": "Class PathSpline2d | Czasoport Documentation",
    "keywords": "Class PathSpline2d Namespace Global public class PathSpline2d : MonoBehaviour Inheritance object PathSpline2d Fields cubes public Transform[] cubes Field Value Transform[] dude1 public GameObject dude1 Field Value GameObject dude2 public GameObject dude2 Field Value GameObject"
  },
  "api/Global.PathSplineEndless.html": {
    "href": "api/Global.PathSplineEndless.html",
    "title": "Class PathSplineEndless | Czasoport Documentation",
    "keywords": "Class PathSplineEndless Namespace Global public class PathSplineEndless : MonoBehaviour Inheritance object PathSplineEndless Fields car public GameObject car Field Value GameObject carInternal public GameObject carInternal Field Value GameObject cubes public GameObject[] cubes Field Value GameObject[] randomIterWidth public float randomIterWidth Field Value float trackTrailRenderers public GameObject trackTrailRenderers Field Value GameObject trees public GameObject[] trees Field Value GameObject[]"
  },
  "api/Global.PathSplinePerformance.html": {
    "href": "api/Global.PathSplinePerformance.html",
    "title": "Class PathSplinePerformance | Czasoport Documentation",
    "keywords": "Class PathSplinePerformance Namespace Global public class PathSplinePerformance : MonoBehaviour Inheritance object PathSplinePerformance Fields car public GameObject car Field Value GameObject carInternal public GameObject carInternal Field Value GameObject carSpeed public float carSpeed Field Value float circleLength public float circleLength Field Value float randomRange public float randomRange Field Value float tracerSpeed public float tracerSpeed Field Value float trackNodes public int trackNodes Field Value int trackTrailRenderers public GameObject trackTrailRenderers Field Value GameObject"
  },
  "api/Global.PathSplineTrack.html": {
    "href": "api/Global.PathSplineTrack.html",
    "title": "Class PathSplineTrack | Czasoport Documentation",
    "keywords": "Class PathSplineTrack Namespace Global public class PathSplineTrack : MonoBehaviour Inheritance object PathSplineTrack Fields car public GameObject car Field Value GameObject carInternal public GameObject carInternal Field Value GameObject trackOnePoints public Transform[] trackOnePoints Field Value Transform[] trackTrailRenderers public GameObject trackTrailRenderers Field Value GameObject"
  },
  "api/Global.PathSplines.html": {
    "href": "api/Global.PathSplines.html",
    "title": "Class PathSplines | Czasoport Documentation",
    "keywords": "Class PathSplines Namespace Global public class PathSplines : MonoBehaviour Inheritance object PathSplines Fields trans public Transform[] trans Field Value Transform[]"
  },
  "api/Global.SettingsTests.html": {
    "href": "api/Global.SettingsTests.html",
    "title": "Class SettingsTests | Czasoport Documentation",
    "keywords": "Class SettingsTests Namespace Global public class SettingsTests : MonoBehaviour Inheritance object SettingsTests"
  },
  "api/Global.TeleportPlace.html": {
    "href": "api/Global.TeleportPlace.html",
    "title": "Class TeleportPlace | Czasoport Documentation",
    "keywords": "Class TeleportPlace Namespace Global public class TeleportPlace : MonoBehaviour Inheritance object TeleportPlace Methods StartTeleportation() public Vector3 StartTeleportation() Returns Vector3"
  },
  "api/Global.TestingPunch.html": {
    "href": "api/Global.TestingPunch.html",
    "title": "Class TestingPunch | Czasoport Documentation",
    "keywords": "Class TestingPunch Namespace Global public class TestingPunch : MonoBehaviour Inheritance object TestingPunch Fields exportCurve public AnimationCurve exportCurve Field Value AnimationCurve overShootValue public float overShootValue Field Value float"
  },
  "api/Global.TestingRigidbodyCS.html": {
    "href": "api/Global.TestingRigidbodyCS.html",
    "title": "Class TestingRigidbodyCS | Czasoport Documentation",
    "keywords": "Class TestingRigidbodyCS Namespace Global public class TestingRigidbodyCS : MonoBehaviour Inheritance object TestingRigidbodyCS"
  },
  "api/Global.TestingZLegacy.NextFunc.html": {
    "href": "api/Global.TestingZLegacy.NextFunc.html",
    "title": "Delegate TestingZLegacy.NextFunc | Czasoport Documentation",
    "keywords": "Delegate TestingZLegacy.NextFunc Namespace Global public delegate void TestingZLegacy.NextFunc()"
  },
  "api/Global.TestingZLegacy.TimingType.html": {
    "href": "api/Global.TestingZLegacy.TimingType.html",
    "title": "Enum TestingZLegacy.TimingType | Czasoport Documentation",
    "keywords": "Enum TestingZLegacy.TimingType Namespace Global public enum TestingZLegacy.TimingType Fields HalfTimeScale = 2 IgnoreTimeScale = 1 Length = 4 SteadyNormalTime = 0 VariableTimeScale = 3"
  },
  "api/Global.TestingZLegacy.html": {
    "href": "api/Global.TestingZLegacy.html",
    "title": "Class TestingZLegacy | Czasoport Documentation",
    "keywords": "Class TestingZLegacy Namespace Global public class TestingZLegacy : MonoBehaviour Inheritance object TestingZLegacy Fields customAnimationCurve public AnimationCurve customAnimationCurve Field Value AnimationCurve pt1 public Transform pt1 Field Value Transform pt2 public Transform pt2 Field Value Transform pt3 public Transform pt3 Field Value Transform pt4 public Transform pt4 Field Value Transform pt5 public Transform pt5 Field Value Transform useEstimatedTime public bool useEstimatedTime Field Value bool Methods alphaExample() public void alphaExample() colorExample() public void colorExample() customTweenExample() public void customTweenExample() delayedCallExample() public void delayedCallExample() delayedCallExampleCallback() public void delayedCallExampleCallback() loopPause() public void loopPause() loopResume() public void loopResume() loopTestClamp() public void loopTestClamp() loopTestPingPong() public void loopTestPingPong() moveExample() public void moveExample() moveLocalExample() public void moveLocalExample() moveOnACurveExample() public void moveOnACurveExample() punchTest() public void punchTest() rotateAroundExample() public void rotateAroundExample() rotateExample() public void rotateExample() rotateFinished(object) public void rotateFinished(object hash) Parameters hash object rotateOnUpdate(float) public void rotateOnUpdate(float val) Parameters val float scaleExample() public void scaleExample() updateValue3Example() public void updateValue3Example() updateValue3ExampleCallback(Vector3) public void updateValue3ExampleCallback(Vector3 val) Parameters val Vector3 updateValue3ExampleUpdate(Vector3) public void updateValue3ExampleUpdate(Vector3 val) Parameters val Vector3 updateValueExample() public void updateValueExample() updateValueExampleCallback(float, object) public void updateValueExampleCallback(float val, object hash) Parameters val float hash object"
  },
  "api/Global.TestingZLegacyExt.NextFunc.html": {
    "href": "api/Global.TestingZLegacyExt.NextFunc.html",
    "title": "Delegate TestingZLegacyExt.NextFunc | Czasoport Documentation",
    "keywords": "Delegate TestingZLegacyExt.NextFunc Namespace Global public delegate void TestingZLegacyExt.NextFunc()"
  },
  "api/Global.TestingZLegacyExt.TimingType.html": {
    "href": "api/Global.TestingZLegacyExt.TimingType.html",
    "title": "Enum TestingZLegacyExt.TimingType | Czasoport Documentation",
    "keywords": "Enum TestingZLegacyExt.TimingType Namespace Global public enum TestingZLegacyExt.TimingType Fields HalfTimeScale = 2 IgnoreTimeScale = 1 Length = 4 SteadyNormalTime = 0 VariableTimeScale = 3"
  },
  "api/Global.TestingZLegacyExt.html": {
    "href": "api/Global.TestingZLegacyExt.html",
    "title": "Class TestingZLegacyExt | Czasoport Documentation",
    "keywords": "Class TestingZLegacyExt Namespace Global public class TestingZLegacyExt : MonoBehaviour Inheritance object TestingZLegacyExt Fields customAnimationCurve public AnimationCurve customAnimationCurve Field Value AnimationCurve pt1 public Transform pt1 Field Value Transform pt2 public Transform pt2 Field Value Transform pt3 public Transform pt3 Field Value Transform pt4 public Transform pt4 Field Value Transform pt5 public Transform pt5 Field Value Transform useEstimatedTime public bool useEstimatedTime Field Value bool Methods alphaExample() public void alphaExample() colorExample() public void colorExample() customTweenExample() public void customTweenExample() delayedCallExample() public void delayedCallExample() delayedCallExampleCallback() public void delayedCallExampleCallback() loopPause() public void loopPause() loopResume() public void loopResume() loopTestClamp() public void loopTestClamp() loopTestPingPong() public void loopTestPingPong() moveExample() public void moveExample() moveLocalExample() public void moveLocalExample() moveOnACurveExample() public void moveOnACurveExample() punchTest() public void punchTest() rotateAroundExample() public void rotateAroundExample() rotateExample() public void rotateExample() rotateFinished(object) public void rotateFinished(object hash) Parameters hash object rotateOnUpdate(float) public void rotateOnUpdate(float val) Parameters val float scaleExample() public void scaleExample() updateValue3Example() public void updateValue3Example() updateValue3ExampleCallback(Vector3) public void updateValue3ExampleCallback(Vector3 val) Parameters val Vector3 updateValue3ExampleUpdate(Vector3) public void updateValue3ExampleUpdate(Vector3 val) Parameters val Vector3 updateValueExample() public void updateValueExample() updateValueExampleCallback(float, object) public void updateValueExampleCallback(float val, object hash) Parameters val float hash object"
  },
  "api/Global.TweenAction.html": {
    "href": "api/Global.TweenAction.html",
    "title": "Enum TweenAction | Czasoport Documentation",
    "keywords": "Enum TweenAction Namespace Global public enum TweenAction Fields ALPHA = 21 ALPHA_VERTEX = 25 CALLBACK = 33 CALLBACK_COLOR = 27 CANVASGROUP_ALPHA = 24 CANVAS_ALPHA = 23 CANVAS_COLOR = 29 CANVAS_MOVE = 47 CANVAS_MOVE_X = 30 CANVAS_MOVE_Y = 31 CANVAS_MOVE_Z = 32 CANVAS_PLAYSPRITE = 20 CANVAS_ROTATEAROUND = 18 CANVAS_ROTATEAROUND_LOCAL = 19 CANVAS_SCALE = 48 CANVAS_SIZEDELTA = 49 COLOR = 26 DELAYED_SOUND = 46 FOLLOW = 50 GUI_ALPHA = 44 GUI_MOVE = 41 GUI_MOVE_MARGIN = 42 GUI_ROTATE = 45 GUI_SCALE = 43 MOVE = 34 MOVE_CURVED = 6 MOVE_CURVED_LOCAL = 7 MOVE_LOCAL = 35 MOVE_LOCAL_X = 3 MOVE_LOCAL_Y = 4 MOVE_LOCAL_Z = 5 MOVE_SPLINE = 8 MOVE_SPLINE_LOCAL = 9 MOVE_TO_TRANSFORM = 36 MOVE_X = 0 MOVE_Y = 1 MOVE_Z = 2 ROTATE = 37 ROTATE_AROUND = 16 ROTATE_AROUND_LOCAL = 17 ROTATE_LOCAL = 38 ROTATE_X = 13 ROTATE_Y = 14 ROTATE_Z = 15 SCALE = 39 SCALE_X = 10 SCALE_Y = 11 SCALE_Z = 12 TEXT_ALPHA = 22 TEXT_COLOR = 28 VALUE3 = 40"
  },
  "api/Global.WithinLevelPortal.html": {
    "href": "api/Global.WithinLevelPortal.html",
    "title": "Class WithinLevelPortal | Czasoport Documentation",
    "keywords": "Class WithinLevelPortal Namespace Global public class WithinLevelPortal : MonoBehaviour Inheritance object WithinLevelPortal"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace | Czasoport Documentation",
    "keywords": "Namespace Classes Audio CrossingLight Czasoport CzasoportPart ExampleSpline FollowWorld Following GeneralAdvancedTechniques GeneralBasic GeneralBasics2d GeneralCameraShake GeneralEasingTypes GeneralEventsListeners GeneralSequencer GeneralSimpleUI GeneralUISpace InputActions LTBezier LTBezierPath LTDescr LTDescrOptional LTEvent LTGUI LTRect LTSeq LTSpline Move a GameObject to a certain location LTUtility LeanAudio LeanAudioOptions LeanAudioStream LeanSmooth LeanTest LeanTester LeanTween LeanTweenExt LogoCinematic MusicPlayer API to play song with fade in effect and specified delay; NotificationManager NotificationUIController OldGUIExamplesCS PathBezier2d PathSpline2d PathSplineEndless PathSplinePerformance PathSplineTrack PathSplines SettingsTests TeleportPlace TestingPunch TestingRigidbodyCS TestingZLegacy TestingZLegacyExt WithinLevelPortal Structs InputActions.GameActions InputActions.InteractionsActions InputActions.InventoryActions InputActions.MouseActions InputActions.MovementActions InputActions.TeleportActions Interfaces InputActions.IGameActions InputActions.IInteractionsActions InputActions.IInventoryActions InputActions.IMouseActions InputActions.IMovementActions InputActions.ITeleportActions Enums GeneralEventsListeners.MyEvents LTGUI.Element_Type LeanAudioOptions.LeanAudioWaveStyle LeanProp LeanTweenType TestingZLegacy.TimingType TestingZLegacyExt.TimingType TweenAction Delegates LTDescr.ActionMethodDelegate LTDescr.EaseTypeDelegate TestingZLegacy.NextFunc TestingZLegacyExt.NextFunc"
  },
  "api/InteractableObjectSystem.InterObjectDefinition.html": {
    "href": "api/InteractableObjectSystem.InterObjectDefinition.html",
    "title": "Class InterObjectDefinition | Czasoport Documentation",
    "keywords": "Class InterObjectDefinition Namespace InteractableObjectSystem Scriptable object for items public class InterObjectDefinition : ScriptableObject Inheritance object InterObjectDefinition Fields description public string description Field Value string failedHandInterNotification public Notification failedHandInterNotification Field Value Notification failedItemInterNotification public Notification failedItemInterNotification Field Value Notification interactableName public string interactableName Field Value string prefab public GameObject prefab Field Value GameObject successfulHandInterNotification public Notification successfulHandInterNotification Field Value Notification successfulItemInterNotification public Notification successfulItemInterNotification Field Value Notification Methods ToString() public override string ToString() Returns string"
  },
  "api/InteractableObjectSystem.InteractableObject.html": {
    "href": "api/InteractableObjectSystem.InteractableObject.html",
    "title": "Class InteractableObject | Czasoport Documentation",
    "keywords": "Class InteractableObject Namespace InteractableObjectSystem public abstract class InteractableObject : MonoBehaviour, IItemInteractable, IHandInteractable, ILongHandInteractable, ILongItemInteractable Inheritance object InteractableObject Implements IItemInteractable IHandInteractable ILongHandInteractable ILongItemInteractable Derived Czasoport CzasoportPart BreakableRock LockedChest LockedDoor Trading Fields Logger protected readonly CLogger Logger Field Value CLogger definition protected InterObjectDefinition definition Field Value InterObjectDefinition Methods InteractionHand() public virtual void InteractionHand() InteractionItem(Item) public virtual bool InteractionItem(Item item) Parameters item Item Returns bool LongInteractionHand() public virtual void LongInteractionHand() LongInteractionItem(Item) public virtual bool LongInteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/InteractableObjectSystem.Objects.BreakableRock.html": {
    "href": "api/InteractableObjectSystem.Objects.BreakableRock.html",
    "title": "Class BreakableRock | Czasoport Documentation",
    "keywords": "Class BreakableRock Namespace InteractableObjectSystem.Objects public class BreakableRock : InteractableObject, IItemInteractable, IHandInteractable, ILongHandInteractable, ILongItemInteractable Inheritance object InteractableObject BreakableRock Implements IItemInteractable IHandInteractable ILongHandInteractable ILongItemInteractable Inherited Members InteractableObject.definition InteractableObject.Logger InteractableObject.LongInteractionItem(Item) InteractableObject.LongInteractionHand() Methods InteractionHand() public override void InteractionHand() InteractionItem(Item) public override bool InteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/InteractableObjectSystem.Objects.LockedChest.html": {
    "href": "api/InteractableObjectSystem.Objects.LockedChest.html",
    "title": "Class LockedChest | Czasoport Documentation",
    "keywords": "Class LockedChest Namespace InteractableObjectSystem.Objects public class LockedChest : InteractableObject, IItemInteractable, IHandInteractable, ILongHandInteractable, ILongItemInteractable Inheritance object InteractableObject LockedChest Implements IItemInteractable IHandInteractable ILongHandInteractable ILongItemInteractable Inherited Members InteractableObject.definition InteractableObject.Logger InteractableObject.LongInteractionItem(Item) InteractableObject.LongInteractionHand() Methods InteractionHand() public override void InteractionHand() InteractionItem(Item) public override bool InteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/InteractableObjectSystem.Objects.LockedDoor.html": {
    "href": "api/InteractableObjectSystem.Objects.LockedDoor.html",
    "title": "Class LockedDoor | Czasoport Documentation",
    "keywords": "Class LockedDoor Namespace InteractableObjectSystem.Objects public class LockedDoor : InteractableObject, IItemInteractable, IHandInteractable, ILongHandInteractable, ILongItemInteractable Inheritance object InteractableObject LockedDoor Implements IItemInteractable IHandInteractable ILongHandInteractable ILongItemInteractable Inherited Members InteractableObject.definition InteractableObject.Logger InteractableObject.LongInteractionItem(Item) InteractableObject.LongInteractionHand() Methods InteractionHand() public override void InteractionHand() InteractionItem(Item) public override bool InteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/InteractableObjectSystem.Objects.html": {
    "href": "api/InteractableObjectSystem.Objects.html",
    "title": "Namespace InteractableObjectSystem.Objects | Czasoport Documentation",
    "keywords": "Namespace InteractableObjectSystem.Objects Classes BreakableRock LockedChest LockedDoor"
  },
  "api/InteractableObjectSystem.html": {
    "href": "api/InteractableObjectSystem.html",
    "title": "Namespace InteractableObjectSystem | Czasoport Documentation",
    "keywords": "Namespace InteractableObjectSystem Classes InterObjectDefinition Scriptable object for items InteractableObject"
  },
  "api/Interactions.HighlightInteraction.html": {
    "href": "api/Interactions.HighlightInteraction.html",
    "title": "Class HighlightInteraction | Czasoport Documentation",
    "keywords": "Class HighlightInteraction Namespace Interactions public class HighlightInteraction : MonoBehaviour, IHighlightable Inheritance object HighlightInteraction Implements IHighlightable Methods DisableHighlight() public void DisableHighlight() EnableFocusedHighlight() public void EnableFocusedHighlight() EnableHighlight() public void EnableHighlight()"
  },
  "api/Interactions.Interactions.html": {
    "href": "api/Interactions.Interactions.html",
    "title": "Class Interactions | Czasoport Documentation",
    "keywords": "Class Interactions Namespace Interactions public class Interactions : MonoBehaviour Inheritance object Interactions Fields Instance public static Interactions Instance Field Value Interactions"
  },
  "api/Interactions.InteractionsSettingsSO.html": {
    "href": "api/Interactions.InteractionsSettingsSO.html",
    "title": "Class InteractionsSettingsSO | Czasoport Documentation",
    "keywords": "Class InteractionsSettingsSO Namespace Interactions public class InteractionsSettingsSO : ScriptableObject Inheritance object InteractionsSettingsSO Fields defaultInteractionRadius public float defaultInteractionRadius Field Value float interactablesLayer public string interactablesLayer Field Value string interactionCheckInterval public float interactionCheckInterval Field Value float itemsLayer public string itemsLayer Field Value string"
  },
  "api/Interactions.Interfaces.IHandInteractable.html": {
    "href": "api/Interactions.Interfaces.IHandInteractable.html",
    "title": "Interface IHandInteractable | Czasoport Documentation",
    "keywords": "Interface IHandInteractable Namespace Interactions.Interfaces public interface IHandInteractable Methods InteractionHand() void InteractionHand()"
  },
  "api/Interactions.Interfaces.IHighlightable.html": {
    "href": "api/Interactions.Interfaces.IHighlightable.html",
    "title": "Interface IHighlightable | Czasoport Documentation",
    "keywords": "Interface IHighlightable Namespace Interactions.Interfaces public interface IHighlightable Methods DisableHighlight() void DisableHighlight() EnableFocusedHighlight() void EnableFocusedHighlight() EnableHighlight() void EnableHighlight()"
  },
  "api/Interactions.Interfaces.IItemInteractable.html": {
    "href": "api/Interactions.Interfaces.IItemInteractable.html",
    "title": "Interface IItemInteractable | Czasoport Documentation",
    "keywords": "Interface IItemInteractable Namespace Interactions.Interfaces public interface IItemInteractable Methods InteractionItem(Item) bool InteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/Interactions.Interfaces.ILongHandInteractable.html": {
    "href": "api/Interactions.Interfaces.ILongHandInteractable.html",
    "title": "Interface ILongHandInteractable | Czasoport Documentation",
    "keywords": "Interface ILongHandInteractable Namespace Interactions.Interfaces public interface ILongHandInteractable Methods LongInteractionHand() void LongInteractionHand()"
  },
  "api/Interactions.Interfaces.ILongItemInteractable.html": {
    "href": "api/Interactions.Interfaces.ILongItemInteractable.html",
    "title": "Interface ILongItemInteractable | Czasoport Documentation",
    "keywords": "Interface ILongItemInteractable Namespace Interactions.Interfaces public interface ILongItemInteractable Methods LongInteractionItem(Item) bool LongInteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/Interactions.Interfaces.html": {
    "href": "api/Interactions.Interfaces.html",
    "title": "Namespace Interactions.Interfaces | Czasoport Documentation",
    "keywords": "Namespace Interactions.Interfaces Interfaces IHandInteractable IHighlightable IItemInteractable ILongHandInteractable ILongItemInteractable"
  },
  "api/Interactions.html": {
    "href": "api/Interactions.html",
    "title": "Namespace Interactions | Czasoport Documentation",
    "keywords": "Namespace Interactions Classes HighlightInteraction Interactions InteractionsSettingsSO"
  },
  "api/InventorySystem.EventArguments.ItemInsertedEventArgs.html": {
    "href": "api/InventorySystem.EventArguments.ItemInsertedEventArgs.html",
    "title": "Class ItemInsertedEventArgs | Czasoport Documentation",
    "keywords": "Class ItemInsertedEventArgs Namespace InventorySystem.EventArguments public class ItemInsertedEventArgs : EventArgs Inheritance object EventArgs ItemInsertedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Item public Item Item Field Value Item Slot public int Slot Field Value int"
  },
  "api/InventorySystem.EventArguments.ItemRemovedEventArgs.html": {
    "href": "api/InventorySystem.EventArguments.ItemRemovedEventArgs.html",
    "title": "Class ItemRemovedEventArgs | Czasoport Documentation",
    "keywords": "Class ItemRemovedEventArgs Namespace InventorySystem.EventArguments public class ItemRemovedEventArgs : EventArgs Inheritance object EventArgs ItemRemovedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Item public Item Item Field Value Item Slot public int Slot Field Value int"
  },
  "api/InventorySystem.EventArguments.ItemStateChangedEventArgs.html": {
    "href": "api/InventorySystem.EventArguments.ItemStateChangedEventArgs.html",
    "title": "Class ItemStateChangedEventArgs | Czasoport Documentation",
    "keywords": "Class ItemStateChangedEventArgs Namespace InventorySystem.EventArguments public class ItemStateChangedEventArgs Inheritance object ItemStateChangedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Item public Item Item Field Value Item Slot public int Slot Field Value int"
  },
  "api/InventorySystem.EventArguments.SelectedSlotChangedEventArgs.html": {
    "href": "api/InventorySystem.EventArguments.SelectedSlotChangedEventArgs.html",
    "title": "Class SelectedSlotChangedEventArgs | Czasoport Documentation",
    "keywords": "Class SelectedSlotChangedEventArgs Namespace InventorySystem.EventArguments public class SelectedSlotChangedEventArgs : EventArgs Inheritance object EventArgs SelectedSlotChangedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Slot public int Slot Field Value int"
  },
  "api/InventorySystem.EventArguments.html": {
    "href": "api/InventorySystem.EventArguments.html",
    "title": "Namespace InventorySystem.EventArguments | Czasoport Documentation",
    "keywords": "Namespace InventorySystem.EventArguments Classes ItemInsertedEventArgs ItemRemovedEventArgs ItemStateChangedEventArgs SelectedSlotChangedEventArgs"
  },
  "api/InventorySystem.Inventory.html": {
    "href": "api/InventorySystem.Inventory.html",
    "title": "Class Inventory | Czasoport Documentation",
    "keywords": "Class Inventory Namespace InventorySystem public class Inventory : MonoBehaviour Inheritance object Inventory Fields Instance public static Inventory Instance Field Value Inventory itemHideout public Transform itemHideout Field Value Transform Methods GetAllItems() Get list of items in inventory without removing them. All null values are removed, so items won't keep their original indexes. public List<Item> GetAllItems() Returns List<Item> List of Items, without including empty slots. GetInventory() Get inventory, including empty slots, without removing items in it. Items are placed on their corresponding indexes. public Item[] GetInventory() Returns Item[] Array of Item objects including empty slots. GetSelectedItem(out Item) Get currently selected item, but do not remove this item from inventory. public bool GetSelectedItem(out Item item) Parameters item Item Retrieved item if slot was not empty. Returns bool True if slot was not empty, false if slot was empty. If empty, then item will be null. InsertItem(Item) Insert item into inventory. If the selected slot is empty, then item is placed into that slot. public bool InsertItem(Item item) Parameters item Item Item to insert. Returns bool RemoveItem(out Item) Retrieve and remove item from the Inventory. Empty slot is always the result. public bool RemoveItem(out Item item) Parameters item Item Removed item if selected slot was not empty. Returns bool True if item was removed, false if slot was empty. If false, retrieved item will be null. UseItem() Changes durability of the selected item by one for each use. If durability is exactly 0, removes item from inventory. public bool UseItem() Returns bool True if item was removed, false if not. Events ItemInserted public event EventHandler<ItemInsertedEventArgs> ItemInserted Event Type EventHandler<ItemInsertedEventArgs> ItemRemoved public event EventHandler<ItemRemovedEventArgs> ItemRemoved Event Type EventHandler<ItemRemovedEventArgs> ItemStateChanged public event EventHandler<ItemStateChangedEventArgs> ItemStateChanged Event Type EventHandler<ItemStateChangedEventArgs> SelectedSlotChanged public event EventHandler<SelectedSlotChangedEventArgs> SelectedSlotChanged Event Type EventHandler<SelectedSlotChangedEventArgs>"
  },
  "api/InventorySystem.InventorySettingsSO.html": {
    "href": "api/InventorySystem.InventorySettingsSO.html",
    "title": "Class InventorySettingsSO | Czasoport Documentation",
    "keywords": "Class InventorySettingsSO Namespace InventorySystem public class InventorySettingsSO : ScriptableObject Inheritance object InventorySettingsSO Fields itemsCount public int itemsCount Field Value int"
  },
  "api/InventorySystem.Tests.InventoryGeneralTests.html": {
    "href": "api/InventorySystem.Tests.InventoryGeneralTests.html",
    "title": "Class InventoryGeneralTests | Czasoport Documentation",
    "keywords": "Class InventoryGeneralTests Namespace InventorySystem.Tests public class InventoryGeneralTests : MonoBehaviour Inheritance object InventoryGeneralTests Methods Start() public void Start()"
  },
  "api/InventorySystem.Tests.html": {
    "href": "api/InventorySystem.Tests.html",
    "title": "Namespace InventorySystem.Tests | Czasoport Documentation",
    "keywords": "Namespace InventorySystem.Tests Classes InventoryGeneralTests"
  },
  "api/InventorySystem.UI.InventoryUI.html": {
    "href": "api/InventorySystem.UI.InventoryUI.html",
    "title": "Class InventoryUI | Czasoport Documentation",
    "keywords": "Class InventoryUI Namespace InventorySystem.UI Manages UI of inventory slots. public class InventoryUI : MonoBehaviour Inheritance object InventoryUI Methods OnChangeSelectedSlot(object, SelectedSlotChangedEventArgs) Highlight choosed slot public void OnChangeSelectedSlot(object sender, SelectedSlotChangedEventArgs args) Parameters sender object args SelectedSlotChangedEventArgs OnItemAdded(object, ItemInsertedEventArgs) Change slot's image to newItem and set durability. public void OnItemAdded(object sender, ItemInsertedEventArgs args) Parameters sender object args ItemInsertedEventArgs OnItemChangeState(object, ItemStateChangedEventArgs) Change slot's image and durability. public void OnItemChangeState(object sender, ItemStateChangedEventArgs args) Parameters sender object args ItemStateChangedEventArgs OnItemRemoved(object, ItemRemovedEventArgs) Change slot's image.apha to 0 and set text responsible for durability to \"\". public void OnItemRemoved(object sender, ItemRemovedEventArgs args) Parameters sender object args ItemRemovedEventArgs"
  },
  "api/InventorySystem.UI.Slot.html": {
    "href": "api/InventorySystem.UI.Slot.html",
    "title": "Class Slot | Czasoport Documentation",
    "keywords": "Class Slot Namespace InventorySystem.UI UI slot class. public class Slot : MonoBehaviour Inheritance object Slot Methods Active() Active slot's frame public void Active() AddItem(Sprite) Add item to slot public void AddItem(Sprite newItem) Parameters newItem Sprite Disactive() Disactive slot's frame public void Disactive() RemoveItem() Remove item from slot public void RemoveItem() SetDurability(int) Change slot's text to new_durability or \"\" public void SetDurability(int new_durability) Parameters new_durability int"
  },
  "api/InventorySystem.UI.Test.TestEvents.html": {
    "href": "api/InventorySystem.UI.Test.TestEvents.html",
    "title": "Class TestEvents | Czasoport Documentation",
    "keywords": "Class TestEvents Namespace InventorySystem.UI.Test Script to test InventoryUI public class TestEvents : MonoBehaviour Inheritance object TestEvents"
  },
  "api/InventorySystem.UI.Test.html": {
    "href": "api/InventorySystem.UI.Test.html",
    "title": "Namespace InventorySystem.UI.Test | Czasoport Documentation",
    "keywords": "Namespace InventorySystem.UI.Test Classes TestEvents Script to test InventoryUI"
  },
  "api/InventorySystem.UI.html": {
    "href": "api/InventorySystem.UI.html",
    "title": "Namespace InventorySystem.UI | Czasoport Documentation",
    "keywords": "Namespace InventorySystem.UI Classes InventoryUI Manages UI of inventory slots. Slot UI slot class."
  },
  "api/InventorySystem.html": {
    "href": "api/InventorySystem.html",
    "title": "Namespace InventorySystem | Czasoport Documentation",
    "keywords": "Namespace InventorySystem Classes Inventory InventorySettingsSO"
  },
  "api/Items.Item.html": {
    "href": "api/Items.Item.html",
    "title": "Class Item | Czasoport Documentation",
    "keywords": "Class Item Namespace Items public class Item : MonoBehaviour, IHandInteractable, ILongHandInteractable Inheritance object Item Implements IHandInteractable ILongHandInteractable Constructors Item() public Item() Item(ItemSO) public Item(ItemSO itemScriptableObject) Parameters itemScriptableObject ItemSO Fields uniqueId public string uniqueId Field Value string Properties Durability public int Durability { get; set; } Property Value int ItemSO public ItemSO ItemSO { get; } Property Value ItemSO Methods InteractionHand() public void InteractionHand() LongInteractionHand() public void LongInteractionHand() ToString() public override string ToString() Returns string"
  },
  "api/Items.ItemSO.html": {
    "href": "api/Items.ItemSO.html",
    "title": "Class ItemSO | Czasoport Documentation",
    "keywords": "Class ItemSO Namespace Items Scriptable object for items public class ItemSO : ScriptableObject Inheritance object ItemSO Fields description public string description Field Value string dropNotification public Notification dropNotification Field Value Notification durability public int durability Field Value int image public Sprite image Field Value Sprite interactionDistance public float interactionDistance Field Value float itemName public string itemName Field Value string pickUpNotification public Notification pickUpNotification Field Value Notification prefab public GameObject prefab Field Value GameObject Methods ToString() public override string ToString() Returns string"
  },
  "api/Items.html": {
    "href": "api/Items.html",
    "title": "Namespace Items | Czasoport Documentation",
    "keywords": "Namespace Items Classes Item ItemSO Scriptable object for items"
  },
  "api/LevelTimeChange.LevelsLoader.LevelInfoSO.html": {
    "href": "api/LevelTimeChange.LevelsLoader.LevelInfoSO.html",
    "title": "Class LevelInfoSO | Czasoport Documentation",
    "keywords": "Class LevelInfoSO Namespace LevelTimeChange.LevelsLoader Stores information about one 'platform' in the game. public class LevelInfoSO : UniqueScriptableObject Inheritance object UniqueScriptableObject LevelInfoSO Inherited Members UniqueScriptableObject.uniqueId UniqueScriptableObject.GenerateUniqueId() Fields neighbourLevels public LevelInfoSO[] neighbourLevels Field Value LevelInfoSO[] sceneName public string sceneName Field Value string Methods ToString() public override string ToString() Returns string"
  },
  "api/LevelTimeChange.LevelsLoader.LevelManager.html": {
    "href": "api/LevelTimeChange.LevelsLoader.LevelManager.html",
    "title": "Class LevelManager | Czasoport Documentation",
    "keywords": "Class LevelManager Namespace LevelTimeChange.LevelsLoader LevelManager is responsible for managing one 'level platform'. It activates and deactivates level content, talks with LevelsManager and LevelPortals to perform Discovery process. public class LevelManager : MonoBehaviour Inheritance object LevelManager Fields currentLevel public LevelInfoSO currentLevel Field Value LevelInfoSO neighborLevels public List<LevelInfoSO> neighborLevels Field Value List<LevelInfoSO> Methods ActivateLevel() It will set all level content to be active. Use it only when this level is going to be one played on by the player. public void ActivateLevel() AddLevelObject(GameObject) Sets object's parent to current scene's content. public void AddLevelObject(GameObject levelObject) Parameters levelObject GameObject Object that should be part of the current scene DeactivateLevel() It will set all level content to be inactive and report to LevelsManager that this scene is ready for Discovery process. It is automatically called when scene is loaded. public void DeactivateLevel() FindTimelineMaps() public TimelineMaps FindTimelineMaps() Returns TimelineMaps MakeDiscovery(LevelInfoSO) Start discovery process with specified level. It tells portals on this scene to try to match with portals on another one. public void MakeDiscovery(LevelInfoSO levelToDiscover) Parameters levelToDiscover LevelInfoSO Level ready for discovery process. ReturnMatchingPortal(LevelInfoSO, LevelPortal) Used in discovery process. For specified portal and source level, return matching portal on this scene. public LevelPortal ReturnMatchingPortal(LevelInfoSO sourceLevel, LevelPortal sourcePortal) Parameters sourceLevel LevelInfoSO Level that asks for discovery. sourcePortal LevelPortal Specific portal that asks for discovery. Returns LevelPortal Matching portal. Exceptions Exception Exception is thrown when there is no matching portal. ToString() public override string ToString() Returns string"
  },
  "api/LevelTimeChange.LevelsLoader.LevelPortal.html": {
    "href": "api/LevelTimeChange.LevelsLoader.LevelPortal.html",
    "title": "Class LevelPortal | Czasoport Documentation",
    "keywords": "Class LevelPortal Namespace LevelTimeChange.LevelsLoader This component is used to define teleport to another platform. Based on information provided to it, it tries to discover matching teleport on another scene. When successful, it is able to teleport player to this scene. public class LevelPortal : MonoBehaviour Inheritance object LevelPortal Fields destinedLevel public LevelInfoSO destinedLevel Field Value LevelInfoSO Methods GetTeleportPoint() Returns point in the world this teleports point to. public Vector3 GetTeleportPoint() Returns Vector3 Point in game. IsMatch(LevelInfoSO, LevelPortal) Check if provided portal matches this portal. public bool IsMatch(LevelInfoSO sourceLevel, LevelPortal sourcePortal) Parameters sourceLevel LevelInfoSO Source level. sourcePortal LevelPortal Potential level match. Returns bool True if portal is a match, False otherwise. MakeDiscovery(LevelInfoSO) Start discovery process with destined level. Invoking this function on it's own will not ensure that destined level is loaded and can take part in discovery process. public void MakeDiscovery(LevelInfoSO currentLevel) Parameters currentLevel LevelInfoSO Source level of discovery. SetTimeLine(TimeLine) Set the timeline of the portal. Used during loading scenes. public void SetTimeLine(TimeLine timeLine) Parameters timeLine TimeLine ToString() public override string ToString() Returns string"
  },
  "api/LevelTimeChange.LevelsLoader.LevelsManager.html": {
    "href": "api/LevelTimeChange.LevelsLoader.LevelsManager.html",
    "title": "Class LevelsManager | Czasoport Documentation",
    "keywords": "Class LevelsManager Namespace LevelTimeChange.LevelsLoader Manager of levels loading and switching system. Central point of communication between rest of included components. It is a singleton, attached to object present through the game. public class LevelsManager : MonoBehaviour, IDataPersistence Inheritance object LevelsManager Implements IDataPersistence Fields LoadedLevels All currently loaded levels. public Dictionary<LevelInfoSO, LevelManager> LoadedLevels Field Value Dictionary<LevelInfoSO, LevelManager> Properties CurrentLevelManager public LevelManager CurrentLevelManager { get; } Property Value LevelManager Instance Singleton instance of this class. public static LevelsManager Instance { get; } Property Value LevelsManager Methods ChangeLevel(LevelInfoSO, LevelPortal) Change active level. public void ChangeLevel(LevelInfoSO destinedLevelInfo, LevelPortal destinationPortal) Parameters destinedLevelInfo LevelInfoSO Level to be switched to. destinationPortal LevelPortal Portal to be switched to. LoadFirstLevel() Load first scene after joining the game public void LoadFirstLevel() LoadPersistentData(GameData) public void LoadPersistentData(GameData gameData) Parameters gameData GameData ReportForDiscovery(LevelInfoSO) This method is used by the LevelManager of some scene to let the system know that the scene has been loaded and is ready for discovery process from current scene. public void ReportForDiscovery(LevelInfoSO level) Parameters level LevelInfoSO SavePersistentData(ref GameData) public void SavePersistentData(ref GameData gameData) Parameters gameData GameData ToString() public override string ToString() Returns string"
  },
  "api/LevelTimeChange.LevelsLoader.TimelineMaps.html": {
    "href": "api/LevelTimeChange.LevelsLoader.TimelineMaps.html",
    "title": "Class TimelineMaps | Czasoport Documentation",
    "keywords": "Class TimelineMaps Namespace LevelTimeChange.LevelsLoader public class TimelineMaps Inheritance object TimelineMaps Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TimelineMaps(Transform, Transform, Transform) public TimelineMaps(Transform past, Transform present, Transform future) Parameters past Transform present Transform future Transform Properties future public Transform future { get; set; } Property Value Transform past public Transform past { get; set; } Property Value Transform present public Transform present { get; set; } Property Value Transform"
  },
  "api/LevelTimeChange.LevelsLoader.html": {
    "href": "api/LevelTimeChange.LevelsLoader.html",
    "title": "Namespace LevelTimeChange.LevelsLoader | Czasoport Documentation",
    "keywords": "Namespace LevelTimeChange.LevelsLoader Classes LevelInfoSO Stores information about one 'platform' in the game. LevelManager LevelManager is responsible for managing one 'level platform'. It activates and deactivates level content, talks with LevelsManager and LevelPortals to perform Discovery process. LevelPortal This component is used to define teleport to another platform. Based on information provided to it, it tries to discover matching teleport on another scene. When successful, it is able to teleport player to this scene. LevelsManager Manager of levels loading and switching system. Central point of communication between rest of included components. It is a singleton, attached to object present through the game. TimelineMaps"
  },
  "api/LevelTimeChange.TimeChange.CheckCollider.html": {
    "href": "api/LevelTimeChange.TimeChange.CheckCollider.html",
    "title": "Class CheckCollider | Czasoport Documentation",
    "keywords": "Class CheckCollider Namespace LevelTimeChange.TimeChange Provides checking collision for time change mechanic. public class CheckCollider : MonoBehaviour Inheritance object CheckCollider Methods IsNotTouching() Checking if Player can change time. CheckCollider's collider isn't touching any not trigger collider. public bool IsNotTouching() Returns bool Whether Player can change time or not"
  },
  "api/LevelTimeChange.TimeChange.Tests.PlayerTTCtest.html": {
    "href": "api/LevelTimeChange.TimeChange.Tests.PlayerTTCtest.html",
    "title": "Class PlayerTTCtest | Czasoport Documentation",
    "keywords": "Class PlayerTTCtest Namespace LevelTimeChange.TimeChange.Tests public class PlayerTTCtest : MonoBehaviour Inheritance object PlayerTTCtest"
  },
  "api/LevelTimeChange.TimeChange.Tests.html": {
    "href": "api/LevelTimeChange.TimeChange.Tests.html",
    "title": "Namespace LevelTimeChange.TimeChange.Tests | Czasoport Documentation",
    "keywords": "Namespace LevelTimeChange.TimeChange.Tests Classes PlayerTTCtest"
  },
  "api/LevelTimeChange.TimeChange.TimeChanger.OnTimeChangeEventArgs.html": {
    "href": "api/LevelTimeChange.TimeChange.TimeChanger.OnTimeChangeEventArgs.html",
    "title": "Class TimeChanger.OnTimeChangeEventArgs | Czasoport Documentation",
    "keywords": "Class TimeChanger.OnTimeChangeEventArgs Namespace LevelTimeChange.TimeChange public class TimeChanger.OnTimeChangeEventArgs : EventArgs Inheritance object EventArgs TimeChanger.OnTimeChangeEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields time public TimeLine time Field Value TimeLine"
  },
  "api/LevelTimeChange.TimeChange.TimeChanger.html": {
    "href": "api/LevelTimeChange.TimeChange.TimeChanger.html",
    "title": "Class TimeChanger | Czasoport Documentation",
    "keywords": "Class TimeChanger Namespace LevelTimeChange.TimeChange Manages time changing mechanic. public class TimeChanger : MonoBehaviour, IDataPersistence Inheritance object TimeChanger Implements IDataPersistence Fields actualTime Timeline the player is currently on. public TimeLine actualTime Field Value TimeLine Properties Instance public static TimeChanger Instance { get; } Property Value TimeChanger Methods CanChangeTime(TimeLine) Asks appropriate CheckCollider if Player can change time. public bool CanChangeTime(TimeLine timeToCheck) Parameters timeToCheck TimeLine Returns bool EnableTimeChange() public void EnableTimeChange() IsTimeUnlocked(TimeLine) public bool IsTimeUnlocked(TimeLine timeLine) Parameters timeLine TimeLine Returns bool LoadPersistentData(GameData) public void LoadPersistentData(GameData gameData) Parameters gameData GameData LockTimeline(TimeLine) public void LockTimeline(TimeLine timelineToLock) Parameters timelineToLock TimeLine SavePersistentData(ref GameData) public void SavePersistentData(ref GameData gameData) Parameters gameData GameData ToString() public override string ToString() Returns string UnlockTimeline(TimeLine) public void UnlockTimeline(TimeLine timelineToUnlock) Parameters timelineToUnlock TimeLine Events OnTimeChange public event EventHandler<TimeChanger.OnTimeChangeEventArgs> OnTimeChange Event Type EventHandler<TimeChanger.OnTimeChangeEventArgs>"
  },
  "api/LevelTimeChange.TimeChange.html": {
    "href": "api/LevelTimeChange.TimeChange.html",
    "title": "Namespace LevelTimeChange.TimeChange | Czasoport Documentation",
    "keywords": "Namespace LevelTimeChange.TimeChange Classes CheckCollider Provides checking collision for time change mechanic. TimeChanger Manages time changing mechanic. TimeChanger.OnTimeChangeEventArgs"
  },
  "api/LevelTimeChange.TimeLine.html": {
    "href": "api/LevelTimeChange.TimeLine.html",
    "title": "Enum TimeLine | Czasoport Documentation",
    "keywords": "Enum TimeLine Namespace LevelTimeChange public enum TimeLine Fields Future = 2 Past = 0 Present = 1"
  },
  "api/LevelTimeChange.TimePlatformChangeSettingsSO.html": {
    "href": "api/LevelTimeChange.TimePlatformChangeSettingsSO.html",
    "title": "Class TimePlatformChangeSettingsSO | Czasoport Documentation",
    "keywords": "Class TimePlatformChangeSettingsSO Namespace LevelTimeChange Settings for scene changing and time changing systems. public class TimePlatformChangeSettingsSO : ScriptableObject Inheritance object TimePlatformChangeSettingsSO Fields loopTimeChange public bool loopTimeChange Field Value bool offsetFromPresentPlatform public Vector2 offsetFromPresentPlatform Field Value Vector2 platformChangeAnimLength public float platformChangeAnimLength Field Value float timelineChangeAnimLength public float timelineChangeAnimLength Field Value float"
  },
  "api/LevelTimeChange.html": {
    "href": "api/LevelTimeChange.html",
    "title": "Namespace LevelTimeChange | Czasoport Documentation",
    "keywords": "Namespace LevelTimeChange Classes TimePlatformChangeSettingsSO Settings for scene changing and time changing systems. Enums TimeLine"
  },
  "api/NPC.PathWalking.html": {
    "href": "api/NPC.PathWalking.html",
    "title": "Class PathWalking | Czasoport Documentation",
    "keywords": "Class PathWalking Namespace NPC public class PathWalking : MonoBehaviour Inheritance object PathWalking Methods ContinueWalk() Npc continues walk by path public void ContinueWalk() StopWalk() Stop npc public void StopWalk()"
  },
  "api/NPC.Trading.html": {
    "href": "api/NPC.Trading.html",
    "title": "Class Trading | Czasoport Documentation",
    "keywords": "Class Trading Namespace NPC public class Trading : InteractableObject, IItemInteractable, IHandInteractable, ILongHandInteractable, ILongItemInteractable Inheritance object InteractableObject Trading Implements IItemInteractable IHandInteractable ILongHandInteractable ILongItemInteractable Inherited Members InteractableObject.definition InteractableObject.Logger InteractableObject.LongInteractionItem(Item) InteractableObject.LongInteractionHand() Methods InteractionHand() public override void InteractionHand() InteractionItem(Item) public override bool InteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/NPC.html": {
    "href": "api/NPC.html",
    "title": "Namespace NPC | Czasoport Documentation",
    "keywords": "Namespace NPC Classes PathWalking Trading"
  },
  "api/Notifications.Notification.html": {
    "href": "api/Notifications.Notification.html",
    "title": "Class Notification | Czasoport Documentation",
    "keywords": "Class Notification Namespace Notifications [Serializable] public class Notification Inheritance object Notification Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Notification(string, float) public Notification(string message, float displayTime) Parameters message string displayTime float Fields displayTime public float displayTime Field Value float message public string message Field Value string"
  },
  "api/Notifications.html": {
    "href": "api/Notifications.html",
    "title": "Namespace Notifications | Czasoport Documentation",
    "keywords": "Namespace Notifications Classes Notification"
  },
  "api/PlayerScripts.Player.html": {
    "href": "api/PlayerScripts.Player.html",
    "title": "Class Player | Czasoport Documentation",
    "keywords": "Class Player Namespace PlayerScripts public class Player : MonoBehaviour, IDataPersistence Inheritance object Player Implements IDataPersistence Properties Instance public static Player Instance { get; } Property Value Player Methods LoadPersistentData(GameData) public void LoadPersistentData(GameData gameData) Parameters gameData GameData SavePersistentData(ref GameData) public void SavePersistentData(ref GameData gameData) Parameters gameData GameData ToString() public override string ToString() Returns string Events OnPlayerMoved public event EventHandler OnPlayerMoved Event Type EventHandler"
  },
  "api/PlayerScripts.PlayerSettingsSO.html": {
    "href": "api/PlayerScripts.PlayerSettingsSO.html",
    "title": "Class PlayerSettingsSO | Czasoport Documentation",
    "keywords": "Class PlayerSettingsSO Namespace PlayerScripts Settings for scene changing and time changing systems. public class PlayerSettingsSO : ScriptableObject Inheritance object PlayerSettingsSO Fields movementSpeed public float movementSpeed Field Value float"
  },
  "api/PlayerScripts.html": {
    "href": "api/PlayerScripts.html",
    "title": "Namespace PlayerScripts | Czasoport Documentation",
    "keywords": "Namespace PlayerScripts Classes Player PlayerSettingsSO Settings for scene changing and time changing systems."
  },
  "api/Settings.DeveloperSettings.html": {
    "href": "api/Settings.DeveloperSettings.html",
    "title": "Class DeveloperSettings | Czasoport Documentation",
    "keywords": "Class DeveloperSettings Namespace Settings Manages different setting sets used for internal settings. public class DeveloperSettings : MonoBehaviour Inheritance object DeveloperSettings Fields Instance public static DeveloperSettings Instance Field Value DeveloperSettings appSettings Application settings public ApplicationSettingsSO appSettings Field Value ApplicationSettingsSO dsdSettings Default settings for new game save public DefaultSaveDataSO dsdSettings Field Value DefaultSaveDataSO intSettings Interactions settings public InteractionsSettingsSO intSettings Field Value InteractionsSettingsSO invSettings Inventory settings public InventorySettingsSO invSettings Field Value InventorySettingsSO playerSettings Player settings public PlayerSettingsSO playerSettings Field Value PlayerSettingsSO tpcSettings Settings for Time Change and Platform Change systems public TimePlatformChangeSettingsSO tpcSettings Field Value TimePlatformChangeSettingsSO"
  },
  "api/Settings.html": {
    "href": "api/Settings.html",
    "title": "Namespace Settings | Czasoport Documentation",
    "keywords": "Namespace Settings Classes DeveloperSettings Manages different setting sets used for internal settings."
  },
  "api/UI.Menu.html": {
    "href": "api/UI.Menu.html",
    "title": "Class Menu | Czasoport Documentation",
    "keywords": "Class Menu Namespace UI Script for main menu in game public class Menu : MonoBehaviour Inheritance object Menu"
  },
  "api/UI.PauseUI.html": {
    "href": "api/UI.PauseUI.html",
    "title": "Class PauseUI | Czasoport Documentation",
    "keywords": "Class PauseUI Namespace UI Script for pause menu in game public class PauseUI : MonoBehaviour Inheritance object PauseUI"
  },
  "api/UI.TimeChangeUI.html": {
    "href": "api/UI.TimeChangeUI.html",
    "title": "Class TimeChangeUI | Czasoport Documentation",
    "keywords": "Class TimeChangeUI Namespace UI public class TimeChangeUI : MonoBehaviour Inheritance object TimeChangeUI Methods UpdateTimeUI() public void UpdateTimeUI()"
  },
  "api/UI.html": {
    "href": "api/UI.html",
    "title": "Namespace UI | Czasoport Documentation",
    "keywords": "Namespace UI Classes Menu Script for main menu in game PauseUI Script for pause menu in game TimeChangeUI"
  },
  "api/Utils.Attributes.ObjectIdentifierAttribute.html": {
    "href": "api/Utils.Attributes.ObjectIdentifierAttribute.html",
    "title": "Class ObjectIdentifierAttribute | Czasoport Documentation",
    "keywords": "Class ObjectIdentifierAttribute Namespace Utils.Attributes public class ObjectIdentifierAttribute : PropertyAttribute Inheritance object ObjectIdentifierAttribute"
  },
  "api/Utils.Attributes.ReadOnlyAttribute.html": {
    "href": "api/Utils.Attributes.ReadOnlyAttribute.html",
    "title": "Class ReadOnlyAttribute | Czasoport Documentation",
    "keywords": "Class ReadOnlyAttribute Namespace Utils.Attributes public class ReadOnlyAttribute : PropertyAttribute Inheritance object ReadOnlyAttribute"
  },
  "api/Utils.Attributes.html": {
    "href": "api/Utils.Attributes.html",
    "title": "Namespace Utils.Attributes | Czasoport Documentation",
    "keywords": "Namespace Utils.Attributes Classes ObjectIdentifierAttribute ReadOnlyAttribute"
  },
  "api/Utils.UniqueScriptableObject.html": {
    "href": "api/Utils.UniqueScriptableObject.html",
    "title": "Class UniqueScriptableObject | Czasoport Documentation",
    "keywords": "Class UniqueScriptableObject Namespace Utils public class UniqueScriptableObject : ScriptableObject Inheritance object UniqueScriptableObject Derived LevelInfoSO Fields uniqueId public string uniqueId Field Value string Methods GenerateUniqueId() public void GenerateUniqueId()"
  },
  "api/Utils.html": {
    "href": "api/Utils.html",
    "title": "Namespace Utils | Czasoport Documentation",
    "keywords": "Namespace Utils Classes UniqueScriptableObject"
  },
  "gdd/Fabuła/Fabuła.html": {
    "href": "gdd/Fabuła/Fabuła.html",
    "title": "Fabuła | Czasoport Documentation",
    "keywords": "Fabuła <-- GDD Motyw Jesteś aspirującym funkcjonariuszem Rady Czasoprzestrzeni. Jako egzemin wstępny musisz \"uratować\" mało znaczący świat przed zagładą. Zarys Fabularny Daleka przyszłość, Ziemia wynalazła technologię umożliwiającą podróż w czasoprzestrzeni, ale w tym czasie zaczęło brakować im surowców. Inne planety systemu słonecznego okazały się nieadekwatne do życia lub produkcji. Aby rozwiązać problem, Rada Czasoprzestrzeni, wysyła swoich pracowników na inne planety, w innych czasoprzestrzeniach, aby przejęli ich surowce. Ci funkcjonariusze potrafią przemieszczać się po różnych czasach cywilizacji na tej planecie, aby manipulować ich rozwój w taki sposób, aby produkowała ona duże ilości pożądanego surowca. Ostatecznie, Ziemianie kradną te surowce, przez co cywilizacje widzą ich jako kosmitów. (Przykładowo, ziemianie kradną zboże przenosząc je na Ziemie w sposób, który tworzy kręgi w zbożu). Gracz jest aspirującym funkcjonariuszem Rady Czasoprzestrzeni i jako egzamin wstępny wysłany zostaje na planetę niskiej wartości, która bez pomocy ulegnie zagładzie. Jeżeli graczowi się uda ją uratować, Ziemia zyska surowce i nowego funkcjonariusza. Jeżeli nie, trudno, ta planeta nie jest tak ważna, a gracz najwyżej nie zostanie przyjęty do pracy :( (Stworzenie szczegółowej fabuły zajmie trochę dłużej) (To, jak dokładnie działa i funkcjonuje Rada Czasoprzestrzeni nie jest zbyt ważne na ten moment. Jeżeli graficy chcą stworzyć jakiś concept art to mogą dać ponieść się wyobraźni, ale ważniejszy jest świat obcy, na którym gracz będzie przez praktycznie całą rozgrywkę) Progresja Historii Do napisania (Stworzenie szczegółowej fabuły zajmie trochę dłużej) Miejsca Akcji Przykładowe pomysły: pola/przedmieścia/zrujnowane budynki wioska/miasto/zniszczona metropolia centrum wioski/rynek/pobojowisko las/park/spalony park jaskinia/kopalnia/zawalona jaskinia Intro Pierwsza lokalizacja z którą ma do czynienia gracz, jak również jedyna planowana lokacja do demo gry. Początki - pola rolnicze z namiotami nieopodal. Złoty Wiek - przedmieścia tętniące życiem nie różniącym się zbytnio od dzisiejszego, ziemskiego. Upadek - zawalony mur graniczny, spalony punkt kontrolny. Kilka domów w złym stanie nieopodal. Lore To później."
  },
  "gdd/GDD.html": {
    "href": "gdd/GDD.html",
    "title": "Game Design Document | Czasoport Documentation",
    "keywords": "Game Design Document <-- ReadMe --> Fabuła <-- Zawiera: Motyw gry Opis Głównej Historii Jak historia ma się rozwijać podczas rozgrywki Lokacje użyte podczas kreowania wydarzeń Lore świata (Opcjonalie) --> Rozgrywka <-- Zawiera: Cel Gry Mechanika gry Opis umiejętności Gracza Jak mechanika będzie się rozwijała podczas rozgrywki Ulepszenia oraz Przedmioty Kiedy następuję przegrana Rozgrywki --> Postacie i Obiekty <-- Zawiera: Opis Postaci występujących w grze Jaką spełniają role np. handlarz, pomocnik gracza Historia tych postaci oraz ich dialogi Przedmioty które wpływają na rozgrywkę Ich specjalne właściwości --> Poziomy <-- Zawiera: Szkice poziomów oraz wykorzystane lokacje do ich stworzenia Opis jak dany poziom będzie działał na rozgrywkę czyli. W jaki sposób on utrudnia czy też ułatwia w graczom wygranie Gry. Opis występujących w nim specjalnych przedmiotów i obiektów. --> Interfejs_Użytkownika <-- Zawiera: Opis wszystkich scen developera np. Menu główne, sklep Jak ma działać logika UI np. gdzie ma przekierowywać naciśnięty guzik. Jak wiele ekranu będzie zajmować interfejs podczas rozgrywki jakie statystyki mają być na nim wyświetlone --> Grafika <-- Zawiera: Grafiki koncepcyjne rozgrywki, takie jak mapa, wrogowie, gracze, przedmioty, ... Grafiki Interfejsu użytkownika Animacje postaci Modele obiektów Tekstury Użyte Shadery --> Muzyka <-- Zawiera: Muzykę do Gry Dialogi postaci Dźwięki efektów środowiskowych Dźwięki efektów Interfejsu Użytkownika --> Opis Techniczny <-- Zawiera: Używany silnik graficzny Platformy na które ma zostać wydana Gra Język Programowania Programy Potrzebne do Pracy na grą jak np. Photoshop, Blender, VS Code Użyte technologie Czy i Jak będzie wyglądała komunikacja sieciowa w Grze --> Marketing i Monetyzacja <-- Zawiera: Grupa Docelowa, jak jest wielka oraz czemu nie da się jej zwiększyć Ilość potencjalnych odbiorców w każdej Platformie (np. PC, Android, PS4) Jak i Gdzie zostanie gra upubliczniona w celu jej rozpromowania Czy jest ona Płatna czy Darmowa Szacunek odniesionych z niej przychodów. --> Nowe Pomysły <-- Zawiera: Jest to baza pomysłów które warto zapamiętać Każdy użytkownik powinien móc wpisywać tutaj co tylko zechce Należy dla każdego każdego pomysłu stworzyć w folderze \"Nowe Pomysły\" dowolny plik markdown a następnie go opisać"
  },
  "gdd/Grafika/Grafika.html": {
    "href": "gdd/Grafika/Grafika.html",
    "title": "Grafika | Czasoport Documentation",
    "keywords": "Grafika <-- GDD Zależna od grafików, ale gra przedstawiona będzie w 2.5D w widoku od góry/izometrycznym. Jeżeli 3D to raczej coś wystylizowanego i prostego jak \"Tunic\", albo \"Death's Door\". Może być też Pixel art, a nawet rysowane, jeżeli implementacja tego okaże się łatwiejsza. Sugeruję, aby graficy zdecydowali między sobą w jaki sposób najbardziej skutecznie będą w stanie przedstawić świat w grze. Grafiki Koncepcyjne Świata ... Grafiki Koncepcyjne Postaci Postać 1 Szkic Postaci lub model ... Animacja ... Grafiki Koncepcyjne Wrogów Wróg 1 Szkic Wroga lub model ... Animacja ... ... Grafiki Interfejsu Użytkownika ... Tekstury ... Użyte Shadery ..."
  },
  "gdd/Interfejs_Użytkownika/Interfejs_Użytkownika.html": {
    "href": "gdd/Interfejs_Użytkownika/Interfejs_Użytkownika.html",
    "title": "Interfejs Użytkownika | Czasoport Documentation",
    "keywords": "Interfejs Użytkownika <-- GDD Minimalny, podobnie jak kontrole. Gracz na ekranie widzi hotbar (ekwipunek). Gdy zbliży się do obiektu z którym może wejść w interakcję, ten obiekt otacza outline. Na ekranie widoczny jest także 'Czasoport', który wyświetla, w którym czasie jesteśmy i czy gracz może się bezpiecznie przenieść w danym kierunku w czasie (jeżeli jest w walce, albo w innym czasie ). Rozgrywka Szkic interfejsu Zrobiłem w pixel-arcie, bo tak było mi najłatwiej szybko zrobić coś kolorowego i czytelnego. Jak wiele zakrywa interfejs użytkownika Około 20-30% ekranu - jak najmniej, aby było funkcjonalnie (interfejs przedstawiony na szkicu jest bardzo powiększony, więc ostatecznie elementy będą mniejsze, ale ogólne ich rozmieszczenie jest prawidłowe, chociaż nie wyryte w kamieniu) Jakie Statystyki będą wyświetlane i gdzie Kursor (przedstawiony bardzo powiększonej wersji na szkicu) Przedmioty w ekwipunku Czas, w którym gracz się znajudje Czy jest bezpieczne przeniesienie się w czasie w daną stronę (czerwony kolor - niebezpiecznie, zielony - bezpiecznie) (opcjonalnie) cel/objective Jakie zdarzenia mają się wykonywać po naciśnięciu odpowiednich przycisków ... Menu Szkic interfejsu ... Jakie zdarzenia mają się wykonywać po naciśnięciu odpowiednich przycisków ... Sklep ..."
  },
  "gdd/Marketing_i_Monetyzacja/Marketing_i_Monetyzacja.html": {
    "href": "gdd/Marketing_i_Monetyzacja/Marketing_i_Monetyzacja.html",
    "title": "| Czasoport Documentation",
    "keywords": "Documentation\\GDD\\Marketing_i_Monetyzacja\\Marketing_i_Monetyzacja.md# Marketing i Monetyzacja <-- GDD Rodzaj Dystrybucji: Darmowa, Płatna ... Grupa Docelowa Zakres grupy ... Do kogo zwracamy się z naszą ofertą ... Czemu nie da się zwiększyć grupy docelowej ... Platformy wydania Gry PC Wielkość grupy docelowej ... Cena Produktu ... ... Jak i Gdzie gra zostanie upubliczniona Lista Platform Google Facebook ... W jaki sposób zamierzamy reklamować Grę ... Maksymalna ilość środków przeznaczona na Reklamę ... Szacunek Odniesionych z niech przychodów ..."
  },
  "gdd/Muzyka/Muzyka.html": {
    "href": "gdd/Muzyka/Muzyka.html",
    "title": "Muzyka | Czasoport Documentation",
    "keywords": "Muzyka <-- GDD Do ustalenia. Instrumenty będą zmieniać się w zależności od czasu, w którym gracz się znajduje, gdy melodia pozostanie mniej więcej taka sama. Muzyka podczas rozgrywki ... Dźwięki efektów środowiskowych ... Dialogi postaci ... Dźwięki efektów interfejsu użytkownika ..."
  },
  "gdd/Nowe_Pomysły/Nowe_Pomysły.html": {
    "href": "gdd/Nowe_Pomysły/Nowe_Pomysły.html",
    "title": "Nowe Pomysły | Czasoport Documentation",
    "keywords": "Nowe Pomysły <-- GDD Pomysł 1 ... Pomysł 2 ... ..."
  },
  "gdd/Opis_Techniczny/Opis_Techniczny.html": {
    "href": "gdd/Opis_Techniczny/Opis_Techniczny.html",
    "title": "Opis Techniczny | Czasoport Documentation",
    "keywords": "Opis Techniczny <-- GDD Używany silnik graficzny Unity 2021.3.12f1 Język Programowania C# Użyte technologie ... Programy potrzebne do pracy nad grą Unity, IDE, GIMP Platformy wydania gry WebGL, Windows, Linux, MacOS Komunikacja sieciowa jeżeli jest Brak, gra nie wymaga komunikacji sieciowej. Komunikacja z Bazą danych Brak, gra nie wymaga komunikacji z bazą danych."
  },
  "gdd/Postacie_i_Obiekty/Postacie_i_Obiekty.html": {
    "href": "gdd/Postacie_i_Obiekty/Postacie_i_Obiekty.html",
    "title": "Postacie i obiekty | Czasoport Documentation",
    "keywords": "Postacie i obiekty <-- GDD Postacie występujące w grze (Ostateczne wyglądy zależne od grafików, to są jedynie pomysły, ale inspiracja kulturami prekolumbijskimi jest ważna) Postać gracza Najważniejszą postacią w grze jest postać gracza. Postać na ogół nie będzie wiele mówić. Jest bardziej po prostu sposobem, w jaki gracz może poruszać się po świecie i wchodzić z nim w interakcję. Postać gracza przy interakcji z niektórymi przedmiotami może podawać wskazówki w formie dymku dialogowego. Ubiór postaci będzie przypominał ubiór reszty Ziemian – nowoczesny i inspirowany połączeniem konkwistadora z astronautą. Będzie to wyraźna odskocznia od wyglądu obywateli planety, którą gracz ma za zadanie “uratować”. Płeć postaci nie odgrywa tu zbyt wielkiej roli, ale ważne żeby wyglądała na około 20-25 lat. NPC Z reguły żadna postać nie będzie nazywana po imieniu, gdyż mówić będą bardzo mało. W tym momencie nie ma konkretnego wyglądu żadnej postaci, ale wygląd obywateli świata, “ratowanego” przez gracza będzie inspirowany aztekami i ich bóstwem. Kolor skóry może być żółty, czerwony, niebieski, a ich ubiór będzie bardziej “kwadratowy” i kanciasty w porównaniu z bardziej zaokrąglonym wyglądem gracza. Ci obywatele mogliby też różnić się od ludzi, np. większa ilość kończyn, lekko nieludzkimi kształty, itp. Ważne jednak, aby nie byli zbyt \"obcy\". Nie mają odstraszać gracza. Mają po prostu sprawiać wrażenie mieszkańców, którzy jednak nie są dokładnie tacy jak gracz. Mają oni swoje prace i życia, ale nie są one zbyt ważne dla gracza, chyba, że musi z nimi wejść w interakcję. Przedmioty Przedmioty są bardzo ważną częścią gry i będzie ich stosunkowo wiele. Większość z nich będzie wykorzystywana do rozwiązywania zagadek i przekonywania bądź niwelowania NPC. Gracz bedzie w stanie łączyć lub ulepszać niektóre przedmioty w specyficznych miejscach. Przedmioty mogą być brońmi, kluczami, narzędziami, itp. Dokładne przedmioty powstaną przy wypisywaniu fabuły. Jedynym przedmiotem różniącym się od reszty jest czasoport, ale on nie jest umieszczony w ekwipunku. Gracz zawsze go ma – jest integralną mechaniką gry jedynie przedstawioną w postaci fizycznej."
  },
  "gdd/Poziomy/Poziomy.html": {
    "href": "gdd/Poziomy/Poziomy.html",
    "title": "Poziomy | Czasoport Documentation",
    "keywords": "Poziomy <-- GDD Koncepcja ogólna (Ostateczne wyglądy zależne od grafików, to są jedynie pomysły, ale inspiracja kulturami prekolumbijskimi jest ważna) Akcja gry toczy się na jednej planecie, ale w trzech czasach (“początki”, “złoty wiek” i “upadek” cywilizacji). Nie jest to jednak całkiem otwarty świat. Każda czasoprzestrzeń podzielona jest na strefy. Przykładowo, gracz jest w wiosce, ale gdy przejdzie do lasu ładuje się nowy poziom. Budynki w różnych czasach Podobnie jak obywatele tej planety, ich budynki powinny być stosunkowo kanciaste. początki cywilizacji – namioty stworzone z wielkich liści i kolorowego drewna złoty wiek – budynki inspirowane pod względem kształtu świątyniami Azteków i Majów. Może w niektórych miejscach graffiti zamiast rytów upadek cywilizacji – budynki podobne jak w złotym wieku, ale wyższe, z większą ilością metalu, jednak zrujnowane. Fauna i Flora (Świat naturalny) Rozgrywka będzie odbywać się na obcej planecie. Rośliny obce inne niż na ziemi. Niebieska/Czerwona/Pomarańczowa roślinność. Ogólnie obca paleta barw, ale nie może być zbyt rażąca, gdyż gracz będzie się na nią patrzył przez sporą część rozgrywki. Wielkie rośliny z wielkimi liśćmi i małymi kwiatami. Zwierzęta także powinny być obce. Nie musimy pokazywać ich wiele, ale gatunki powinny być inspirowane kulturami przedkolumbijskimi, możliwie z nietypowymi połączeniami, np. latające jaszczurki, pumo-axolotl… Przykładowe poziomy pola/przedmieścia/zrujnowane budynki wioska/miasto/zniszczona metropolia centrum wioski/rynek/pobojowisko las/park/spalony park jaskinia/kopalnia/zawalona jaskinia Poziom 1 Szkic Poziomu ... Opis użytych do jego stworzenia bloków i przedmiotów ... W jaki sposób na wpływać na rozgrywkę Jest wprowadzeniem do świata i mechaniki gry (samouczkiem) i to w nim gracz zdobywa przynajmniej pierwszy czas, do którego może się przenosić. Myślimy, że lepiej, gdyby gracz nie mógł od razu przenosić się pomiędzy czasami. Po rozwiązaniu jednej łamigłówki/pokonaniu pierwszej przeszkody i przyzwyczajeniu się do rozgrywki odblokowuje tę moc. Ogólnie powinno zająć to ok. 5 min. Szczegóły poziomu zostaną opracowane niedługo."
  },
  "gdd/Poziomy/Samouczek.html": {
    "href": "gdd/Poziomy/Samouczek.html",
    "title": "Samouczek | Czasoport Documentation",
    "keywords": "Samouczek <-- GDD Tekst w nawiasach () to prompty, które będą się wyświetlać na ekranie gracza podczas samouczka, aby pokazać mu kontrole. W akcjach uwzględniony jest tylko jeden przycisk (np. LPM), ale mogą wyświetlać się wszystkie możliwości (LPM, J, F, South) W nawiasach [] wypisane są przedmioty do podniesienia. Area 1 Teleportujemy się do zniszczonej przyszłości. Znajdujemy się w zniszczonym magazynie. W pomieszczeniu mogą być futurystyczne pudła, szafki, półki itp. Wyraźnie widać ślady wybuchu, jednym z nich są zawalone gruzem drzwi. Oświetlenie zapewnia dziura w suficie. Mamy czasoport, ale nie mamy części, które pozwalają na przenoszenie się w czasie. Przechodzimy się po pomieszczeniu (WSAD - chodzenie) Na ziemi leży [młotek] (LPM - podnoszenie). Drugie co rzuca nam się w oczy to drzwi, które są oczywiście zablokowane, po interakcji z nimi dostajemy informację że potrzebujemy czegoś do odsunięcia gruzu - rozpoczynamy więc przeszukiwanie pomieszczenia i podnoszenie następnych itemów. Rzeczy na podłodze to póki co zapychacze eq, [kamień], [deska], lub [placeholdery], ale po lewej stronie pomieszczenia znajduje się szafka, która po otwarciu przyciskiem interakcji ma w sobie [łom], niezbędny do odsłonięcia drzwi. Po podniesieniu łomu otrzymujemy podpowiedź (prompt) jak go wybrać w ekwipunku, (PPM - użycie przedmiotu / 1,2,3 - wybieranie z ekwipunku) Po czym używamy go do otwarcia drzwi Area 1.5 Wchodzimy do długiego korytarza. Otrzymujemy powiadomienie dźwiękowe (lub inne ostrzeżenie, np. trzęsienie się ekranu i dźwięk spadających kamieni), a po przejściu pewnej odległości korytarz zaczyna się walić - (Tryb biegu - shift [przytrzymanie]) Wybiegamy z walącego się korytarza i wpadamy do następnego pomieszczenia. Area 2 W tym pomieszczeniu prąd dawno nie działa, pokój jest opustoszały i opuszczony. Siatka znajdująca się w pomieszczeniu oddziela nas od schodów prowadzących na górę. W siatce znajdują się drzwi zamknięte na kłódkę. Pokój ten jest byłym magazynem/pomieszczeniem z generatorami, bezpiecznikami itp., powinien on wyglądać na zamieszkiwanego w przeszłości i wskazywać na zagładę właścicieli - nie tylko ten pokój ale całą lokacja samouczka. Przeszukujemy więc pomieszczenie dostając kilka opisów (przy interakcjach nasza postać może powiedzieć coś krótkiego). Obok siebie znajdują się 3 przedmioty, [fragment czasoportu pozwalający na przenoszenie się do współczesności] i 2 bezużyteczne [kamienie] (Zmiana celu interakcji – L) Dodatkowo, jeśli nazbieraliśmy się śmieci uczymy się jak je wyrzucać (Wyrzucenie przedmiotu – T) (Użycie czasoportu - Q (do tyłu) E (do przodu)) - w tym momencie gracz ma możliwość przenoszenia się jedynie pomiędzy upadkiem a współczesnością. Przenosisz się do współczesności. Prąd działa, pokój jest oświetlony, ale potrzebujesz klucza (z przyszłości), lub młotka, aby otworzyć drzwi. Po użyciu klucza możesz wyjść przez drzwi, na schody, które się za nimi znajdują. Area 3 Wychodzisz schodami do \"głównej strefy\" gry. Pewnego rodzaju main hub (ala Metroidvania). Jest to już koniec samouczka. Myślimy, że main hub będzie rynkiem/galerią handlową wewnątrz świątyni, ale jeszcze musimy to przemyśleć. Oczywiście w tej wersji gry ten main hub nie będzie bardzo rozbudowany, gdyż tworzymy tylko jedną ścieżkę fabularną."
  },
  "gdd/README.html": {
    "href": "gdd/README.html",
    "title": "Nazwa gry: Timeport | Czasoport Documentation",
    "keywords": "Nazwa gry: Timeport Opis świata Gry Świat gry podzielony jest na 3 przestrzenie czasowe: początki cywilizacji - dominują tam wydeptane szlaki, lasy, pola, małe osady, namioty z liści, domki z gliny, pierwsze uprawy, itp. złoty wiek cywilizacji - dominują tam twierdze, miasta, świątynie, wsie, itp. upadek cywilizacji - dominują tam ruiny, wody zanieczyszczone kwasem, skażona atmosefera, ogólny niepokój, itp. Składa się on z wielu plansz przedstawiających pojedyczne lokalizacje, pomiędzy którymi gracz może swobodnie się przemieszczać. Niektóre plansze przeznaczone będą do eksploracji, a niektóre stawiać będą przed graczem przeszkody. Główny Bohater Bezimienny kandydat na stażystę Komisji Czasoprzestrzennej. W przeciwieństwie do reszty postaci spotkanych podczas rozgrywki jest człowiekiem. Grafiki koncepcyjne Gatunek oraz Styl Gatunek - Future Fantasy Adventure and Puzzle Rodzaj Grafiki - 2.5D, styl wykonania do ustalanie z grafikami Widok - Isometryczny Mechanika wyróżniająca grę Rozgrywka w kilku przestrzeniach czasowych, pomiędzy którymi gracz może przemieszczać się w dowolnym momencie. Pozwala to na obchodzenie przejść, używanie przedmiotów z jednej przestrzeni w innej, zmianie stanu przestrzeni znajdującej się dalej w przyszłość, itp. Używane Technologie Silnik: Unity 2021.3.12f1 Edytor Graficzny: Według uznania grafików Marketing oraz Monetyzacja Grupa Docelowa - Gen z Monetyzacja - ... --> Pełna Dokumentacja <--"
  },
  "gdd/Rozgrywka/Rozgrywka.html": {
    "href": "gdd/Rozgrywka/Rozgrywka.html",
    "title": "Rozgrywka | Czasoport Documentation",
    "keywords": "Rozgrywka <-- GDD Cel Gry Przejście przez fabułę poprzez rozwiązywanie problemów. Zamysł, jest taki, że ostatecznie ścieżek i zakończeń będzie wiele, ale póki co skupimy się na linearnej fabule, bez żadnych ścieżek pobocznych i dodatkowych zakończeń. Na ten moment gracz ma doświadczyć solidnej 30 minutowej rozgrywki. Progresja gry Gracz znajduje się w pseudo-otwartym świecie podobnym w strukturze do starych gier Zelda. Świat jest na tyle otwarty, że gracz może iść prawie gdzie chce, ale niektóre ścieżki będą zamknięte, dopóki nie: znajdzie (lub stworzy) pewnego przedmiotu, dokona jakiegoś czynu lub rozwiąże zagadki Poziom trudności zagadek będzie się zwiększał wraz z postępem gry. Umiejętności Gracza Oprócz podstawowych umiejętności poruszania się i interakcji ze światem, gracz posiada możliwość przenoszenia się w czasie. Istnieją 3 czasy, które może odwiedzać – “początki”, “złoty wiek” i “upadek” cywilizacji. Tradycyjny system walki nie istnieje. Każda broń jest zarówno przedmiotem w ekwipunku z ograniczoną ilością amunicji, którą gracz może użyć w danej sytuacji, aby ją rozwiązać. Bronie automatycznie celują w najbliższy adekwatny cel. Mechanika Przenoszenie się w czasie. Proste integracje z przedmiotami (na początek każdy przedmiot ma 1 cel) Sterowanie jest stosunkowo proste. Gracz może się poruszać, biegać, wchodzić w interakcję ze światem/przedmiotami i przenosić się w czasie. Rozgrywka polegać będzie na przemieszczaniu się przez świat, pokonując przy tym przeszkody stawiane przed graczem. W zależności od sposobu pokonania problemu rzeczy w świecie będą się zmieniać. Przynajmniej tak wyglądałaby pełna wersja gry. W tej wersji rozwiązanie na daną sytuację będzie jedno, a gracz będzie przechodził przez fabułę w sposób przewidziany przez twórców gry. Rozgrywka pod tym względem przypominać będzie gry przygodowe typu point and click, szczególnie, że niektóre problemy trzeba będzie rozwiązać za pomocą znalezionych lub stworzonych/połączonych w specjalnych miejscach przedmiotach. Znaczną część rozgrywki będzie zajmować przenoszenie się między czasami aby rozwiązać lub ominąć problem, bądź zdobyć jakiś potrzebny przedmiot. Mechanika ta przypominać będzie misje \"Effect and Cause\" z gry \"Titanfall 2\". Różnicą będzie to, że w naszej grze są 3 płaszczyzny czasowe, a gra nie jest skupiona na akcji. Ulepszenie oraz Przedmioty Gracz jest w stanie łączyć oraz ulepszać przedmioty w specyficznych miejscach. Np. przy osełce może zaostrzyć przedmiot 'Tępa siekiera' i otrzymać przedmiot 'Ostra siekiera'. Kiedy następuje przegrana W ostatecznej wersji gry nie dochodziłoby do przegranej. Najwyżej po dokonaniu wystarczającej liczby złych wyborów gracz otrzymałby “bad ending”. Nawet po “złej” decyzji gra toczyłaby się dalej. W wersji, którą tworzymy najprawdopodobniej będzie musiał istnieć ekran “game over”, gdyż nie sposób szybko stworzyć wiele różnych ścieżek w krótkim czasie. Game over wyświetlałby się jednak jedynie w rzeczywiście niebezpiecznych sytuacjach (np. zabity przez wściekły tłum, bo nie użyłeś przedmiotu, który pozwalał na obronę). W innych wypadkach gracz po prostu pozostaje w miejscu, aż rozwiąże problem."
  },
  "index.html": {
    "href": "index.html",
    "title": "Nazwa gry: Timeport | Czasoport Documentation",
    "keywords": "Nazwa gry: Timeport Opis świata Gry Świat gry podzielony jest na 3 przestrzenie czasowe: początki cywilizacji - dominują tam wydeptane szlaki, lasy, pola, małe osady, namioty z liści, domki z gliny, pierwsze uprawy, itp. złoty wiek cywilizacji - dominują tam twierdze, miasta, świątynie, wsie, itp. upadek cywilizacji - dominują tam ruiny, wody zanieczyszczone kwasem, skażona atmosefera, ogólny niepokój, itp. Składa się on z wielu plansz przedstawiających pojedyczne lokalizacje, pomiędzy którymi gracz może swobodnie się przemieszczać. Niektóre plansze przeznaczone będą do eksploracji, a niektóre stawiać będą przed graczem przeszkody. Główny Bohater Bezimienny kandydat na stażystę Komisji Czasoprzestrzennej. W przeciwieństwie do reszty postaci spotkanych podczas rozgrywki jest człowiekiem. Grafiki koncepcyjne Gatunek oraz Styl Gatunek - Future Fantasy Adventure and Puzzle Rodzaj Grafiki - 2.5D, styl wykonania do ustalanie z grafikami Widok - Isometryczny Mechanika wyróżniająca grę Rozgrywka w kilku przestrzeniach czasowych, pomiędzy którymi gracz może przemieszczać się w dowolnym momencie. Pozwala to na obchodzenie przejść, używanie przedmiotów z jednej przestrzeni w innej, zmianie stanu przestrzeni znajdującej się dalej w przyszłość, itp. Używane Technologie Silnik: Unity 2021.3.12f1 Edytor Graficzny: Według uznania grafików Marketing oraz Monetyzacja Grupa Docelowa - Gen z Monetyzacja - ..."
  },
  "manual/manuals/cinput-manual.html": {
    "href": "manual/manuals/cinput-manual.html",
    "title": "Custom Input System | Czasoport Documentation",
    "keywords": "Custom Input System"
  },
  "manual/manuals/system-architecture.html": {
    "href": "manual/manuals/system-architecture.html",
    "title": "System Architecture | Czasoport Documentation",
    "keywords": "System Architecture"
  },
  "manual/tutorials-info/generating-docs.html": {
    "href": "manual/tutorials-info/generating-docs.html",
    "title": "Generating Documentation Manually | Czasoport Documentation",
    "keywords": "Generating Documentation Manually Project uses DocFX to generate documentation. GitHub will generate documentation automatically on each push to master branch. However, before merging branch you are currently working to master, it is recommended to generate documentation locally and check if everything is fine. Note Updating the documentation after making relevant changes is required by anyone working on the project. Installing DocFX Please follow steps described in section Create New Website in DocFX installation guide. Czasoport documentation structure Two important folders in Documentation folder are: manual and resources. Manual folder contains Markdown files, that are basically standalone articles published on the site. In order to add new article, create new .md file in one of the subfolders and add link to it in manual/toc.yml file. Structure of toc.yml file is self-explanatory. Resources folder contains images and other files that are used in articles. Folder structure should follow structure of manual folder, but resources for each article should be placed in additional folder with the name of the article. Please check how this picture of a cute cat is placed in the folders in order to understand how it works: ![Cute cat](~/resources/tutorials-info/generating-docs/cat.jpg)"
  },
  "manual/tutorials-info/major-settings-changes.html": {
    "href": "manual/tutorials-info/major-settings-changes.html",
    "title": "Major settings changes | Czasoport Documentation",
    "keywords": "Major settings changes Some settings chages might be the key to game performance, stability and quality. Some settings may break the game entirely. This page will list the most important settings that have been changed, why they were changed and what the old values were. In case of any errors in the future, please refer to this page and check if some change might be the reason for it. Important Each time an important setting is changed, MSC should be created and documented here and on corresponding pull request. Template for MSC can be found at the end of source code for this page. [MSC #1] Api Compatability Level MSC #1 Api Compatability Level Pull Request Input Lock Setting Project Settings -> Player -> Other Settings -> Configuration -> Api Compatability Level Old Value .NET Standard 2.1 New Value .NET Framework Reason for change Ability to use dynamic type Possible implications Worse cross-platform compatibility, problems with building for different platforms might arise MSC #2 Gravity Pull Request [NAME OF PR](LINK TO PR) Setting Project Settings -> Physics 2D -> Gravity Old Value X:0 Y:-9.81 New Value X:0 Y:0 Reason for change We don't need gravity in our game. Possible implications Object with RigidBody will not fall by default."
  },
  "manual/tutorials-info/workflow.html": {
    "href": "manual/tutorials-info/workflow.html",
    "title": "Workflow | Czasoport Documentation",
    "keywords": "Workflow Git Branches Pushes to master branch are protected. Each change, addition, hotfix etc. must be done on separate branch and then merged to master via pull request. Branch names must follow this pattern: type/short-description. For example: feature/adding-new-weapon. Available types are: feature - new addition, system, interaction, item, etc. bugfix - fixing a known bug, error, etc. hotfix - fixing a bug that is critical and needs to be fixed as soon as possible refactor - refactoring code, changing code structure, etc. documentation - adding new documentation, changing existing documentation, etc. spike - trying out new idea, testing new system, etc. short-description must be short, but descriptive. For example: feature/adding-new-weapon is good, but feature/weapon is not. Only kebab-case is allowed. Commits There are no enforced rules on commit messages, but please use descriptive ones. Pull Requests Please provide good name and at least short description of your pull request. If you are adding new feature, describe it as good as you can. If you are fixing a bug, describe what was the bug and how did you fix it. Pull Requests must be approved by at least one code owner. Code owners are automatically added to each pull request. Merge commits are disabled. Each pull request must be merged via squash and merge. Resolving conflicts If you are resolving conflicts, please use rebase instead of merge. This will keep commit history clean. If you are not sure how to do it, please ask for help. Pair programming If you are working on the same branch with someone else, please also use rebase instead of normal pull."
  }
}