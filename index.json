{
  "api/Application.ApplicationSettingsSO.html": {
    "href": "api/Application.ApplicationSettingsSO.html",
    "title": "Class ApplicationSettingsSO | Czasoport Documentation",
    "keywords": "Class ApplicationSettingsSO Namespace Application Settings for entire application that defines variables for startup, core processes and shutdown public class ApplicationSettingsSO : ScriptableObject Inheritance object ApplicationSettingsSO Fields gameSceneName public string gameSceneName Field Value string lvlDefinitionsResPath public string lvlDefinitionsResPath Field Value string notificationDuration public float notificationDuration Field Value float saveFileName public string saveFileName Field Value string sceneToLoadName public string sceneToLoadName Field Value string"
  },
  "api/Application.GameManager.html": {
    "href": "api/Application.GameManager.html",
    "title": "Class GameManager | Czasoport Documentation",
    "keywords": "Class GameManager Namespace Application public class GameManager : MonoBehaviour Inheritance object GameManager"
  },
  "api/Application.GlobalExceptions.SingletonOverrideException.html": {
    "href": "api/Application.GlobalExceptions.SingletonOverrideException.html",
    "title": "Class SingletonOverrideException | Czasoport Documentation",
    "keywords": "Class SingletonOverrideException Namespace Application.GlobalExceptions public class SingletonOverrideException : Exception, ISerializable Inheritance object Exception SingletonOverrideException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SingletonOverrideException() public SingletonOverrideException() SingletonOverrideException(string) public SingletonOverrideException(string message) Parameters message string SingletonOverrideException(string, Exception) public SingletonOverrideException(string message, Exception inner) Parameters message string inner Exception"
  },
  "api/Application.GlobalExceptions.html": {
    "href": "api/Application.GlobalExceptions.html",
    "title": "Namespace Application.GlobalExceptions | Czasoport Documentation",
    "keywords": "Namespace Application.GlobalExceptions Classes SingletonOverrideException"
  },
  "api/Application.Loggers.LoggerType.html": {
    "href": "api/Application.Loggers.LoggerType.html",
    "title": "Enum Loggers.LoggerType | Czasoport Documentation",
    "keywords": "Enum Loggers.LoggerType Namespace Application public enum Loggers.LoggerType Fields DATA_PERSISTENCE = 7 DIALOGUES = 9 INTERACTABLE_OBJECTS = 3 INTERACTIONS = 2 INVENTORY = 1 ITEMS = 4 LEVEL_SYSTEM = 0 PAUSE = 6 PORTALS = 5 UTILS = 8"
  },
  "api/Application.Loggers.html": {
    "href": "api/Application.Loggers.html",
    "title": "Class Loggers | Czasoport Documentation",
    "keywords": "Class Loggers Namespace Application public static class Loggers Inheritance object Loggers Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields LoggersList public static Dictionary<Loggers.LoggerType, CLogger> LoggersList Field Value Dictionary<Loggers.LoggerType, CLogger>"
  },
  "api/Application.StartupManager.html": {
    "href": "api/Application.StartupManager.html",
    "title": "Class StartupManager | Czasoport Documentation",
    "keywords": "Class StartupManager Namespace Application public class StartupManager : MonoBehaviour Inheritance object StartupManager"
  },
  "api/Application.html": {
    "href": "api/Application.html",
    "title": "Namespace Application | Czasoport Documentation",
    "keywords": "Namespace Application Classes ApplicationSettingsSO Settings for entire application that defines variables for startup, core processes and shutdown GameManager Loggers StartupManager Enums Loggers.LoggerType"
  },
  "api/AudioSystem.GameMusicManager.html": {
    "href": "api/AudioSystem.GameMusicManager.html",
    "title": "Class GameMusicManager | Czasoport Documentation",
    "keywords": "Class GameMusicManager Namespace AudioSystem State of songs played on each timeline manager. public class GameMusicManager : MonoBehaviour Inheritance object GameMusicManager Fields FutureMusic public AudioClip FutureMusic Field Value AudioClip PastMusic public AudioClip PastMusic Field Value AudioClip PresentMusic public AudioClip PresentMusic Field Value AudioClip audioMixer public AudioMixer audioMixer Field Value AudioMixer musicPlayer public MusicPlayer musicPlayer Field Value MusicPlayer"
  },
  "api/AudioSystem.GameSFX.html": {
    "href": "api/AudioSystem.GameSFX.html",
    "title": "Class GameSFX | Czasoport Documentation",
    "keywords": "Class GameSFX Namespace AudioSystem public class GameSFX : SFX Inheritance object SFX GameSFX Inherited Members SFX.audioSource SFX.audioMixer SFX.CreateSoundPlayingEventHandler<T>(AudioClip) Fields itemPickedSound public AudioClip itemPickedSound Field Value AudioClip itemRemovedSound public AudioClip itemRemovedSound Field Value AudioClip Methods BindSoundsWithEvents() protected override void BindSoundsWithEvents()"
  },
  "api/AudioSystem.SFX.html": {
    "href": "api/AudioSystem.SFX.html",
    "title": "Class SFX | Czasoport Documentation",
    "keywords": "Class SFX Namespace AudioSystem Base class for associating events with sound effects. public abstract class SFX : MonoBehaviour Inheritance object SFX Derived GameSFX Fields audioMixer public AudioMixer audioMixer Field Value AudioMixer audioSource public AudioSource audioSource Field Value AudioSource Methods BindSoundsWithEvents() protected abstract void BindSoundsWithEvents() CreateSoundPlayingEventHandler<T>(AudioClip) protected EventHandler<T> CreateSoundPlayingEventHandler<T>(AudioClip clip) Parameters clip AudioClip Returns EventHandler<T> Type Parameters T"
  },
  "api/AudioSystem.html": {
    "href": "api/AudioSystem.html",
    "title": "Namespace AudioSystem | Czasoport Documentation",
    "keywords": "Namespace AudioSystem Classes GameMusicManager State of songs played on each timeline manager. GameSFX SFX Base class for associating events with sound effects."
  },
  "api/CustomInput.CInput.html": {
    "href": "api/CustomInput.CInput.html",
    "title": "Class CInput | Czasoport Documentation",
    "keywords": "Class CInput Namespace CustomInput Wrapper for automatically generated InputActions. Provides easier access to reading values from input, takes care of processing for common input values. Incorporates locking mechanism. public static class CInput Inheritance object CInput Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields GameInputLock public static readonly GameInputLock GameInputLock Field Value GameInputLock InputActions InputActions object that CInput is based on. Should be used if there is no wrapper implemented by CInput. public static readonly InputActions InputActions Field Value InputActions InteractionsLock public static readonly InteractionsLock InteractionsLock Field Value InteractionsLock InventoryLock public static readonly InventoryLock InventoryLock Field Value InventoryLock MouseLock public static readonly MouseLock MouseLock Field Value MouseLock MovementLock public static readonly MovementLock MovementLock Field Value MovementLock TeleportLock public static readonly TeleportLock TeleportLock Field Value TeleportLock Properties MousePosition Normal mouse position from InputActions. If you want point in game over which mouse is hovering, use MouseWorldPosition. public static Vector2 MousePosition { get; } Property Value Vector2 MouseWorldPosition Mouse position casted to world coordinates. public static Vector2 MouseWorldPosition { get; } Property Value Vector2 NavigationAxis Vector2 desired player direction/ public static Vector2 NavigationAxis { get; } Property Value Vector2 Run Whether player is running, and how fast he is running (effective on gamepads). public static float Run { get; } Property Value float"
  },
  "api/CustomInput.Exceptions.NoMainCameraException.html": {
    "href": "api/CustomInput.Exceptions.NoMainCameraException.html",
    "title": "Class NoMainCameraException | Czasoport Documentation",
    "keywords": "Class NoMainCameraException Namespace CustomInput.Exceptions public class NoMainCameraException : Exception, ISerializable Inheritance object Exception NoMainCameraException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NoMainCameraException() public NoMainCameraException() NoMainCameraException(string) public NoMainCameraException(string message) Parameters message string NoMainCameraException(string, Exception) public NoMainCameraException(string message, Exception inner) Parameters message string inner Exception"
  },
  "api/CustomInput.Exceptions.html": {
    "href": "api/CustomInput.Exceptions.html",
    "title": "Namespace CustomInput.Exceptions | Czasoport Documentation",
    "keywords": "Namespace CustomInput.Exceptions Classes NoMainCameraException"
  },
  "api/CustomInput.InputTest.html": {
    "href": "api/CustomInput.InputTest.html",
    "title": "Class InputTest | Czasoport Documentation",
    "keywords": "Class InputTest Namespace CustomInput public class InputTest : MonoBehaviour Inheritance object InputTest"
  },
  "api/CustomInput.Interactions.CustomHold.html": {
    "href": "api/CustomInput.Interactions.CustomHold.html",
    "title": "Class CustomHold | Czasoport Documentation",
    "keywords": "Class CustomHold Namespace CustomInput.Interactions public class CustomHold : IInputInteraction Inheritance object CustomHold Fields MinimalTime public float MinimalTime Field Value float Methods Process(ref InputInteractionContext) public void Process(ref InputInteractionContext context) Parameters context InputInteractionContext Reset() public void Reset()"
  },
  "api/CustomInput.Interactions.html": {
    "href": "api/CustomInput.Interactions.html",
    "title": "Namespace CustomInput.Interactions | Czasoport Documentation",
    "keywords": "Namespace CustomInput.Interactions Classes CustomHold"
  },
  "api/CustomInput.Locks.GameInputLock.html": {
    "href": "api/CustomInput.Locks.GameInputLock.html",
    "title": "Class GameInputLock | Czasoport Documentation",
    "keywords": "Class GameInputLock Namespace CustomInput.Locks Provides locking mechanism for Teleport actions. public class GameInputLock Inheritance object GameInputLock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GameInputLock(GameActions) public GameInputLock(InputActions.GameActions input) Parameters input InputActions.GameActions Methods Lock() Lets CustomInput know that current thread is not ready to receive input from user. 'Thread' safe, use instead of Enable and Disable on individual actions. public string Lock() Returns string Key that is needed to unlock the actions. Unlock(string) Lets CustomInput know that current thread is ready to receive input from user. public void Unlock(string key) Parameters key string Obtained by invoking Lock(). Exceptions Exception"
  },
  "api/CustomInput.Locks.InteractionsLock.html": {
    "href": "api/CustomInput.Locks.InteractionsLock.html",
    "title": "Class InteractionsLock | Czasoport Documentation",
    "keywords": "Class InteractionsLock Namespace CustomInput.Locks Provides locking mechanism for Interactions actions. public class InteractionsLock Inheritance object InteractionsLock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InteractionsLock(InteractionsActions) public InteractionsLock(InputActions.InteractionsActions input) Parameters input InputActions.InteractionsActions Methods Lock() Lets CustomInput know that current thread is not ready to receive input from user. 'Thread' safe, use instead of Enable and Disable on individual actions. public string Lock() Returns string Key that is needed to unlock the actions. Unlock(string) Lets CustomInput know that current thread is ready to receive input from user. public void Unlock(string key) Parameters key string Obtained by invoking Lock(). Exceptions Exception"
  },
  "api/CustomInput.Locks.InventoryLock.html": {
    "href": "api/CustomInput.Locks.InventoryLock.html",
    "title": "Class InventoryLock | Czasoport Documentation",
    "keywords": "Class InventoryLock Namespace CustomInput.Locks Provides locking mechanism for user Inventory actions. public class InventoryLock Inheritance object InventoryLock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InventoryLock(InventoryActions) public InventoryLock(InputActions.InventoryActions input) Parameters input InputActions.InventoryActions Methods Lock() Lets CustomInput know that current thread is not ready to receive input from user. 'Thread' safe, use instead of Enable and Disable on individual actions. public string Lock() Returns string Key that is needed to unlock the actions. Unlock(string) Lets CustomInput know that current thread is ready to receive input from user. public void Unlock(string key) Parameters key string Obtained by invoking Lock(). Exceptions Exception"
  },
  "api/CustomInput.Locks.MouseLock.html": {
    "href": "api/CustomInput.Locks.MouseLock.html",
    "title": "Class MouseLock | Czasoport Documentation",
    "keywords": "Class MouseLock Namespace CustomInput.Locks Provides locking mechanism for Mouse actions. public class MouseLock Inheritance object MouseLock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MouseLock(MouseActions) public MouseLock(InputActions.MouseActions input) Parameters input InputActions.MouseActions Methods Lock() Lets CustomInput know that current thread is not ready to receive input from user. 'Thread' safe, use instead of Enable and Disable on individual actions. public string Lock() Returns string Key that is needed to unlock the actions. Unlock(string) Lets CustomInput know that current thread is ready to receive input from user. public void Unlock(string key) Parameters key string Obtained by invoking Lock(). Exceptions Exception"
  },
  "api/CustomInput.Locks.MovementLock.html": {
    "href": "api/CustomInput.Locks.MovementLock.html",
    "title": "Class MovementLock | Czasoport Documentation",
    "keywords": "Class MovementLock Namespace CustomInput.Locks Provides locking mechanism for Movement actions. public class MovementLock Inheritance object MovementLock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MovementLock(MovementActions) public MovementLock(InputActions.MovementActions input) Parameters input InputActions.MovementActions Methods Lock() Lets CustomInput know that current thread is not ready to receive input from user. 'Thread' safe, use instead of Enable and Disable on individual actions. public string Lock() Returns string Key that is needed to unlock the actions. Unlock(string) Lets CustomInput know that current thread is ready to receive input from user. public void Unlock(string key) Parameters key string Obtained by invoking Lock(). Exceptions Exception"
  },
  "api/CustomInput.Locks.TeleportLock.html": {
    "href": "api/CustomInput.Locks.TeleportLock.html",
    "title": "Class TeleportLock | Czasoport Documentation",
    "keywords": "Class TeleportLock Namespace CustomInput.Locks Provides locking mechanism for Teleport actions. public class TeleportLock Inheritance object TeleportLock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TeleportLock(TeleportActions) public TeleportLock(InputActions.TeleportActions input) Parameters input InputActions.TeleportActions Methods Lock() Lets CustomInput know that current thread is not ready to receive input from user. 'Thread' safe, use instead of Enable and Disable on individual actions. public string Lock() Returns string Key that is needed to unlock the actions. Unlock(string) Lets CustomInput know that current thread is ready to receive input from user. public void Unlock(string key) Parameters key string Obtained by invoking Lock(). Exceptions Exception"
  },
  "api/CustomInput.Locks.html": {
    "href": "api/CustomInput.Locks.html",
    "title": "Namespace CustomInput.Locks | Czasoport Documentation",
    "keywords": "Namespace CustomInput.Locks Classes GameInputLock Provides locking mechanism for Teleport actions. InteractionsLock Provides locking mechanism for Interactions actions. InventoryLock Provides locking mechanism for user Inventory actions. MouseLock Provides locking mechanism for Mouse actions. MovementLock Provides locking mechanism for Movement actions. TeleportLock Provides locking mechanism for Teleport actions."
  },
  "api/CustomInput.html": {
    "href": "api/CustomInput.html",
    "title": "Namespace CustomInput | Czasoport Documentation",
    "keywords": "Namespace CustomInput Classes CInput Wrapper for automatically generated InputActions. Provides easier access to reading values from input, takes care of processing for common input values. Incorporates locking mechanism. InputTest"
  },
  "api/DataPersistence.DataPersistenceManager.html": {
    "href": "api/DataPersistence.DataPersistenceManager.html",
    "title": "Class DataPersistenceManager | Czasoport Documentation",
    "keywords": "Class DataPersistenceManager Namespace DataPersistence public class DataPersistenceManager : MonoBehaviour Inheritance object DataPersistenceManager Fields gameData [NonSerialized] public GameData gameData Field Value GameData Properties Instance public static DataPersistenceManager Instance { get; } Property Value DataPersistenceManager Methods CreateNewGame() public void CreateNewGame() LoadGame() public void LoadGame() LoadGameFromDisk() public void LoadGameFromDisk() SaveGame() public void SaveGame() SaveGameToDisk() public void SaveGameToDisk()"
  },
  "api/DataPersistence.DataTypes.NotificationGameData.html": {
    "href": "api/DataPersistence.DataTypes.NotificationGameData.html",
    "title": "Class NotificationGameData | Czasoport Documentation",
    "keywords": "Class NotificationGameData Namespace DataPersistence.DataTypes [Serializable] public class NotificationGameData Inheritance object NotificationGameData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NotificationGameData() public NotificationGameData() Fields notificationHistory public List<Notification> notificationHistory Field Value List<Notification>"
  },
  "api/DataPersistence.DataTypes.PlayerGameData.html": {
    "href": "api/DataPersistence.DataTypes.PlayerGameData.html",
    "title": "Class PlayerGameData | Czasoport Documentation",
    "keywords": "Class PlayerGameData Namespace DataPersistence.DataTypes [Serializable] public class PlayerGameData Inheritance object PlayerGameData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PlayerGameData() public PlayerGameData() Fields position public Vector2 position Field Value Vector2"
  },
  "api/DataPersistence.DataTypes.html": {
    "href": "api/DataPersistence.DataTypes.html",
    "title": "Namespace DataPersistence.DataTypes | Czasoport Documentation",
    "keywords": "Namespace DataPersistence.DataTypes Classes NotificationGameData PlayerGameData"
  },
  "api/DataPersistence.DefaultSaveDataSO.html": {
    "href": "api/DataPersistence.DefaultSaveDataSO.html",
    "title": "Class DefaultSaveDataSO | Czasoport Documentation",
    "keywords": "Class DefaultSaveDataSO Namespace DataPersistence Settings for entire application that defines variables for startup, core processes and shutdown public class DefaultSaveDataSO : ScriptableObject Inheritance object DefaultSaveDataSO Fields startingLevel public LevelInfoSO startingLevel Field Value LevelInfoSO startingPlayerPositionOffset public Vector2 startingPlayerPositionOffset Field Value Vector2 startingTimeline public TimeLine startingTimeline Field Value TimeLine"
  },
  "api/DataPersistence.FileDataHandler.html": {
    "href": "api/DataPersistence.FileDataHandler.html",
    "title": "Class FileDataHandler | Czasoport Documentation",
    "keywords": "Class FileDataHandler Namespace DataPersistence public class FileDataHandler Inheritance object FileDataHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors FileDataHandler(string, string) public FileDataHandler(string saveDirectory, string saveFileName) Parameters saveDirectory string saveFileName string Methods Load() public GameData Load() Returns GameData Save(GameData) public bool Save(GameData gameData) Parameters gameData GameData Returns bool"
  },
  "api/DataPersistence.GameData.html": {
    "href": "api/DataPersistence.GameData.html",
    "title": "Class GameData | Czasoport Documentation",
    "keywords": "Class GameData Namespace DataPersistence [Serializable] public class GameData Inheritance object GameData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors GameData() public GameData() Fields currentLevel public string currentLevel Field Value string currentTimeline public TimeLine currentTimeline Field Value TimeLine notificationGameData public NotificationGameData notificationGameData Field Value NotificationGameData playerGameData public PlayerGameData playerGameData Field Value PlayerGameData"
  },
  "api/DataPersistence.IDataPersistence.html": {
    "href": "api/DataPersistence.IDataPersistence.html",
    "title": "Interface IDataPersistence | Czasoport Documentation",
    "keywords": "Interface IDataPersistence Namespace DataPersistence public interface IDataPersistence Methods LoadPersistentData(GameData) void LoadPersistentData(GameData gameData) Parameters gameData GameData SavePersistentData(ref GameData) void SavePersistentData(ref GameData gameData) Parameters gameData GameData"
  },
  "api/DataPersistence.html": {
    "href": "api/DataPersistence.html",
    "title": "Namespace DataPersistence | Czasoport Documentation",
    "keywords": "Namespace DataPersistence Classes DataPersistenceManager DefaultSaveDataSO Settings for entire application that defines variables for startup, core processes and shutdown FileDataHandler GameData Interfaces IDataPersistence"
  },
  "api/DentedPixel.LTExamples.PathBezier.html": {
    "href": "api/DentedPixel.LTExamples.PathBezier.html",
    "title": "Class PathBezier | Czasoport Documentation",
    "keywords": "Class PathBezier Namespace DentedPixel.LTExamples public class PathBezier : MonoBehaviour Inheritance object PathBezier Fields trans public Transform[] trans Field Value Transform[]"
  },
  "api/DentedPixel.LTExamples.TestingUnitTests.html": {
    "href": "api/DentedPixel.LTExamples.TestingUnitTests.html",
    "title": "Class TestingUnitTests | Czasoport Documentation",
    "keywords": "Class TestingUnitTests Namespace DentedPixel.LTExamples public class TestingUnitTests : MonoBehaviour Inheritance object TestingUnitTests Fields cube1 public GameObject cube1 Field Value GameObject cube2 public GameObject cube2 Field Value GameObject cube3 public GameObject cube3 Field Value GameObject cube4 public GameObject cube4 Field Value GameObject cubeAlpha1 public GameObject cubeAlpha1 Field Value GameObject cubeAlpha2 public GameObject cubeAlpha2 Field Value GameObject"
  },
  "api/DentedPixel.LTExamples.html": {
    "href": "api/DentedPixel.LTExamples.html",
    "title": "Namespace DentedPixel.LTExamples | Czasoport Documentation",
    "keywords": "Namespace DentedPixel.LTExamples Classes PathBezier TestingUnitTests"
  },
  "api/DentedPixel.LeanDummy.html": {
    "href": "api/DentedPixel.LeanDummy.html",
    "title": "Class LeanDummy | Czasoport Documentation",
    "keywords": "Class LeanDummy Namespace DentedPixel public class LeanDummy Inheritance object LeanDummy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/DentedPixel.html": {
    "href": "api/DentedPixel.html",
    "title": "Namespace DentedPixel | Czasoport Documentation",
    "keywords": "Namespace DentedPixel Classes LeanDummy"
  },
  "api/Dialogues.ChoiceProcessing.ChoiceButton.html": {
    "href": "api/Dialogues.ChoiceProcessing.ChoiceButton.html",
    "title": "Class ChoiceButton | Czasoport Documentation",
    "keywords": "Class ChoiceButton Namespace Dialogues.ChoiceProcessing public class ChoiceButton : MonoBehaviour Inheritance object ChoiceButton Fields button public Button button Field Value Button Methods SetIcon(Sprite) public void SetIcon(Sprite newIcon) Parameters newIcon Sprite SetIcon2(Sprite) public void SetIcon2(Sprite newIcon) Parameters newIcon Sprite SetText(string) public void SetText(string newText) Parameters newText string"
  },
  "api/Dialogues.ChoiceProcessing.ChoiceContext.html": {
    "href": "api/Dialogues.ChoiceProcessing.ChoiceContext.html",
    "title": "Class ChoiceContext | Czasoport Documentation",
    "keywords": "Class ChoiceContext Namespace Dialogues.ChoiceProcessing public class ChoiceContext Inheritance object ChoiceContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties GetItem public ItemSO GetItem { get; set; } Property Value ItemSO GetsItem public bool GetsItem { get; } Property Value bool RequiredItem public ItemSO RequiredItem { get; set; } Property Value ItemSO RequiresItem public bool RequiresItem { get; } Property Value bool"
  },
  "api/Dialogues.ChoiceProcessing.ChoicesTagProcessor.html": {
    "href": "api/Dialogues.ChoiceProcessing.ChoicesTagProcessor.html",
    "title": "Class ChoicesTagProcessor | Czasoport Documentation",
    "keywords": "Class ChoicesTagProcessor Namespace Dialogues.ChoiceProcessing public static class ChoicesTagProcessor Inheritance object ChoicesTagProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ProcessTagsForChoice(string[]) public static ChoiceContext ProcessTagsForChoice(string[] tagsString) Parameters tagsString string[] Returns ChoiceContext"
  },
  "api/Dialogues.ChoiceProcessing.html": {
    "href": "api/Dialogues.ChoiceProcessing.html",
    "title": "Namespace Dialogues.ChoiceProcessing | Czasoport Documentation",
    "keywords": "Namespace Dialogues.ChoiceProcessing Classes ChoiceButton ChoiceContext ChoicesTagProcessor"
  },
  "api/Dialogues.ChoicesProcessor.html": {
    "href": "api/Dialogues.ChoicesProcessor.html",
    "title": "Class ChoicesProcessor | Czasoport Documentation",
    "keywords": "Class ChoicesProcessor Namespace Dialogues public class ChoicesProcessor Inheritance object ChoicesProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ChoicesProcessor(GameObject, GameObject) public ChoicesProcessor(GameObject choicesPanel, GameObject choicesPrefab) Parameters choicesPanel GameObject choicesPrefab GameObject Methods ProcessChoices(Story) public bool ProcessChoices(Story story) Parameters story Story Returns bool"
  },
  "api/Dialogues.DialogueManager.html": {
    "href": "api/Dialogues.DialogueManager.html",
    "title": "Class DialogueManager | Czasoport Documentation",
    "keywords": "Class DialogueManager Namespace Dialogues public class DialogueManager : Singleton<DialogueManager> Inheritance object Singleton<DialogueManager> DialogueManager Inherited Members Singleton<DialogueManager>.I Fields dialogueEnded [NonSerialized] public UnityEvent dialogueEnded Field Value UnityEvent dialogueStarted [NonSerialized] public UnityEvent dialogueStarted Field Value UnityEvent Methods Awake() protected override void Awake() ContinueDialogue() Main function in the dialogue process, manages choices parsing, tag parsing and canvas updating. Will end the dialogue if there are no more lines to read. public void ContinueDialogue() EndDialogue() End the current dialogue. If there is no dialogue active, nothing will happen. Dialogue progress won't be saved. public void EndDialogue() StartDialogue(TextAsset, Action) Start new dialogue from a file. File must be provided by other Behaviour. Dialogue will only start if there is no other dialogue active. public bool StartDialogue(TextAsset storyFile, Action finishAction = null) Parameters storyFile TextAsset File from which to load the story. Must be a JSON file, generated from Ink file. finishAction Action This action will be called when dialogues ends Returns bool"
  },
  "api/Dialogues.html": {
    "href": "api/Dialogues.html",
    "title": "Namespace Dialogues | Czasoport Documentation",
    "keywords": "Namespace Dialogues Classes ChoicesProcessor DialogueManager"
  },
  "api/Global.Audio.html": {
    "href": "api/Global.Audio.html",
    "title": "Class Audio | Czasoport Documentation",
    "keywords": "Class Audio Namespace Global public class Audio : MonoBehaviour Inheritance object Audio Fields itemPickedSound public AudioClip itemPickedSound Field Value AudioClip itemRemovedSound public AudioClip itemRemovedSound Field Value AudioClip"
  },
  "api/Global.CrossingLight.html": {
    "href": "api/Global.CrossingLight.html",
    "title": "Class CrossingLight | Czasoport Documentation",
    "keywords": "Class CrossingLight Namespace Global public class CrossingLight : MonoBehaviour Inheritance object CrossingLight Fields lightChangeInterval public float lightChangeInterval Field Value float"
  },
  "api/Global.Czasoport.html": {
    "href": "api/Global.Czasoport.html",
    "title": "Class Czasoport | Czasoport Documentation",
    "keywords": "Class Czasoport Namespace Global public class Czasoport : InteractableObject, IItemInteractable, IHandInteractable, ILongHandInteractable, ILongItemInteractable Inheritance object InteractableObject Czasoport Implements IItemInteractable IHandInteractable ILongHandInteractable ILongItemInteractable Inherited Members InteractableObject.definition InteractableObject.Logger InteractableObject.LongInteractionItem(Item) InteractableObject.LongInteractionHand() Methods InteractionHand() public override void InteractionHand() InteractionItem(Item) public override bool InteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/Global.CzasoportPart.html": {
    "href": "api/Global.CzasoportPart.html",
    "title": "Class CzasoportPart | Czasoport Documentation",
    "keywords": "Class CzasoportPart Namespace Global public class CzasoportPart : InteractableObject, IItemInteractable, IHandInteractable, ILongHandInteractable, ILongItemInteractable Inheritance object InteractableObject CzasoportPart Implements IItemInteractable IHandInteractable ILongHandInteractable ILongItemInteractable Inherited Members InteractableObject.definition InteractableObject.Logger InteractableObject.LongInteractionItem(Item) InteractableObject.LongInteractionHand() Methods InteractionHand() public override void InteractionHand() InteractionItem(Item) public override bool InteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/Global.DummyNPC.html": {
    "href": "api/Global.DummyNPC.html",
    "title": "Class DummyNPC | Czasoport Documentation",
    "keywords": "Class DummyNPC Namespace Global public class DummyNPC : MonoBehaviour Inheritance object DummyNPC Fields dialogue public TextAsset dialogue Field Value TextAsset Methods Update() public void Update()"
  },
  "api/Global.ExampleSpline.html": {
    "href": "api/Global.ExampleSpline.html",
    "title": "Class ExampleSpline | Czasoport Documentation",
    "keywords": "Class ExampleSpline Namespace Global public class ExampleSpline : MonoBehaviour Inheritance object ExampleSpline Fields trans public Transform[] trans Field Value Transform[]"
  },
  "api/Global.FollowWorld.html": {
    "href": "api/Global.FollowWorld.html",
    "title": "Class FollowWorld | Czasoport Documentation",
    "keywords": "Class FollowWorld Namespace Global public class FollowWorld : MonoBehaviour Inheritance object FollowWorld"
  },
  "api/Global.Following.html": {
    "href": "api/Global.Following.html",
    "title": "Class Following | Czasoport Documentation",
    "keywords": "Class Following Namespace Global public class Following : MonoBehaviour Inheritance object Following Fields dude1 public Transform dude1 Field Value Transform dude1Title public Transform dude1Title Field Value Transform dude2 public Transform dude2 Field Value Transform dude2Title public Transform dude2Title Field Value Transform dude3 public Transform dude3 Field Value Transform dude3Title public Transform dude3Title Field Value Transform dude4 public Transform dude4 Field Value Transform dude4Title public Transform dude4Title Field Value Transform dude5 public Transform dude5 Field Value Transform dude5Title public Transform dude5Title Field Value Transform followArrow public Transform followArrow Field Value Transform planet public Transform planet Field Value Transform"
  },
  "api/Global.GeneralAdvancedTechniques.html": {
    "href": "api/Global.GeneralAdvancedTechniques.html",
    "title": "Class GeneralAdvancedTechniques | Czasoport Documentation",
    "keywords": "Class GeneralAdvancedTechniques Namespace Global public class GeneralAdvancedTechniques : MonoBehaviour Inheritance object GeneralAdvancedTechniques Fields avatar2dRecursive public GameObject avatar2dRecursive Field Value GameObject avatarMove public GameObject avatarMove Field Value GameObject avatarRecursive public GameObject avatarRecursive Field Value GameObject avatarSpeed public GameObject[] avatarSpeed Field Value GameObject[] avatarSpeed2 public GameObject[] avatarSpeed2 Field Value GameObject[] movePts public Transform[] movePts Field Value Transform[] textField public RectTransform textField Field Value RectTransform wingPersonPanel public RectTransform wingPersonPanel Field Value RectTransform"
  },
  "api/Global.GeneralBasic.html": {
    "href": "api/Global.GeneralBasic.html",
    "title": "Class GeneralBasic | Czasoport Documentation",
    "keywords": "Class GeneralBasic Namespace Global public class GeneralBasic : MonoBehaviour Inheritance object GeneralBasic Fields prefabAvatar public GameObject prefabAvatar Field Value GameObject"
  },
  "api/Global.GeneralBasics2d.html": {
    "href": "api/Global.GeneralBasics2d.html",
    "title": "Class GeneralBasics2d | Czasoport Documentation",
    "keywords": "Class GeneralBasics2d Namespace Global public class GeneralBasics2d : MonoBehaviour Inheritance object GeneralBasics2d Fields dudeTexture public Texture2D dudeTexture Field Value Texture2D prefabParticles public GameObject prefabParticles Field Value GameObject"
  },
  "api/Global.GeneralCameraShake.html": {
    "href": "api/Global.GeneralCameraShake.html",
    "title": "Class GeneralCameraShake | Czasoport Documentation",
    "keywords": "Class GeneralCameraShake Namespace Global public class GeneralCameraShake : MonoBehaviour Inheritance object GeneralCameraShake"
  },
  "api/Global.GeneralEasingTypes.html": {
    "href": "api/Global.GeneralEasingTypes.html",
    "title": "Class GeneralEasingTypes | Czasoport Documentation",
    "keywords": "Class GeneralEasingTypes Namespace Global public class GeneralEasingTypes : MonoBehaviour Inheritance object GeneralEasingTypes Fields animationCurve public AnimationCurve animationCurve Field Value AnimationCurve lineDrawScale public float lineDrawScale Field Value float"
  },
  "api/Global.GeneralEventsListeners.MyEvents.html": {
    "href": "api/Global.GeneralEventsListeners.MyEvents.html",
    "title": "Enum GeneralEventsListeners.MyEvents | Czasoport Documentation",
    "keywords": "Enum GeneralEventsListeners.MyEvents Namespace Global public enum GeneralEventsListeners.MyEvents Fields CHANGE_COLOR = 0 JUMP = 1 LENGTH = 2"
  },
  "api/Global.GeneralEventsListeners.html": {
    "href": "api/Global.GeneralEventsListeners.html",
    "title": "Class GeneralEventsListeners | Czasoport Documentation",
    "keywords": "Class GeneralEventsListeners Namespace Global public class GeneralEventsListeners : MonoBehaviour Inheritance object GeneralEventsListeners"
  },
  "api/Global.GeneralSequencer.html": {
    "href": "api/Global.GeneralSequencer.html",
    "title": "Class GeneralSequencer | Czasoport Documentation",
    "keywords": "Class GeneralSequencer Namespace Global public class GeneralSequencer : MonoBehaviour Inheritance object GeneralSequencer Fields avatar1 public GameObject avatar1 Field Value GameObject dustCloudPrefab public GameObject dustCloudPrefab Field Value GameObject speedScale public float speedScale Field Value float star public GameObject star Field Value GameObject Methods Start() public void Start()"
  },
  "api/Global.GeneralSimpleUI.html": {
    "href": "api/Global.GeneralSimpleUI.html",
    "title": "Class GeneralSimpleUI | Czasoport Documentation",
    "keywords": "Class GeneralSimpleUI Namespace Global public class GeneralSimpleUI : MonoBehaviour Inheritance object GeneralSimpleUI Fields button public RectTransform button Field Value RectTransform"
  },
  "api/Global.GeneralUISpace.html": {
    "href": "api/Global.GeneralUISpace.html",
    "title": "Class GeneralUISpace | Czasoport Documentation",
    "keywords": "Class GeneralUISpace Namespace Global public class GeneralUISpace : MonoBehaviour Inheritance object GeneralUISpace Fields chatBar1 public RectTransform chatBar1 Field Value RectTransform chatBar2 public RectTransform chatBar2 Field Value RectTransform chatRect public RectTransform chatRect Field Value RectTransform chatSprites public Sprite[] chatSprites Field Value Sprite[] chatText public UnityEngine.UI.Text chatText Field Value Text chatWindow public RectTransform chatWindow Field Value RectTransform mainButton1 public RectTransform mainButton1 Field Value RectTransform mainButton2 public RectTransform mainButton2 Field Value RectTransform mainParagraphText public RectTransform mainParagraphText Field Value RectTransform mainTitleText public RectTransform mainTitleText Field Value RectTransform mainWindow public RectTransform mainWindow Field Value RectTransform pauseRing1 public RectTransform pauseRing1 Field Value RectTransform pauseRing2 public RectTransform pauseRing2 Field Value RectTransform pauseWindow public RectTransform pauseWindow Field Value RectTransform rawImageRect public RectTransform rawImageRect Field Value RectTransform"
  },
  "api/Global.InputActions.GameActions.html": {
    "href": "api/Global.InputActions.GameActions.html",
    "title": "Struct InputActions.GameActions | Czasoport Documentation",
    "keywords": "Struct InputActions.GameActions Namespace Global public struct InputActions.GameActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors GameActions(InputActions) public GameActions(InputActions wrapper) Parameters wrapper InputActions Properties TogglePause public InputAction TogglePause { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(IGameActions) public void SetCallbacks(InputActions.IGameActions instance) Parameters instance InputActions.IGameActions Operators implicit operator InputActionMap(GameActions) public static implicit operator InputActionMap(InputActions.GameActions set) Parameters set InputActions.GameActions Returns InputActionMap"
  },
  "api/Global.InputActions.IGameActions.html": {
    "href": "api/Global.InputActions.IGameActions.html",
    "title": "Interface InputActions.IGameActions | Czasoport Documentation",
    "keywords": "Interface InputActions.IGameActions Namespace Global public interface InputActions.IGameActions Methods OnTogglePause(CallbackContext) void OnTogglePause(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/Global.InputActions.IInteractionsActions.html": {
    "href": "api/Global.InputActions.IInteractionsActions.html",
    "title": "Interface InputActions.IInteractionsActions | Czasoport Documentation",
    "keywords": "Interface InputActions.IInteractionsActions Namespace Global public interface InputActions.IInteractionsActions Methods OnInteraction(CallbackContext) void OnInteraction(InputAction.CallbackContext context) Parameters context CallbackContext OnLongInteraction(CallbackContext) void OnLongInteraction(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/Global.InputActions.IInventoryActions.html": {
    "href": "api/Global.InputActions.IInventoryActions.html",
    "title": "Interface InputActions.IInventoryActions | Czasoport Documentation",
    "keywords": "Interface InputActions.IInventoryActions Namespace Global public interface InputActions.IInventoryActions Methods OnChooseItem(CallbackContext) void OnChooseItem(InputAction.CallbackContext context) Parameters context CallbackContext OnDrop(CallbackContext) void OnDrop(InputAction.CallbackContext context) Parameters context CallbackContext OnNextItem(CallbackContext) void OnNextItem(InputAction.CallbackContext context) Parameters context CallbackContext OnPreviousItem(CallbackContext) void OnPreviousItem(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/Global.InputActions.IMouseActions.html": {
    "href": "api/Global.InputActions.IMouseActions.html",
    "title": "Interface InputActions.IMouseActions | Czasoport Documentation",
    "keywords": "Interface InputActions.IMouseActions Namespace Global public interface InputActions.IMouseActions Methods OnLeftClick(CallbackContext) void OnLeftClick(InputAction.CallbackContext context) Parameters context CallbackContext OnMiddleClick(CallbackContext) void OnMiddleClick(InputAction.CallbackContext context) Parameters context CallbackContext OnMousePosition(CallbackContext) void OnMousePosition(InputAction.CallbackContext context) Parameters context CallbackContext OnRightClick(CallbackContext) void OnRightClick(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/Global.InputActions.IMovementActions.html": {
    "href": "api/Global.InputActions.IMovementActions.html",
    "title": "Interface InputActions.IMovementActions | Czasoport Documentation",
    "keywords": "Interface InputActions.IMovementActions Namespace Global public interface InputActions.IMovementActions Methods OnFocusChange(CallbackContext) void OnFocusChange(InputAction.CallbackContext context) Parameters context CallbackContext OnNavigation(CallbackContext) void OnNavigation(InputAction.CallbackContext context) Parameters context CallbackContext OnRun(CallbackContext) void OnRun(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/Global.InputActions.ITeleportActions.html": {
    "href": "api/Global.InputActions.ITeleportActions.html",
    "title": "Interface InputActions.ITeleportActions | Czasoport Documentation",
    "keywords": "Interface InputActions.ITeleportActions Namespace Global public interface InputActions.ITeleportActions Methods OnTeleportBack(CallbackContext) void OnTeleportBack(InputAction.CallbackContext context) Parameters context CallbackContext OnTeleportForward(CallbackContext) void OnTeleportForward(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/Global.InputActions.InteractionsActions.html": {
    "href": "api/Global.InputActions.InteractionsActions.html",
    "title": "Struct InputActions.InteractionsActions | Czasoport Documentation",
    "keywords": "Struct InputActions.InteractionsActions Namespace Global public struct InputActions.InteractionsActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors InteractionsActions(InputActions) public InteractionsActions(InputActions wrapper) Parameters wrapper InputActions Properties Interaction public InputAction Interaction { get; } Property Value InputAction LongInteraction public InputAction LongInteraction { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(IInteractionsActions) public void SetCallbacks(InputActions.IInteractionsActions instance) Parameters instance InputActions.IInteractionsActions Operators implicit operator InputActionMap(InteractionsActions) public static implicit operator InputActionMap(InputActions.InteractionsActions set) Parameters set InputActions.InteractionsActions Returns InputActionMap"
  },
  "api/Global.InputActions.InventoryActions.html": {
    "href": "api/Global.InputActions.InventoryActions.html",
    "title": "Struct InputActions.InventoryActions | Czasoport Documentation",
    "keywords": "Struct InputActions.InventoryActions Namespace Global public struct InputActions.InventoryActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors InventoryActions(InputActions) public InventoryActions(InputActions wrapper) Parameters wrapper InputActions Properties ChooseItem public InputAction ChooseItem { get; } Property Value InputAction Drop public InputAction Drop { get; } Property Value InputAction NextItem public InputAction NextItem { get; } Property Value InputAction PreviousItem public InputAction PreviousItem { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(IInventoryActions) public void SetCallbacks(InputActions.IInventoryActions instance) Parameters instance InputActions.IInventoryActions Operators implicit operator InputActionMap(InventoryActions) public static implicit operator InputActionMap(InputActions.InventoryActions set) Parameters set InputActions.InventoryActions Returns InputActionMap"
  },
  "api/Global.InputActions.MouseActions.html": {
    "href": "api/Global.InputActions.MouseActions.html",
    "title": "Struct InputActions.MouseActions | Czasoport Documentation",
    "keywords": "Struct InputActions.MouseActions Namespace Global public struct InputActions.MouseActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors MouseActions(InputActions) public MouseActions(InputActions wrapper) Parameters wrapper InputActions Properties LeftClick public InputAction LeftClick { get; } Property Value InputAction MiddleClick public InputAction MiddleClick { get; } Property Value InputAction MousePosition public InputAction MousePosition { get; } Property Value InputAction RightClick public InputAction RightClick { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(IMouseActions) public void SetCallbacks(InputActions.IMouseActions instance) Parameters instance InputActions.IMouseActions Operators implicit operator InputActionMap(MouseActions) public static implicit operator InputActionMap(InputActions.MouseActions set) Parameters set InputActions.MouseActions Returns InputActionMap"
  },
  "api/Global.InputActions.MovementActions.html": {
    "href": "api/Global.InputActions.MovementActions.html",
    "title": "Struct InputActions.MovementActions | Czasoport Documentation",
    "keywords": "Struct InputActions.MovementActions Namespace Global public struct InputActions.MovementActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors MovementActions(InputActions) public MovementActions(InputActions wrapper) Parameters wrapper InputActions Properties FocusChange public InputAction FocusChange { get; } Property Value InputAction Navigation public InputAction Navigation { get; } Property Value InputAction Run public InputAction Run { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(IMovementActions) public void SetCallbacks(InputActions.IMovementActions instance) Parameters instance InputActions.IMovementActions Operators implicit operator InputActionMap(MovementActions) public static implicit operator InputActionMap(InputActions.MovementActions set) Parameters set InputActions.MovementActions Returns InputActionMap"
  },
  "api/Global.InputActions.TeleportActions.html": {
    "href": "api/Global.InputActions.TeleportActions.html",
    "title": "Struct InputActions.TeleportActions | Czasoport Documentation",
    "keywords": "Struct InputActions.TeleportActions Namespace Global public struct InputActions.TeleportActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TeleportActions(InputActions) public TeleportActions(InputActions wrapper) Parameters wrapper InputActions Properties TeleportBack public InputAction TeleportBack { get; } Property Value InputAction TeleportForward public InputAction TeleportForward { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(ITeleportActions) public void SetCallbacks(InputActions.ITeleportActions instance) Parameters instance InputActions.ITeleportActions Operators implicit operator InputActionMap(TeleportActions) public static implicit operator InputActionMap(InputActions.TeleportActions set) Parameters set InputActions.TeleportActions Returns InputActionMap"
  },
  "api/Global.InputActions.html": {
    "href": "api/Global.InputActions.html",
    "title": "Class InputActions | Czasoport Documentation",
    "keywords": "Class InputActions Namespace Global public class InputActions : IInputActionCollection2, IDisposable Inheritance object InputActions Implements IDisposable Constructors InputActions() public InputActions() Properties Game public InputActions.GameActions Game { get; } Property Value InputActions.GameActions Interactions public InputActions.InteractionsActions Interactions { get; } Property Value InputActions.InteractionsActions Inventory public InputActions.InventoryActions Inventory { get; } Property Value InputActions.InventoryActions Mouse public InputActions.MouseActions Mouse { get; } Property Value InputActions.MouseActions Movement public InputActions.MovementActions Movement { get; } Property Value InputActions.MovementActions Teleport public InputActions.TeleportActions Teleport { get; } Property Value InputActions.TeleportActions asset public InputActionAsset asset { get; } Property Value InputActionAsset bindingMask public InputBinding? bindingMask { get; set; } Property Value InputBinding? bindings public IEnumerable<InputBinding> bindings { get; } Property Value IEnumerable<InputBinding> controlSchemes public ReadOnlyArray<InputControlScheme> controlSchemes { get; } Property Value ReadOnlyArray<InputControlScheme> devices public ReadOnlyArray<InputDevice>? devices { get; set; } Property Value ReadOnlyArray<InputDevice>? Methods Contains(InputAction) public bool Contains(InputAction action) Parameters action InputAction Returns bool Disable() public void Disable() Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Enable() public void Enable() FindAction(string, bool) public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false) Parameters actionNameOrId string throwIfNotFound bool Returns InputAction FindBinding(InputBinding, out InputAction) public int FindBinding(InputBinding bindingMask, out InputAction action) Parameters bindingMask InputBinding action InputAction Returns int GetEnumerator() public IEnumerator<InputAction> GetEnumerator() Returns IEnumerator<InputAction>"
  },
  "api/Global.LTBezier.html": {
    "href": "api/Global.LTBezier.html",
    "title": "Class LTBezier | Czasoport Documentation",
    "keywords": "Class LTBezier Namespace Global public class LTBezier Inheritance object LTBezier Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LTBezier(Vector3, Vector3, Vector3, Vector3, float) public LTBezier(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float precision) Parameters a Vector3 b Vector3 c Vector3 d Vector3 precision float Fields length public float length Field Value float Methods point(float) public Vector3 point(float t) Parameters t float Returns Vector3"
  },
  "api/Global.LTBezierPath.html": {
    "href": "api/Global.LTBezierPath.html",
    "title": "Class LTBezierPath | Czasoport Documentation",
    "keywords": "Class LTBezierPath Namespace Global public class LTBezierPath Inheritance object LTBezierPath Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LTBezierPath() public LTBezierPath() LTBezierPath(Vector3[]) public LTBezierPath(Vector3[] pts_) Parameters pts_ Vector3[] Fields length public float length Field Value float orientToPath public bool orientToPath Field Value bool orientToPath2d public bool orientToPath2d Field Value bool pts public Vector3[] pts Field Value Vector3[] Properties distance public float distance { get; } Property Value float Methods gizmoDraw(float) public void gizmoDraw(float t = -1) Parameters t float place(Transform, float) Place an object along a certain point on the path (facing the direction perpendicular to the path) public void place(Transform transform, float ratio) Parameters transform Transform ratio float place(Transform, float, Vector3) Place an object along a certain point on the path, with it facing a certain direction perpendicular to the path public void place(Transform transform, float ratio, Vector3 worldUp) Parameters transform Transform ratio float worldUp Vector3 place2d(Transform, float) public void place2d(Transform transform, float ratio) Parameters transform Transform ratio float placeLocal(Transform, float) Place an object along a certain point on the path (facing the direction perpendicular to the path) - Local Space, not world-space public void placeLocal(Transform transform, float ratio) Parameters transform Transform ratio float placeLocal(Transform, float, Vector3) Place an object along a certain point on the path, with it facing a certain direction perpendicular to the path - Local Space, not world-space public void placeLocal(Transform transform, float ratio, Vector3 worldUp) Parameters transform Transform ratio float worldUp Vector3 placeLocal2d(Transform, float) public void placeLocal2d(Transform transform, float ratio) Parameters transform Transform ratio float point(float) Retrieve a point along a path public Vector3 point(float ratio) Parameters ratio float Returns Vector3 ratioAtPoint(Vector3, float) Retrieve the closest ratio near the point public float ratioAtPoint(Vector3 pt, float precision = 0.01) Parameters pt Vector3 precision float Returns float setPoints(Vector3[]) public void setPoints(Vector3[] pts_) Parameters pts_ Vector3[]"
  },
  "api/Global.LTDescr.ActionMethodDelegate.html": {
    "href": "api/Global.LTDescr.ActionMethodDelegate.html",
    "title": "Delegate LTDescr.ActionMethodDelegate | Czasoport Documentation",
    "keywords": "Delegate LTDescr.ActionMethodDelegate Namespace Global public delegate void LTDescr.ActionMethodDelegate()"
  },
  "api/Global.LTDescr.EaseTypeDelegate.html": {
    "href": "api/Global.LTDescr.EaseTypeDelegate.html",
    "title": "Delegate LTDescr.EaseTypeDelegate | Czasoport Documentation",
    "keywords": "Delegate LTDescr.EaseTypeDelegate Namespace Global public delegate Vector3 LTDescr.EaseTypeDelegate() Returns Vector3"
  },
  "api/Global.LTDescr.html": {
    "href": "api/Global.LTDescr.html",
    "title": "Class LTDescr | Czasoport Documentation",
    "keywords": "Class LTDescr Namespace Global public class LTDescr Inheritance object LTDescr Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LTDescr() public LTDescr() Fields _optional public LTDescrOptional _optional Field Value LTDescrOptional counter public uint counter Field Value uint delay public float delay Field Value float destroyOnComplete public bool destroyOnComplete Field Value bool direction public float direction Field Value float directionLast public float directionLast Field Value float dt public static float dt Field Value float easeMethod public LTDescr.EaseTypeDelegate easeMethod Field Value LTDescr.EaseTypeDelegate hasExtraOnCompletes public bool hasExtraOnCompletes Field Value bool hasInitiliazed public bool hasInitiliazed Field Value bool hasPhysics public bool hasPhysics Field Value bool hasUpdateCallback public bool hasUpdateCallback Field Value bool lastVal public float lastVal Field Value float loopCount public int loopCount Field Value int loopType public LeanTweenType loopType Field Value LeanTweenType newVect public static Vector3 newVect Field Value Vector3 onCompleteOnRepeat public bool onCompleteOnRepeat Field Value bool onCompleteOnStart public bool onCompleteOnStart Field Value bool overshoot public float overshoot Field Value float passed public float passed Field Value float period public float period Field Value float ratioPassed public float ratioPassed Field Value float rawImage public UnityEngine.UI.RawImage rawImage Field Value RawImage rectTransform public RectTransform rectTransform Field Value RectTransform scale public float scale Field Value float speed public float speed Field Value float spriteRen public SpriteRenderer spriteRen Field Value SpriteRenderer sprites public UnityEngine.Sprite[] sprites Field Value Sprite[] time public float time Field Value float toggle public bool toggle Field Value bool trans public Transform trans Field Value Transform type public TweenAction type Field Value TweenAction uiImage public UnityEngine.UI.Image uiImage Field Value Image uiText public UnityEngine.UI.Text uiText Field Value Text useEstimatedTime public bool useEstimatedTime Field Value bool useFrames public bool useFrames Field Value bool useManualTime public bool useManualTime Field Value bool useRecursion public bool useRecursion Field Value bool usesNormalDt public bool usesNormalDt Field Value bool val public static float val Field Value float Properties easeInternal public LTDescr.ActionMethodDelegate easeInternal { get; set; } Property Value LTDescr.ActionMethodDelegate from public Vector3 from { get; set; } Property Value Vector3 id public int id { get; } Property Value int initInternal public LTDescr.ActionMethodDelegate initInternal { get; set; } Property Value LTDescr.ActionMethodDelegate optional public LTDescrOptional optional { get; set; } Property Value LTDescrOptional to public Vector3 to { get; set; } Property Value Vector3 toTrans public Transform toTrans { get; } Property Value Transform uniqueId public int uniqueId { get; } Property Value int Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. callOnCompletes() public void callOnCompletes() cancel(GameObject) [Obsolete(\"Use 'LeanTween.cancel( id )' instead\")] public LTDescr cancel(GameObject gameObject) Parameters gameObject GameObject Returns LTDescr pause() public LTDescr pause() Returns LTDescr reset() public void reset() resume() public LTDescr resume() Returns LTDescr setAlpha() public LTDescr setAlpha() Returns LTDescr setAlphaVertex() public LTDescr setAlphaVertex() Returns LTDescr setAudio(object) public LTDescr setAudio(object audio) Parameters audio object Returns LTDescr setAxis(Vector3) public LTDescr setAxis(Vector3 axis) Parameters axis Vector3 Returns LTDescr setCallback() public LTDescr setCallback() Returns LTDescr setCallbackColor() public LTDescr setCallbackColor() Returns LTDescr setCanvasAlpha() public LTDescr setCanvasAlpha() Returns LTDescr setCanvasColor() public LTDescr setCanvasColor() Returns LTDescr setCanvasGroupAlpha() public LTDescr setCanvasGroupAlpha() Returns LTDescr setCanvasMove() public LTDescr setCanvasMove() Returns LTDescr setCanvasMoveX() public LTDescr setCanvasMoveX() Returns LTDescr setCanvasMoveY() public LTDescr setCanvasMoveY() Returns LTDescr setCanvasMoveZ() public LTDescr setCanvasMoveZ() Returns LTDescr setCanvasPlaySprite() public LTDescr setCanvasPlaySprite() Returns LTDescr setCanvasRotateAround() public LTDescr setCanvasRotateAround() Returns LTDescr setCanvasRotateAroundLocal() public LTDescr setCanvasRotateAroundLocal() Returns LTDescr setCanvasScale() public LTDescr setCanvasScale() Returns LTDescr setCanvasSizeDelta() public LTDescr setCanvasSizeDelta() Returns LTDescr setColor() public LTDescr setColor() Returns LTDescr setDelay(float) public LTDescr setDelay(float delay) Parameters delay float Returns LTDescr setDelayedSound() public LTDescr setDelayedSound() Returns LTDescr setDestroyOnComplete(bool) public LTDescr setDestroyOnComplete(bool doesDestroy) Parameters doesDestroy bool Returns LTDescr setDiff(Vector3) public LTDescr setDiff(Vector3 diff) Parameters diff Vector3 Returns LTDescr setDirection(float) public LTDescr setDirection(float direction) Parameters direction float Returns LTDescr setEase(AnimationCurve) public LTDescr setEase(AnimationCurve easeCurve) Parameters easeCurve AnimationCurve Returns LTDescr setEase(LeanTweenType) public LTDescr setEase(LeanTweenType easeType) Parameters easeType LeanTweenType Returns LTDescr setEaseInBack() public LTDescr setEaseInBack() Returns LTDescr setEaseInBounce() public LTDescr setEaseInBounce() Returns LTDescr setEaseInCirc() public LTDescr setEaseInCirc() Returns LTDescr setEaseInCubic() public LTDescr setEaseInCubic() Returns LTDescr setEaseInElastic() public LTDescr setEaseInElastic() Returns LTDescr setEaseInExpo() public LTDescr setEaseInExpo() Returns LTDescr setEaseInOutBack() public LTDescr setEaseInOutBack() Returns LTDescr setEaseInOutBounce() public LTDescr setEaseInOutBounce() Returns LTDescr setEaseInOutCirc() public LTDescr setEaseInOutCirc() Returns LTDescr setEaseInOutCubic() public LTDescr setEaseInOutCubic() Returns LTDescr setEaseInOutElastic() public LTDescr setEaseInOutElastic() Returns LTDescr setEaseInOutExpo() public LTDescr setEaseInOutExpo() Returns LTDescr setEaseInOutQuad() public LTDescr setEaseInOutQuad() Returns LTDescr setEaseInOutQuart() public LTDescr setEaseInOutQuart() Returns LTDescr setEaseInOutQuint() public LTDescr setEaseInOutQuint() Returns LTDescr setEaseInOutSine() public LTDescr setEaseInOutSine() Returns LTDescr setEaseInQuad() public LTDescr setEaseInQuad() Returns LTDescr setEaseInQuart() public LTDescr setEaseInQuart() Returns LTDescr setEaseInQuint() public LTDescr setEaseInQuint() Returns LTDescr setEaseInSine() public LTDescr setEaseInSine() Returns LTDescr setEaseLinear() public LTDescr setEaseLinear() Returns LTDescr setEaseOutBack() public LTDescr setEaseOutBack() Returns LTDescr setEaseOutBounce() public LTDescr setEaseOutBounce() Returns LTDescr setEaseOutCirc() public LTDescr setEaseOutCirc() Returns LTDescr setEaseOutCubic() public LTDescr setEaseOutCubic() Returns LTDescr setEaseOutElastic() public LTDescr setEaseOutElastic() Returns LTDescr setEaseOutExpo() public LTDescr setEaseOutExpo() Returns LTDescr setEaseOutQuad() public LTDescr setEaseOutQuad() Returns LTDescr setEaseOutQuart() public LTDescr setEaseOutQuart() Returns LTDescr setEaseOutQuint() public LTDescr setEaseOutQuint() Returns LTDescr setEaseOutSine() public LTDescr setEaseOutSine() Returns LTDescr setEasePunch() public LTDescr setEasePunch() Returns LTDescr setEaseShake() public LTDescr setEaseShake() Returns LTDescr setEaseSpring() public LTDescr setEaseSpring() Returns LTDescr setFollow() public LTDescr setFollow() Returns LTDescr setFrameRate(float) public LTDescr setFrameRate(float frameRate) Parameters frameRate float Returns LTDescr setFrom(float) public LTDescr setFrom(float from) Parameters from float Returns LTDescr setFrom(Vector3) public LTDescr setFrom(Vector3 from) Parameters from Vector3 Returns LTDescr setFromColor(Color) public LTDescr setFromColor(Color col) Parameters col Color Returns LTDescr setGUIAlpha() public LTDescr setGUIAlpha() Returns LTDescr setGUIMove() public LTDescr setGUIMove() Returns LTDescr setGUIMoveMargin() public LTDescr setGUIMoveMargin() Returns LTDescr setGUIRotate() public LTDescr setGUIRotate() Returns LTDescr setGUIScale() public LTDescr setGUIScale() Returns LTDescr setHasInitialized(bool) public LTDescr setHasInitialized(bool has) Parameters has bool Returns LTDescr setId(uint, uint) public LTDescr setId(uint id, uint global_counter) Parameters id uint global_counter uint Returns LTDescr setIgnoreTimeScale(bool) public LTDescr setIgnoreTimeScale(bool useUnScaledTime) Parameters useUnScaledTime bool Returns LTDescr setLoopClamp() public LTDescr setLoopClamp() Returns LTDescr setLoopClamp(int) public LTDescr setLoopClamp(int loops) Parameters loops int Returns LTDescr setLoopCount(int) public LTDescr setLoopCount(int loopCount) Parameters loopCount int Returns LTDescr setLoopOnce() public LTDescr setLoopOnce() Returns LTDescr setLoopPingPong() public LTDescr setLoopPingPong() Returns LTDescr setLoopPingPong(int) public LTDescr setLoopPingPong(int loops) Parameters loops int Returns LTDescr setLoopType(LeanTweenType) public LTDescr setLoopType(LeanTweenType loopType) Parameters loopType LeanTweenType Returns LTDescr setMove() public LTDescr setMove() Returns LTDescr setMoveCurved() public LTDescr setMoveCurved() Returns LTDescr setMoveCurvedLocal() public LTDescr setMoveCurvedLocal() Returns LTDescr setMoveLocal() public LTDescr setMoveLocal() Returns LTDescr setMoveLocalX() public LTDescr setMoveLocalX() Returns LTDescr setMoveLocalY() public LTDescr setMoveLocalY() Returns LTDescr setMoveLocalZ() public LTDescr setMoveLocalZ() Returns LTDescr setMoveSpline() public LTDescr setMoveSpline() Returns LTDescr setMoveSplineLocal() public LTDescr setMoveSplineLocal() Returns LTDescr setMoveToTransform() public LTDescr setMoveToTransform() Returns LTDescr setMoveX() public LTDescr setMoveX() Returns LTDescr setMoveY() public LTDescr setMoveY() Returns LTDescr setMoveZ() public LTDescr setMoveZ() Returns LTDescr setOffset(Vector3) public LTDescr setOffset(Vector3 offset) Parameters offset Vector3 Returns LTDescr setOnComplete(Action) public LTDescr setOnComplete(Action onComplete) Parameters onComplete Action Returns LTDescr setOnComplete(Action<object>) public LTDescr setOnComplete(Action<object> onComplete) Parameters onComplete Action<object> Returns LTDescr setOnComplete(Action<object>, object) public LTDescr setOnComplete(Action<object> onComplete, object onCompleteParam) Parameters onComplete Action<object> onCompleteParam object Returns LTDescr setOnCompleteOnRepeat(bool) public LTDescr setOnCompleteOnRepeat(bool isOn) Parameters isOn bool Returns LTDescr setOnCompleteOnStart(bool) public LTDescr setOnCompleteOnStart(bool isOn) Parameters isOn bool Returns LTDescr setOnCompleteParam(object) public LTDescr setOnCompleteParam(object onCompleteParam) Parameters onCompleteParam object Returns LTDescr setOnStart(Action) public LTDescr setOnStart(Action onStart) Parameters onStart Action Returns LTDescr setOnUpdate(Action<Color, object>) public LTDescr setOnUpdate(Action<Color, object> onUpdate) Parameters onUpdate Action<Color, object> Returns LTDescr setOnUpdate(Action<Color>) public LTDescr setOnUpdate(Action<Color> onUpdate) Parameters onUpdate Action<Color> Returns LTDescr setOnUpdate(Action<float, object>, object) public LTDescr setOnUpdate(Action<float, object> onUpdate, object onUpdateParam = null) Parameters onUpdate Action<float, object> onUpdateParam object Returns LTDescr setOnUpdate(Action<float>) public LTDescr setOnUpdate(Action<float> onUpdate) Parameters onUpdate Action<float> Returns LTDescr setOnUpdate(Action<Vector2>, object) public LTDescr setOnUpdate(Action<Vector2> onUpdate, object onUpdateParam = null) Parameters onUpdate Action<Vector2> onUpdateParam object Returns LTDescr setOnUpdate(Action<Vector3, object>, object) public LTDescr setOnUpdate(Action<Vector3, object> onUpdate, object onUpdateParam = null) Parameters onUpdate Action<Vector3, object> onUpdateParam object Returns LTDescr setOnUpdate(Action<Vector3>, object) public LTDescr setOnUpdate(Action<Vector3> onUpdate, object onUpdateParam = null) Parameters onUpdate Action<Vector3> onUpdateParam object Returns LTDescr setOnUpdateColor(Action<Color, object>) public LTDescr setOnUpdateColor(Action<Color, object> onUpdate) Parameters onUpdate Action<Color, object> Returns LTDescr setOnUpdateColor(Action<Color>) public LTDescr setOnUpdateColor(Action<Color> onUpdate) Parameters onUpdate Action<Color> Returns LTDescr setOnUpdateObject(Action<float, object>) public LTDescr setOnUpdateObject(Action<float, object> onUpdate) Parameters onUpdate Action<float, object> Returns LTDescr setOnUpdateParam(object) public LTDescr setOnUpdateParam(object onUpdateParam) Parameters onUpdateParam object Returns LTDescr setOnUpdateRatio(Action<float, float>) public LTDescr setOnUpdateRatio(Action<float, float> onUpdate) Parameters onUpdate Action<float, float> Returns LTDescr setOnUpdateVector2(Action<Vector2>) public LTDescr setOnUpdateVector2(Action<Vector2> onUpdate) Parameters onUpdate Action<Vector2> Returns LTDescr setOnUpdateVector3(Action<Vector3>) public LTDescr setOnUpdateVector3(Action<Vector3> onUpdate) Parameters onUpdate Action<Vector3> Returns LTDescr setOrientToPath(bool) public LTDescr setOrientToPath(bool doesOrient) Parameters doesOrient bool Returns LTDescr setOrientToPath2d(bool) public LTDescr setOrientToPath2d(bool doesOrient2d) Parameters doesOrient2d bool Returns LTDescr setOvershoot(float) public LTDescr setOvershoot(float overshoot) Parameters overshoot float Returns LTDescr setPassed(float) public LTDescr setPassed(float passed) Parameters passed float Returns LTDescr setPath(LTBezierPath) public LTDescr setPath(LTBezierPath path) Parameters path LTBezierPath Returns LTDescr setPeriod(float) public LTDescr setPeriod(float period) Parameters period float Returns LTDescr setPoint(Vector3) public LTDescr setPoint(Vector3 point) Parameters point Vector3 Returns LTDescr setRect(LTRect) public LTDescr setRect(LTRect rect) Parameters rect LTRect Returns LTDescr setRect(Rect) public LTDescr setRect(Rect rect) Parameters rect Rect Returns LTDescr setRect(RectTransform) public LTDescr setRect(RectTransform rect) Parameters rect RectTransform Returns LTDescr setRecursive(bool) public LTDescr setRecursive(bool useRecursion) Parameters useRecursion bool Returns LTDescr setRepeat(int) public LTDescr setRepeat(int repeat) Parameters repeat int Returns LTDescr setRotate() public LTDescr setRotate() Returns LTDescr setRotateAround() public LTDescr setRotateAround() Returns LTDescr setRotateAroundLocal() public LTDescr setRotateAroundLocal() Returns LTDescr setRotateLocal() public LTDescr setRotateLocal() Returns LTDescr setRotateX() public LTDescr setRotateX() Returns LTDescr setRotateY() public LTDescr setRotateY() Returns LTDescr setRotateZ() public LTDescr setRotateZ() Returns LTDescr setScale() public LTDescr setScale() Returns LTDescr setScale(float) public LTDescr setScale(float scale) Parameters scale float Returns LTDescr setScaleX() public LTDescr setScaleX() Returns LTDescr setScaleY() public LTDescr setScaleY() Returns LTDescr setScaleZ() public LTDescr setScaleZ() Returns LTDescr setSpeed(float) public LTDescr setSpeed(float speed) Parameters speed float Returns LTDescr setSprites(Sprite[]) public LTDescr setSprites(UnityEngine.Sprite[] sprites) Parameters sprites Sprite[] Returns LTDescr setTarget(Transform) public LTDescr setTarget(Transform trans) Parameters trans Transform Returns LTDescr setTextAlpha() public LTDescr setTextAlpha() Returns LTDescr setTextColor() public LTDescr setTextColor() Returns LTDescr setTime(float) public LTDescr setTime(float time) Parameters time float Returns LTDescr setTo(Transform) public LTDescr setTo(Transform to) Parameters to Transform Returns LTDescr setTo(Vector3) public LTDescr setTo(Vector3 to) Parameters to Vector3 Returns LTDescr setUseEstimatedTime(bool) public LTDescr setUseEstimatedTime(bool useEstimatedTime) Parameters useEstimatedTime bool Returns LTDescr setUseFrames(bool) public LTDescr setUseFrames(bool useFrames) Parameters useFrames bool Returns LTDescr setUseManualTime(bool) public LTDescr setUseManualTime(bool useManualTime) Parameters useManualTime bool Returns LTDescr setValue3() public LTDescr setValue3() Returns LTDescr updateInternal() public bool updateInternal() Returns bool updateNow() public LTDescr updateNow() Returns LTDescr"
  },
  "api/Global.LTDescrOptional.html": {
    "href": "api/Global.LTDescrOptional.html",
    "title": "Class LTDescrOptional | Czasoport Documentation",
    "keywords": "Class LTDescrOptional Namespace Global public class LTDescrOptional Inheritance object LTDescrOptional Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields animationCurve public AnimationCurve animationCurve Field Value AnimationCurve color public Color color Field Value Color initFrameCount public int initFrameCount Field Value int Properties axis public Vector3 axis { get; set; } Property Value Vector3 lastVal public float lastVal { get; set; } Property Value float ltRect public LTRect ltRect { get; set; } Property Value LTRect onComplete public Action onComplete { get; set; } Property Value Action onCompleteObject public Action<object> onCompleteObject { get; set; } Property Value Action<object> onCompleteParam public object onCompleteParam { get; set; } Property Value object onStart public Action onStart { get; set; } Property Value Action onUpdateColor public Action<Color> onUpdateColor { get; set; } Property Value Action<Color> onUpdateColorObject public Action<Color, object> onUpdateColorObject { get; set; } Property Value Action<Color, object> onUpdateFloat public Action<float> onUpdateFloat { get; set; } Property Value Action<float> onUpdateFloatObject public Action<float, object> onUpdateFloatObject { get; set; } Property Value Action<float, object> onUpdateFloatRatio public Action<float, float> onUpdateFloatRatio { get; set; } Property Value Action<float, float> onUpdateParam public object onUpdateParam { get; set; } Property Value object onUpdateVector2 public Action<Vector2> onUpdateVector2 { get; set; } Property Value Action<Vector2> onUpdateVector3 public Action<Vector3> onUpdateVector3 { get; set; } Property Value Action<Vector3> onUpdateVector3Object public Action<Vector3, object> onUpdateVector3Object { get; set; } Property Value Action<Vector3, object> origRotation public Quaternion origRotation { get; set; } Property Value Quaternion path public LTBezierPath path { get; set; } Property Value LTBezierPath point public Vector3 point { get; set; } Property Value Vector3 spline public LTSpline spline { get; set; } Property Value LTSpline toTrans public Transform toTrans { get; set; } Property Value Transform Methods callOnUpdate(float, float) public void callOnUpdate(float val, float ratioPassed) Parameters val float ratioPassed float reset() public void reset()"
  },
  "api/Global.LTEvent.html": {
    "href": "api/Global.LTEvent.html",
    "title": "Class LTEvent | Czasoport Documentation",
    "keywords": "Class LTEvent Namespace Global public class LTEvent Inheritance object LTEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LTEvent(int, object) public LTEvent(int id, object data) Parameters id int data object Fields data public object data Field Value object id public int id Field Value int"
  },
  "api/Global.LTGUI.Element_Type.html": {
    "href": "api/Global.LTGUI.Element_Type.html",
    "title": "Enum LTGUI.Element_Type | Czasoport Documentation",
    "keywords": "Enum LTGUI.Element_Type Namespace Global public enum LTGUI.Element_Type Fields Label = 1 Texture = 0"
  },
  "api/Global.LTGUI.html": {
    "href": "api/Global.LTGUI.html",
    "title": "Class LTGUI | Czasoport Documentation",
    "keywords": "Class LTGUI Namespace Global public class LTGUI Inheritance object LTGUI Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields BUTTONS_MAX public static int BUTTONS_MAX Field Value int RECTS_PER_LEVEL public static int RECTS_PER_LEVEL Field Value int RECT_LEVELS public static int RECT_LEVELS Field Value int Methods checkOnScreen(Rect) public static bool checkOnScreen(Rect rect) Parameters rect Rect Returns bool checkWithinRect(Vector2, Rect) public static bool checkWithinRect(Vector2 vec2, Rect rect) Parameters vec2 Vector2 rect Rect Returns bool destroy(int) public static void destroy(int id) Parameters id int destroyAll(int) public static void destroyAll(int depth) Parameters depth int element(LTRect, int) public static LTRect element(LTRect rect, int depth) Parameters rect LTRect depth int Returns LTRect firstTouch() public static Vector2 firstTouch() Returns Vector2 hasNoOverlap(Rect, int) public static bool hasNoOverlap(Rect rect, int depth) Parameters rect Rect depth int Returns bool init() public static void init() initRectCheck() public static void initRectCheck() label(LTRect, string, int) public static LTRect label(LTRect rect, string label, int depth) Parameters rect LTRect label string depth int Returns LTRect label(Rect, string, int) public static LTRect label(Rect rect, string label, int depth) Parameters rect Rect label string depth int Returns LTRect pressedWithinRect(Rect) public static bool pressedWithinRect(Rect rect) Parameters rect Rect Returns bool reset() public static void reset() texture(LTRect, Texture, int) public static LTRect texture(LTRect rect, Texture texture, int depth) Parameters rect LTRect texture Texture depth int Returns LTRect texture(Rect, Texture, int) public static LTRect texture(Rect rect, Texture texture, int depth) Parameters rect Rect texture Texture depth int Returns LTRect update(int) public static void update(int updateLevel) Parameters updateLevel int"
  },
  "api/Global.LTRect.html": {
    "href": "api/Global.LTRect.html",
    "title": "Class LTRect | Czasoport Documentation",
    "keywords": "Class LTRect Namespace Global [Serializable] public class LTRect Inheritance object LTRect Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LTRect() public LTRect() LTRect(Rect) public LTRect(Rect rect) Parameters rect Rect LTRect(float, float, float, float) public LTRect(float x, float y, float width, float height) Parameters x float y float width float height float LTRect(float, float, float, float, float) public LTRect(float x, float y, float width, float height, float alpha) Parameters x float y float width float height float alpha float LTRect(float, float, float, float, float, float) public LTRect(float x, float y, float width, float height, float alpha, float rotation) Parameters x float y float width float height float alpha float rotation float Fields _rect public Rect _rect Field Value Rect alpha public float alpha Field Value float alphaEnabled public bool alphaEnabled Field Value bool color public Color color Field Value Color colorTouched public static bool colorTouched Field Value bool counter public int counter Field Value int fontScaleToFit public bool fontScaleToFit Field Value bool labelStr public string labelStr Field Value string margin public Vector2 margin Field Value Vector2 pivot public Vector2 pivot Field Value Vector2 relativeRect public Rect relativeRect Field Value Rect rotateEnabled public bool rotateEnabled Field Value bool rotateFinished public bool rotateFinished Field Value bool rotation public float rotation Field Value float sizeByHeight public bool sizeByHeight Field Value bool style public GUIStyle style Field Value GUIStyle texture public Texture texture Field Value Texture type public LTGUI.Element_Type type Field Value LTGUI.Element_Type useColor public bool useColor Field Value bool useSimpleScale public bool useSimpleScale Field Value bool Properties hasInitiliazed public bool hasInitiliazed { get; } Property Value bool height public float height { get; set; } Property Value float id public int id { get; } Property Value int rect public Rect rect { get; set; } Property Value Rect width public float width { get; set; } Property Value float x public float x { get; set; } Property Value float y public float y { get; set; } Property Value float Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. reset() public void reset() resetForRotation() public void resetForRotation() setAlpha(float) public LTRect setAlpha(float alpha) Parameters alpha float Returns LTRect setColor(Color) public LTRect setColor(Color color) Parameters color Color Returns LTRect setFontScaleToFit(bool) public LTRect setFontScaleToFit(bool fontScaleToFit) Parameters fontScaleToFit bool Returns LTRect setId(int, int) public void setId(int id, int counter) Parameters id int counter int setLabel(string) public LTRect setLabel(string str) Parameters str string Returns LTRect setSizeByHeight(bool) public LTRect setSizeByHeight(bool sizeByHeight) Parameters sizeByHeight bool Returns LTRect setStyle(GUIStyle) public LTRect setStyle(GUIStyle style) Parameters style GUIStyle Returns LTRect setUseSimpleScale(bool) public LTRect setUseSimpleScale(bool useSimpleScale) Parameters useSimpleScale bool Returns LTRect setUseSimpleScale(bool, Rect) public LTRect setUseSimpleScale(bool useSimpleScale, Rect relativeRect) Parameters useSimpleScale bool relativeRect Rect Returns LTRect"
  },
  "api/Global.LTSeq.html": {
    "href": "api/Global.LTSeq.html",
    "title": "Class LTSeq | Czasoport Documentation",
    "keywords": "Class LTSeq Namespace Global public class LTSeq Inheritance object LTSeq Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields counter public uint counter Field Value uint current public LTSeq current Field Value LTSeq previous public LTSeq previous Field Value LTSeq timeScale public float timeScale Field Value float toggle public bool toggle Field Value bool totalDelay public float totalDelay Field Value float tween public LTDescr tween Field Value LTDescr Properties id public int id { get; } Property Value int Methods append(GameObject, Action) public LTSeq append(GameObject gameObject, Action callback) Parameters gameObject GameObject callback Action Returns LTSeq append(GameObject, Action<object>, object) public LTSeq append(GameObject gameObject, Action<object> callback, object obj) Parameters gameObject GameObject callback Action<object> obj object Returns LTSeq append(LTDescr) public LTSeq append(LTDescr tween) Parameters tween LTDescr Returns LTSeq append(Action) public LTSeq append(Action callback) Parameters callback Action Returns LTSeq append(Action<object>, object) public LTSeq append(Action<object> callback, object obj) Parameters callback Action<object> obj object Returns LTSeq append(float) public LTSeq append(float delay) Parameters delay float Returns LTSeq init(uint, uint) public void init(uint id, uint global_counter) Parameters id uint global_counter uint insert(LTDescr) public LTSeq insert(LTDescr tween) Parameters tween LTDescr Returns LTSeq reset() public void reset() reverse() public LTSeq reverse() Returns LTSeq setScale(float) public LTSeq setScale(float timeScale) Parameters timeScale float Returns LTSeq"
  },
  "api/Global.LTSpline.html": {
    "href": "api/Global.LTSpline.html",
    "title": "Class LTSpline | Czasoport Documentation",
    "keywords": "Class LTSpline Namespace Global Move a GameObject to a certain location [Serializable] public class LTSpline Inheritance object LTSpline Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LTSpline(Vector3[]) public LTSpline(Vector3[] pts) Parameters pts Vector3[] LTSpline(Vector3[], bool) public LTSpline(Vector3[] pts, bool constantSpeed) Parameters pts Vector3[] constantSpeed bool Fields DISTANCE_COUNT public static int DISTANCE_COUNT Field Value int SUBLINE_COUNT public static int SUBLINE_COUNT Field Value int constantSpeed public bool constantSpeed Field Value bool distance public float distance Field Value float orientToPath public bool orientToPath Field Value bool orientToPath2d public bool orientToPath2d Field Value bool pts public Vector3[] pts Field Value Vector3[] ptsAdj [NonSerialized] public Vector3[] ptsAdj Field Value Vector3[] ptsAdjLength public int ptsAdjLength Field Value int Methods drawGizmo(Color) public void drawGizmo(Color color) Parameters color Color drawGizmo(Transform[], Color) public static void drawGizmo(Transform[] arr, Color color) Parameters arr Transform[] color Color drawLine(Transform[], float, Color) public static void drawLine(Transform[] arr, float width, Color color) Parameters arr Transform[] width float color Color drawLinesGLLines(Material, Color, float) public void drawLinesGLLines(Material outlineMaterial, Color color, float width) Parameters outlineMaterial Material color Color width float generateVectors() public Vector3[] generateVectors() Returns Vector3[] gizmoDraw(float) public void gizmoDraw(float t = -1) Parameters t float interp(float) public Vector3 interp(float t) Parameters t float Returns Vector3 map(float) public Vector3 map(float u) Parameters u float Returns Vector3 place(Transform, float) Move a GameObject to a certain location public void place(Transform transform, float ratio) Parameters transform Transform ratio float place(Transform, float, Vector3) Move a GameObject to a certain location public void place(Transform transform, float ratio, Vector3 worldUp) Parameters transform Transform ratio float worldUp Vector3 place2d(Transform, float) public void place2d(Transform transform, float ratio) Parameters transform Transform ratio float placeLocal(Transform, float) Move a GameObject to a certain location public void placeLocal(Transform transform, float ratio) Parameters transform Transform ratio float placeLocal(Transform, float, Vector3) Move a GameObject to a certain location public void placeLocal(Transform transform, float ratio, Vector3 worldUp) Parameters transform Transform ratio float worldUp Vector3 placeLocal2d(Transform, float) public void placeLocal2d(Transform transform, float ratio) Parameters transform Transform ratio float point(float) Move a GameObject to a certain location public Vector3 point(float ratio) Parameters ratio float Returns Vector3 ratioAtPoint(Vector3) Move a GameObject to a certain location public float ratioAtPoint(Vector3 pt) Parameters pt Vector3 Returns float"
  },
  "api/Global.LTUtility.html": {
    "href": "api/Global.LTUtility.html",
    "title": "Class LTUtility | Czasoport Documentation",
    "keywords": "Class LTUtility Namespace Global public class LTUtility Inheritance object LTUtility Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods reverse(Vector3[]) public static Vector3[] reverse(Vector3[] arr) Parameters arr Vector3[] Returns Vector3[]"
  },
  "api/Global.LeanAudio.html": {
    "href": "api/Global.LeanAudio.html",
    "title": "Class LeanAudio | Czasoport Documentation",
    "keywords": "Class LeanAudio Namespace Global public class LeanAudio Inheritance object LeanAudio Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields MIN_FREQEUNCY_PERIOD public static float MIN_FREQEUNCY_PERIOD Field Value float PROCESSING_ITERATIONS_MAX public static int PROCESSING_ITERATIONS_MAX Field Value int generatedWaveDistances public static float[] generatedWaveDistances Field Value float[] generatedWaveDistancesCount public static int generatedWaveDistancesCount Field Value int Methods createAudio(AnimationCurve, AnimationCurve, LeanAudioOptions) public static AudioClip createAudio(AnimationCurve volume, AnimationCurve frequency, LeanAudioOptions options = null) Parameters volume AnimationCurve frequency AnimationCurve options LeanAudioOptions Returns AudioClip createAudioStream(AnimationCurve, AnimationCurve, LeanAudioOptions) public static LeanAudioStream createAudioStream(AnimationCurve volume, AnimationCurve frequency, LeanAudioOptions options = null) Parameters volume AnimationCurve frequency AnimationCurve options LeanAudioOptions Returns LeanAudioStream generateAudioFromCurve(AnimationCurve, int) public static AudioClip generateAudioFromCurve(AnimationCurve curve, int frequencyRate = 44100) Parameters curve AnimationCurve frequencyRate int Returns AudioClip options() public static LeanAudioOptions options() Returns LeanAudioOptions play(AudioClip) public static AudioSource play(AudioClip audio) Parameters audio AudioClip Returns AudioSource play(AudioClip, float) public static AudioSource play(AudioClip audio, float volume) Parameters audio AudioClip volume float Returns AudioSource play(AudioClip, Vector3) public static AudioSource play(AudioClip audio, Vector3 pos) Parameters audio AudioClip pos Vector3 Returns AudioSource play(AudioClip, Vector3, float) public static AudioSource play(AudioClip audio, Vector3 pos, float volume) Parameters audio AudioClip pos Vector3 volume float Returns AudioSource playClipAt(AudioClip, Vector3) public static AudioSource playClipAt(AudioClip clip, Vector3 pos) Parameters clip AudioClip pos Vector3 Returns AudioSource printOutAudioClip(AudioClip, ref AnimationCurve, float) public static void printOutAudioClip(AudioClip audioClip, ref AnimationCurve curve, float scaleX = 1) Parameters audioClip AudioClip curve AnimationCurve scaleX float"
  },
  "api/Global.LeanAudioOptions.LeanAudioWaveStyle.html": {
    "href": "api/Global.LeanAudioOptions.LeanAudioWaveStyle.html",
    "title": "Enum LeanAudioOptions.LeanAudioWaveStyle | Czasoport Documentation",
    "keywords": "Enum LeanAudioOptions.LeanAudioWaveStyle Namespace Global public enum LeanAudioOptions.LeanAudioWaveStyle Fields Noise = 3 Sawtooth = 2 Sine = 0 Square = 1"
  },
  "api/Global.LeanAudioOptions.html": {
    "href": "api/Global.LeanAudioOptions.html",
    "title": "Class LeanAudioOptions | Czasoport Documentation",
    "keywords": "Class LeanAudioOptions Namespace Global public class LeanAudioOptions Inheritance object LeanAudioOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LeanAudioOptions() public LeanAudioOptions() Fields frequencyRate public int frequencyRate Field Value int modulation public Vector3[] modulation Field Value Vector3[] stream public LeanAudioStream stream Field Value LeanAudioStream useSetData public bool useSetData Field Value bool vibrato public Vector3[] vibrato Field Value Vector3[] waveNoiseInfluence public float waveNoiseInfluence Field Value float waveNoiseScale public float waveNoiseScale Field Value float waveStyle public LeanAudioOptions.LeanAudioWaveStyle waveStyle Field Value LeanAudioOptions.LeanAudioWaveStyle Methods setFrequency(int) public LeanAudioOptions setFrequency(int frequencyRate) Parameters frequencyRate int Returns LeanAudioOptions setVibrato(Vector3[]) public LeanAudioOptions setVibrato(Vector3[] vibrato) Parameters vibrato Vector3[] Returns LeanAudioOptions setWaveNoise() public LeanAudioOptions setWaveNoise() Returns LeanAudioOptions setWaveNoiseInfluence(float) public LeanAudioOptions setWaveNoiseInfluence(float influence) Parameters influence float Returns LeanAudioOptions setWaveNoiseScale(float) public LeanAudioOptions setWaveNoiseScale(float waveScale) Parameters waveScale float Returns LeanAudioOptions setWaveSawtooth() public LeanAudioOptions setWaveSawtooth() Returns LeanAudioOptions setWaveSine() public LeanAudioOptions setWaveSine() Returns LeanAudioOptions setWaveSquare() public LeanAudioOptions setWaveSquare() Returns LeanAudioOptions setWaveStyle(LeanAudioWaveStyle) public LeanAudioOptions setWaveStyle(LeanAudioOptions.LeanAudioWaveStyle style) Parameters style LeanAudioOptions.LeanAudioWaveStyle Returns LeanAudioOptions"
  },
  "api/Global.LeanAudioStream.html": {
    "href": "api/Global.LeanAudioStream.html",
    "title": "Class LeanAudioStream | Czasoport Documentation",
    "keywords": "Class LeanAudioStream Namespace Global public class LeanAudioStream Inheritance object LeanAudioStream Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LeanAudioStream(float[]) public LeanAudioStream(float[] audioArr) Parameters audioArr float[] Fields audioArr public float[] audioArr Field Value float[] audioClip public AudioClip audioClip Field Value AudioClip position public int position Field Value int Methods OnAudioRead(float[]) public void OnAudioRead(float[] data) Parameters data float[] OnAudioSetPosition(int) public void OnAudioSetPosition(int newPosition) Parameters newPosition int"
  },
  "api/Global.LeanProp.html": {
    "href": "api/Global.LeanProp.html",
    "title": "Enum LeanProp | Czasoport Documentation",
    "keywords": "Enum LeanProp Namespace Global public enum LeanProp Fields color = 9 localPosition = 1 localX = 5 localY = 6 localZ = 7 position = 0 scale = 8 x = 2 y = 3 z = 4"
  },
  "api/Global.LeanSmooth.html": {
    "href": "api/Global.LeanSmooth.html",
    "title": "Class LeanSmooth | Czasoport Documentation",
    "keywords": "Class LeanSmooth Namespace Global public class LeanSmooth Inheritance object LeanSmooth Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods bounceOut(Color, Color, ref Color, float, float, float, float, float, float) public static Color bounceOut(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1, float friction = 2, float accelRate = 0.5, float hitDamping = 0.9) Parameters current Color target Color currentVelocity Color smoothTime float maxSpeed float deltaTime float friction float accelRate float hitDamping float Returns Color bounceOut(float, float, ref float, float, float, float, float, float, float) Moves one value towards another (with an ease that bounces back some when it reaches it's destination) public static float bounceOut(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1, float friction = 2, float accelRate = 0.5, float hitDamping = 0.9) Parameters current float target float currentVelocity float smoothTime float maxSpeed float deltaTime float friction float accelRate float hitDamping float Returns float bounceOut(Vector3, Vector3, ref Vector3, float, float, float, float, float, float) Moves one value towards another (with an ease that bounces back some when it reaches it's destination) public static Vector3 bounceOut(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1, float friction = 2, float accelRate = 0.5, float hitDamping = 0.9) Parameters current Vector3 target Vector3 currentVelocity Vector3 smoothTime float maxSpeed float deltaTime float friction float accelRate float hitDamping float Returns Vector3 damp(Color, Color, ref Color, float, float, float) public static Color damp(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1) Parameters current Color target Color currentVelocity Color smoothTime float maxSpeed float deltaTime float Returns Color damp(float, float, ref float, float, float, float) Moves one value towards another (eases in and out to destination with no overshoot) public static float damp(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1) Parameters current float target float currentVelocity float smoothTime float maxSpeed float deltaTime float Returns float damp(Vector3, Vector3, ref Vector3, float, float, float) Moves one value towards another (eases in and out to destination with no overshoot) public static Vector3 damp(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1) Parameters current Vector3 target Vector3 currentVelocity Vector3 smoothTime float maxSpeed float deltaTime float Returns Vector3 linear(Color, Color, float) public static Color linear(Color current, Color target, float moveSpeed) Parameters current Color target Color moveSpeed float Returns Color linear(float, float, float, float) Moves one value towards another (at a constant speed) public static float linear(float current, float target, float moveSpeed, float deltaTime = -1) Parameters current float target float moveSpeed float deltaTime float Returns float linear(Vector3, Vector3, float, float) Moves one value towards another (at a constant speed) public static Vector3 linear(Vector3 current, Vector3 target, float moveSpeed, float deltaTime = -1) Parameters current Vector3 target Vector3 moveSpeed float deltaTime float Returns Vector3 spring(Color, Color, ref Color, float, float, float, float, float) public static Color spring(Color current, Color target, ref Color currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1, float friction = 2, float accelRate = 0.5) Parameters current Color target Color currentVelocity Color smoothTime float maxSpeed float deltaTime float friction float accelRate float Returns Color spring(float, float, ref float, float, float, float, float, float) Moves one value towards another (eases in and out to destination with possible overshoot bounciness) public static float spring(float current, float target, ref float currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1, float friction = 2, float accelRate = 0.5) Parameters current float target float currentVelocity float smoothTime float maxSpeed float deltaTime float friction float accelRate float Returns float spring(Vector3, Vector3, ref Vector3, float, float, float, float, float) Moves one value towards another (eases in and out to destination with possible overshoot bounciness) public static Vector3 spring(Vector3 current, Vector3 target, ref Vector3 currentVelocity, float smoothTime, float maxSpeed = -1, float deltaTime = -1, float friction = 2, float accelRate = 0.5) Parameters current Vector3 target Vector3 currentVelocity Vector3 smoothTime float maxSpeed float deltaTime float friction float accelRate float Returns Vector3"
  },
  "api/Global.LeanTest.html": {
    "href": "api/Global.LeanTest.html",
    "title": "Class LeanTest | Czasoport Documentation",
    "keywords": "Class LeanTest Namespace Global public class LeanTest Inheritance object LeanTest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields expected public static int expected Field Value int testsFinished public static bool testsFinished Field Value bool timeout public static float timeout Field Value float timeoutStarted public static bool timeoutStarted Field Value bool Methods debug(string, bool, string) public static void debug(string name, bool didPass, string failExplaination = null) Parameters name string didPass bool failExplaination string expect(bool, string, string) public static void expect(bool didPass, string definition, string failExplaination = null) Parameters didPass bool definition string failExplaination string formatB(string) public static string formatB(string str) Parameters str string Returns string formatBC(string, string) public static string formatBC(string str, string color) Parameters str string color string Returns string formatC(string, string) public static string formatC(string str, string color) Parameters str string color string Returns string overview() public static void overview() padRight(int) public static string padRight(int len) Parameters len int Returns string printOutLength(string) public static float printOutLength(string str) Parameters str string Returns float"
  },
  "api/Global.LeanTester.html": {
    "href": "api/Global.LeanTester.html",
    "title": "Class LeanTester | Czasoport Documentation",
    "keywords": "Class LeanTester Namespace Global public class LeanTester : MonoBehaviour Inheritance object LeanTester Fields timeout public float timeout Field Value float Methods Start() public void Start()"
  },
  "api/Global.LeanTween.html": {
    "href": "api/Global.LeanTween.html",
    "title": "Class LeanTween | Czasoport Documentation",
    "keywords": "Class LeanTween Namespace Global public class LeanTween : MonoBehaviour Inheritance object LeanTween Fields EVENTS_MAX public static int EVENTS_MAX Field Value int LISTENERS_MAX public static int LISTENERS_MAX Field Value int PI_DIV2 public static float PI_DIV2 Field Value float d public static LTDescr d Field Value LTDescr dtActual public static float dtActual Field Value float dtEstimated public static float dtEstimated Field Value float dtManual public static float dtManual Field Value float punch public static AnimationCurve punch Field Value AnimationCurve shake public static AnimationCurve shake Field Value AnimationCurve startSearch public static int startSearch Field Value int tau public static float tau Field Value float throwErrors public static bool throwErrors Field Value bool Properties maxSearch public static int maxSearch { get; } Property Value int maxSimulataneousTweens public static int maxSimulataneousTweens { get; } Property Value int tweenEmpty public static GameObject tweenEmpty { get; } Property Value GameObject tweensRunning Find out how many tweens you have animating at a given time public static int tweensRunning { get; } Property Value int Methods OnLevelWasLoaded(int) public void OnLevelWasLoaded(int lvl) Parameters lvl int Update() public void Update() add(Vector3[], Vector3) public static Vector3[] add(Vector3[] a, Vector3 b) Parameters a Vector3[] b Vector3 Returns Vector3[] addListener(GameObject, int, Action<LTEvent>) public static void addListener(GameObject caller, int eventId, Action<LTEvent> callback) Parameters caller GameObject eventId int callback Action<LTEvent> addListener(int, Action<LTEvent>) public static void addListener(int eventId, Action<LTEvent> callback) Parameters eventId int callback Action<LTEvent> alpha(GameObject, float, float) Fade a gameobject's material to a certain alpha value. public static LTDescr alpha(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr alpha(LTRect, float, float) Fade a GUI Object public static LTDescr alpha(LTRect ltRect, float to, float time) Parameters ltRect LTRect to float time float Returns LTDescr alpha(RectTransform, float, float) Alpha an Image Component attached to a RectTransform (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr alpha(RectTransform rectTrans, float to, float time) Parameters rectTrans RectTransform to float time float Returns LTDescr alphaCanvas(CanvasGroup, float, float) Fade a Unity UI Canvas Group public static LTDescr alphaCanvas(CanvasGroup canvasGroup, float to, float time) Parameters canvasGroup CanvasGroup to float time float Returns LTDescr alphaText(RectTransform, float, float) public static LTDescr alphaText(RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr alphaVertex(GameObject, float, float) This works by tweening the vertex colors directly public static LTDescr alphaVertex(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr cancel(GameObject) Cancel all tweens that are currently targeting the gameObject public static void cancel(GameObject gameObject) Parameters gameObject GameObject cancel(GameObject, bool) public static void cancel(GameObject gameObject, bool callOnComplete) Parameters gameObject GameObject callOnComplete bool cancel(GameObject, int, bool) public static void cancel(GameObject gameObject, int uniqueId, bool callOnComplete = false) Parameters gameObject GameObject uniqueId int callOnComplete bool cancel(LTRect, int) public static void cancel(LTRect ltRect, int uniqueId) Parameters ltRect LTRect uniqueId int cancel(RectTransform) public static void cancel(RectTransform rect) Parameters rect RectTransform cancel(int) Cancel a specific tween with the provided id public static void cancel(int uniqueId) Parameters uniqueId int cancel(int, bool) public static void cancel(int uniqueId, bool callOnComplete) Parameters uniqueId int callOnComplete bool cancelAll() Cancels all tweens public static void cancelAll() cancelAll(bool) public static void cancelAll(bool callComplete) Parameters callComplete bool clerp(float, float, float) public static float clerp(float start, float end, float val) Parameters start float end float val float Returns float closestRot(float, float) public static float closestRot(float from, float to) Parameters from float to float Returns float color(GameObject, Color, float) Change a gameobject's material to a certain color value public static LTDescr color(GameObject gameObject, Color to, float time) Parameters gameObject GameObject to Color time float Returns LTDescr color(RectTransform, Color, float) Change the Color of an Image Component attached to a RectTransform (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr color(RectTransform rectTrans, Color to, float time) Parameters rectTrans RectTransform to Color time float Returns LTDescr colorText(RectTransform, Color, float) public static LTDescr colorText(RectTransform rectTransform, Color to, float time) Parameters rectTransform RectTransform to Color time float Returns LTDescr delayedCall(GameObject, float, Action) public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action callback) Parameters gameObject GameObject delayTime float callback Action Returns LTDescr delayedCall(GameObject, float, Action<object>) public static LTDescr delayedCall(GameObject gameObject, float delayTime, Action<object> callback) Parameters gameObject GameObject delayTime float callback Action<object> Returns LTDescr delayedCall(float, Action) Call a method after a specified amount of time public static LTDescr delayedCall(float delayTime, Action callback) Parameters delayTime float callback Action Returns LTDescr delayedCall(float, Action<object>) public static LTDescr delayedCall(float delayTime, Action<object> callback) Parameters delayTime float callback Action<object> Returns LTDescr delayedSound(AudioClip, Vector3, float) public static LTDescr delayedSound(AudioClip audio, Vector3 pos, float volume) Parameters audio AudioClip pos Vector3 volume float Returns LTDescr delayedSound(GameObject, AudioClip, Vector3, float) public static LTDescr delayedSound(GameObject gameObject, AudioClip audio, Vector3 pos, float volume) Parameters gameObject GameObject audio AudioClip pos Vector3 volume float Returns LTDescr descr(int) Retrieve a tweens LTDescr object to modify public static LTDescr descr(int uniqueId) Parameters uniqueId int Returns LTDescr description(int) public static LTDescr description(int uniqueId) Parameters uniqueId int Returns LTDescr descriptions(GameObject) Retrieve a tweens LTDescr object(s) to modify public static LTDescr[] descriptions(GameObject gameObject = null) Parameters gameObject GameObject Returns LTDescr[] destroyAfter(LTRect, float) public static LTDescr destroyAfter(LTRect rect, float delayTime) Parameters rect LTRect delayTime float Returns LTDescr dispatchEvent(int) public static void dispatchEvent(int eventId) Parameters eventId int dispatchEvent(int, object) public static void dispatchEvent(int eventId, object data) Parameters eventId int data object drawBezierPath(Vector3, Vector3, Vector3, Vector3, float, Transform) public static void drawBezierPath(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float arrowSize = 0, Transform arrowTransform = null) Parameters a Vector3 b Vector3 c Vector3 d Vector3 arrowSize float arrowTransform Transform easeInBack(float, float, float, float) public static float easeInBack(float start, float end, float val, float overshoot = 1) Parameters start float end float val float overshoot float Returns float easeInBounce(float, float, float) public static float easeInBounce(float start, float end, float val) Parameters start float end float val float Returns float easeInCirc(float, float, float) public static float easeInCirc(float start, float end, float val) Parameters start float end float val float Returns float easeInCubic(float, float, float) public static float easeInCubic(float start, float end, float val) Parameters start float end float val float Returns float easeInElastic(float, float, float, float, float) public static float easeInElastic(float start, float end, float val, float overshoot = 1, float period = 0.3) Parameters start float end float val float overshoot float period float Returns float easeInExpo(float, float, float) public static float easeInExpo(float start, float end, float val) Parameters start float end float val float Returns float easeInOutBack(float, float, float, float) public static float easeInOutBack(float start, float end, float val, float overshoot = 1) Parameters start float end float val float overshoot float Returns float easeInOutBounce(float, float, float) public static float easeInOutBounce(float start, float end, float val) Parameters start float end float val float Returns float easeInOutCirc(float, float, float) public static float easeInOutCirc(float start, float end, float val) Parameters start float end float val float Returns float easeInOutCubic(float, float, float) public static float easeInOutCubic(float start, float end, float val) Parameters start float end float val float Returns float easeInOutElastic(float, float, float, float, float) public static float easeInOutElastic(float start, float end, float val, float overshoot = 1, float period = 0.3) Parameters start float end float val float overshoot float period float Returns float easeInOutExpo(float, float, float) public static float easeInOutExpo(float start, float end, float val) Parameters start float end float val float Returns float easeInOutQuad(float, float, float) public static float easeInOutQuad(float start, float end, float val) Parameters start float end float val float Returns float easeInOutQuadOpt(float, float, float) public static float easeInOutQuadOpt(float start, float diff, float ratioPassed) Parameters start float diff float ratioPassed float Returns float easeInOutQuadOpt(Vector3, Vector3, float) public static Vector3 easeInOutQuadOpt(Vector3 start, Vector3 diff, float ratioPassed) Parameters start Vector3 diff Vector3 ratioPassed float Returns Vector3 easeInOutQuadOpt2(float, float, float, float) public static float easeInOutQuadOpt2(float start, float diffBy2, float val, float val2) Parameters start float diffBy2 float val float val2 float Returns float easeInOutQuart(float, float, float) public static float easeInOutQuart(float start, float end, float val) Parameters start float end float val float Returns float easeInOutQuint(float, float, float) public static float easeInOutQuint(float start, float end, float val) Parameters start float end float val float Returns float easeInOutSine(float, float, float) public static float easeInOutSine(float start, float end, float val) Parameters start float end float val float Returns float easeInQuad(float, float, float) public static float easeInQuad(float start, float end, float val) Parameters start float end float val float Returns float easeInQuadOpt(float, float, float) public static float easeInQuadOpt(float start, float diff, float ratioPassed) Parameters start float diff float ratioPassed float Returns float easeInQuart(float, float, float) public static float easeInQuart(float start, float end, float val) Parameters start float end float val float Returns float easeInQuint(float, float, float) public static float easeInQuint(float start, float end, float val) Parameters start float end float val float Returns float easeInSine(float, float, float) public static float easeInSine(float start, float end, float val) Parameters start float end float val float Returns float easeOutBack(float, float, float, float) public static float easeOutBack(float start, float end, float val, float overshoot = 1) Parameters start float end float val float overshoot float Returns float easeOutBounce(float, float, float) public static float easeOutBounce(float start, float end, float val) Parameters start float end float val float Returns float easeOutCirc(float, float, float) public static float easeOutCirc(float start, float end, float val) Parameters start float end float val float Returns float easeOutCubic(float, float, float) public static float easeOutCubic(float start, float end, float val) Parameters start float end float val float Returns float easeOutElastic(float, float, float, float, float) public static float easeOutElastic(float start, float end, float val, float overshoot = 1, float period = 0.3) Parameters start float end float val float overshoot float period float Returns float easeOutExpo(float, float, float) public static float easeOutExpo(float start, float end, float val) Parameters start float end float val float Returns float easeOutQuad(float, float, float) public static float easeOutQuad(float start, float end, float val) Parameters start float end float val float Returns float easeOutQuadOpt(float, float, float) public static float easeOutQuadOpt(float start, float diff, float ratioPassed) Parameters start float diff float ratioPassed float Returns float easeOutQuart(float, float, float) public static float easeOutQuart(float start, float end, float val) Parameters start float end float val float Returns float easeOutQuint(float, float, float) public static float easeOutQuint(float start, float end, float val) Parameters start float end float val float Returns float easeOutSine(float, float, float) public static float easeOutSine(float start, float end, float val) Parameters start float end float val float Returns float followBounceOut(Transform, Transform, LeanProp, float, float, float, float, float) Follow another transforms position/scale/color (with an ease that bounces back some when it reaches it's destination) public static LTDescr followBounceOut(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1, float friction = 2, float accelRate = 0.5, float hitDamping = 0.9) Parameters trans Transform target Transform prop LeanProp smoothTime float maxSpeed float friction float accelRate float hitDamping float Returns LTDescr followDamp(Transform, Transform, LeanProp, float, float) Follow another transforms position/scale/color with a damp transition (eases in and out to destination with no overshoot) public static LTDescr followDamp(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1) Parameters trans Transform target Transform prop LeanProp smoothTime float maxSpeed float Returns LTDescr followLinear(Transform, Transform, LeanProp, float) Follow another transforms position/scale/color with a constant speed public static LTDescr followLinear(Transform trans, Transform target, LeanProp prop, float moveSpeed) Parameters trans Transform target Transform prop LeanProp moveSpeed float Returns LTDescr followSpring(Transform, Transform, LeanProp, float, float, float, float) Follow another transforms position/scale/color with a springy transition (eases in and out to destination with possible overshoot bounciness) public static LTDescr followSpring(Transform trans, Transform target, LeanProp prop, float smoothTime, float maxSpeed = -1, float friction = 2, float accelRate = 0.5) Parameters trans Transform target Transform prop LeanProp smoothTime float maxSpeed float friction float accelRate float Returns LTDescr init() public static void init() init(int) This line is optional. Here you can specify the maximum number of tweens you will use (the default is 400). This must be called before any use of LeanTween is made for it to be effective. public static void init(int maxSimultaneousTweens) Parameters maxSimultaneousTweens int init(int, int) public static void init(int maxSimultaneousTweens, int maxSimultaneousSequences) Parameters maxSimultaneousTweens int maxSimultaneousSequences int isPaused(GameObject) Test whether or not a tween is paused on a GameObject public static bool isPaused(GameObject gameObject = null) Parameters gameObject GameObject Returns bool isPaused(RectTransform) public static bool isPaused(RectTransform rect) Parameters rect RectTransform Returns bool isPaused(int) Test whether or not a tween is paused or not public static bool isPaused(int uniqueId) Parameters uniqueId int Returns bool isTweening(GameObject) Test whether or not a tween is active on a GameObject public static bool isTweening(GameObject gameObject = null) Parameters gameObject GameObject Returns bool isTweening(LTRect) public static bool isTweening(LTRect ltRect) Parameters ltRect LTRect Returns bool isTweening(RectTransform) public static bool isTweening(RectTransform rect) Parameters rect RectTransform Returns bool isTweening(int) Test whether or not a tween is active or not public static bool isTweening(int uniqueId) Parameters uniqueId int Returns bool linear(float, float, float) public static float linear(float start, float end, float val) Parameters start float end float val float Returns float logError(string) public static object logError(string error) Parameters error string Returns object move(GameObject, LTBezierPath, float) public static LTDescr move(GameObject gameObject, LTBezierPath to, float time) Parameters gameObject GameObject to LTBezierPath time float Returns LTDescr move(GameObject, LTSpline, float) public static LTDescr move(GameObject gameObject, LTSpline to, float time) Parameters gameObject GameObject to LTSpline time float Returns LTDescr move(GameObject, Transform, float) Move a GameObject to another transform public static LTDescr move(GameObject gameObject, Transform to, float time) Parameters gameObject GameObject to Transform time float Returns LTDescr move(GameObject, Vector2, float) public static LTDescr move(GameObject gameObject, Vector2 to, float time) Parameters gameObject GameObject to Vector2 time float Returns LTDescr move(GameObject, Vector3, float) Move a GameObject to a certain location public static LTDescr move(GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr move(GameObject, Vector3[], float) Move a GameObject along a set of bezier curves public static LTDescr move(GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr move(LTRect, Vector2, float) Move a GUI Element to a certain location public static LTDescr move(LTRect ltRect, Vector2 to, float time) Parameters ltRect LTRect to Vector2 time float Returns LTDescr move(RectTransform, Vector3, float) Move a RectTransform object (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr move(RectTransform rectTrans, Vector3 to, float time) Parameters rectTrans RectTransform to Vector3 time float Returns LTDescr moveLocal(GameObject, LTBezierPath, float) public static LTDescr moveLocal(GameObject gameObject, LTBezierPath to, float time) Parameters gameObject GameObject to LTBezierPath time float Returns LTDescr moveLocal(GameObject, LTSpline, float) public static LTDescr moveLocal(GameObject gameObject, LTSpline to, float time) Parameters gameObject GameObject to LTSpline time float Returns LTDescr moveLocal(GameObject, Vector3, float) Move a GameObject to a certain location relative to the parent transform. public static LTDescr moveLocal(GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr moveLocal(GameObject, Vector3[], float) Move a GameObject along a set of bezier curves, in local space public static LTDescr moveLocal(GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr moveLocalX(GameObject, float, float) public static LTDescr moveLocalX(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr moveLocalY(GameObject, float, float) public static LTDescr moveLocalY(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr moveLocalZ(GameObject, float, float) public static LTDescr moveLocalZ(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr moveMargin(LTRect, Vector2, float) public static LTDescr moveMargin(LTRect ltRect, Vector2 to, float time) Parameters ltRect LTRect to Vector2 time float Returns LTDescr moveSpline(GameObject, LTSpline, float) Move a GameObject through a set of points public static LTDescr moveSpline(GameObject gameObject, LTSpline to, float time) Parameters gameObject GameObject to LTSpline time float Returns LTDescr moveSpline(GameObject, Vector3[], float) Move a GameObject through a set of points public static LTDescr moveSpline(GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr moveSplineLocal(GameObject, Vector3[], float) Move a GameObject through a set of points, in local space public static LTDescr moveSplineLocal(GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr moveX(GameObject, float, float) Move a GameObject along the x-axis public static LTDescr moveX(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr moveX(RectTransform, float, float) Move a RectTransform object affecting x-axis only (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr moveX(RectTransform rectTrans, float to, float time) Parameters rectTrans RectTransform to float time float Returns LTDescr moveY(GameObject, float, float) Move a GameObject along the y-axis public static LTDescr moveY(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr moveY(RectTransform, float, float) Move a RectTransform object affecting y-axis only (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr moveY(RectTransform rectTrans, float to, float time) Parameters rectTrans RectTransform to float time float Returns LTDescr moveZ(GameObject, float, float) Move a GameObject along the z-axis public static LTDescr moveZ(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr moveZ(RectTransform, float, float) Move a RectTransform object affecting z-axis only (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...)n public static LTDescr moveZ(RectTransform rectTrans, float to, float time) Parameters rectTrans RectTransform to float time float Returns LTDescr options() public static LTDescr options() Returns LTDescr options(LTDescr) public static LTDescr options(LTDescr seed) Parameters seed LTDescr Returns LTDescr pause(GameObject) Pause all tweens for a GameObject public static void pause(GameObject gameObject) Parameters gameObject GameObject pause(GameObject, int) [Obsolete(\"Use 'pause( id )' instead\")] public static void pause(GameObject gameObject, int uniqueId) Parameters gameObject GameObject uniqueId int pause(int) Pause all tweens for a GameObject public static void pause(int uniqueId) Parameters uniqueId int pauseAll() Pause all active tweens public static void pauseAll() play(RectTransform, Sprite[]) Play a sequence of images on a Unity UI Object public static LTDescr play(RectTransform rectTransform, UnityEngine.Sprite[] sprites) Parameters rectTransform RectTransform sprites Sprite[] Returns LTDescr removeListener(GameObject, int, Action<LTEvent>) public static bool removeListener(GameObject caller, int eventId, Action<LTEvent> callback) Parameters caller GameObject eventId int callback Action<LTEvent> Returns bool removeListener(int) public static bool removeListener(int eventId) Parameters eventId int Returns bool removeListener(int, Action<LTEvent>) public static bool removeListener(int eventId, Action<LTEvent> callback) Parameters eventId int callback Action<LTEvent> Returns bool removeTween(int) public static void removeTween(int i) Parameters i int removeTween(int, int) public static void removeTween(int i, int uniqueId) Parameters i int uniqueId int reset() public static void reset() resume(GameObject) Resume all the tweens on a GameObject public static void resume(GameObject gameObject) Parameters gameObject GameObject resume(GameObject, int) [Obsolete(\"Use 'resume( id )' instead\")] public static void resume(GameObject gameObject, int uniqueId) Parameters gameObject GameObject uniqueId int resume(int) Resume a specific tween public static void resume(int uniqueId) Parameters uniqueId int resumeAll() Resume all active tweens public static void resumeAll() rotate(GameObject, Vector3, float) Rotate a GameObject, to values are in passed in degrees public static LTDescr rotate(GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr rotate(LTRect, float, float) Rotate a GUI element (using an LTRect object), to a value that is in degrees public static LTDescr rotate(LTRect ltRect, float to, float time) Parameters ltRect LTRect to float time float Returns LTDescr rotate(RectTransform, float, float) Rotate a RectTransform object (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr rotate(RectTransform rectTrans, float to, float time) Parameters rectTrans RectTransform to float time float Returns LTDescr rotate(RectTransform, Vector3, float) public static LTDescr rotate(RectTransform rectTrans, Vector3 to, float time) Parameters rectTrans RectTransform to Vector3 time float Returns LTDescr rotateAround(GameObject, Vector3, float, float) Rotate a GameObject around a certain Axis (the best method to use when you want to rotate beyond 180 degrees) public static LTDescr rotateAround(GameObject gameObject, Vector3 axis, float add, float time) Parameters gameObject GameObject axis Vector3 add float time float Returns LTDescr rotateAround(RectTransform, Vector3, float, float) Rotate a RectTransform object (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr rotateAround(RectTransform rectTrans, Vector3 axis, float to, float time) Parameters rectTrans RectTransform axis Vector3 to float time float Returns LTDescr rotateAroundLocal(GameObject, Vector3, float, float) Rotate a GameObject around a certain Axis in Local Space (the best method to use when you want to rotate beyond 180 degrees) public static LTDescr rotateAroundLocal(GameObject gameObject, Vector3 axis, float add, float time) Parameters gameObject GameObject axis Vector3 add float time float Returns LTDescr rotateAroundLocal(RectTransform, Vector3, float, float) Rotate a RectTransform object around it's local axis (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr rotateAroundLocal(RectTransform rectTrans, Vector3 axis, float to, float time) Parameters rectTrans RectTransform axis Vector3 to float time float Returns LTDescr rotateLocal(GameObject, Vector3, float) Rotate a GameObject in the objects local space (on the transforms localEulerAngles object) public static LTDescr rotateLocal(GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr rotateX(GameObject, float, float) Rotate a GameObject only on the X axis public static LTDescr rotateX(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr rotateY(GameObject, float, float) Rotate a GameObject only on the Y axis public static LTDescr rotateY(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr rotateZ(GameObject, float, float) Rotate a GameObject only on the Z axis public static LTDescr rotateZ(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr scale(GameObject, Vector3, float) Scale a GameObject to a certain size public static LTDescr scale(GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr scale(LTRect, Vector2, float) Scale a GUI Element to a certain width and height public static LTDescr scale(LTRect ltRect, Vector2 to, float time) Parameters ltRect LTRect to Vector2 time float Returns LTDescr scale(RectTransform, Vector3, float) Scale a RectTransform object (used in Unity GUI in 4.6+, for Buttons, Panel, Scrollbar, etc...) public static LTDescr scale(RectTransform rectTrans, Vector3 to, float time) Parameters rectTrans RectTransform to Vector3 time float Returns LTDescr scaleX(GameObject, float, float) Scale a GameObject to a certain size along the x-axis only public static LTDescr scaleX(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr scaleY(GameObject, float, float) Scale a GameObject to a certain size along the y-axis only public static LTDescr scaleY(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr scaleZ(GameObject, float, float) Scale a GameObject to a certain size along the z-axis only public static LTDescr scaleZ(GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr sequence(bool) Retrieve a sequencer object where you can easily chain together tweens and methods one after another public static LTSeq sequence(bool initSequence = true) Parameters initSequence bool Returns LTSeq size(RectTransform, Vector2, float) Change the sizeDelta of a RectTransform object (used in Unity Canvas, for Buttons, Panel, Scrollbar, etc...) public static LTDescr size(RectTransform rectTrans, Vector2 to, float time) Parameters rectTrans RectTransform to Vector2 time float Returns LTDescr spring(float, float, float) public static float spring(float start, float end, float val) Parameters start float end float val float Returns float textAlpha(RectTransform, float, float) Fade a Unity UI Object public static LTDescr textAlpha(RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr textColor(RectTransform, Color, float) Change the color a Unity UI Object public static LTDescr textColor(RectTransform rectTransform, Color to, float time) Parameters rectTransform RectTransform to Color time float Returns LTDescr tweenOnCurve(LTDescr, float) public static float tweenOnCurve(LTDescr tweenDescr, float ratioPassed) Parameters tweenDescr LTDescr ratioPassed float Returns float tweenOnCurveVector(LTDescr, float) public static Vector3 tweenOnCurveVector(LTDescr tweenDescr, float ratioPassed) Parameters tweenDescr LTDescr ratioPassed float Returns Vector3 update() public static void update() value(GameObject, Color, Color, float) public static LTDescr value(GameObject gameObject, Color from, Color to, float time) Parameters gameObject GameObject from Color to Color time float Returns LTDescr value(GameObject, Action<Color, object>, Color, Color, float) public static LTDescr value(GameObject gameObject, Action<Color, object> callOnUpdate, Color from, Color to, float time) Parameters gameObject GameObject callOnUpdate Action<Color, object> from Color to Color time float Returns LTDescr value(GameObject, Action<Color>, Color, Color, float) public static LTDescr value(GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time) Parameters gameObject GameObject callOnUpdate Action<Color> from Color to Color time float Returns LTDescr value(GameObject, Action<float, object>, float, float, float) public static LTDescr value(GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time) Parameters gameObject GameObject callOnUpdate Action<float, object> from float to float time float Returns LTDescr value(GameObject, Action<float, float>, float, float, float) public static LTDescr value(GameObject gameObject, Action<float, float> callOnUpdateRatio, float from, float to, float time) Parameters gameObject GameObject callOnUpdateRatio Action<float, float> from float to float time float Returns LTDescr value(GameObject, Action<float>, float, float, float) public static LTDescr value(GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time) Parameters gameObject GameObject callOnUpdate Action<float> from float to float time float Returns LTDescr value(GameObject, Action<Vector2>, Vector2, Vector2, float) public static LTDescr value(GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time) Parameters gameObject GameObject callOnUpdate Action<Vector2> from Vector2 to Vector2 time float Returns LTDescr value(GameObject, Action<Vector3>, Vector3, Vector3, float) public static LTDescr value(GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time) Parameters gameObject GameObject callOnUpdate Action<Vector3> from Vector3 to Vector3 time float Returns LTDescr value(GameObject, float, float, float) Tween any particular value (float) public static LTDescr value(GameObject gameObject, float from, float to, float time) Parameters gameObject GameObject from float to float time float Returns LTDescr value(GameObject, Vector2, Vector2, float) Tween any particular value (Vector2) public static LTDescr value(GameObject gameObject, Vector2 from, Vector2 to, float time) Parameters gameObject GameObject from Vector2 to Vector2 time float Returns LTDescr value(GameObject, Vector3, Vector3, float) Tween any particular value (Vector3) public static LTDescr value(GameObject gameObject, Vector3 from, Vector3 to, float time) Parameters gameObject GameObject from Vector3 to Vector3 time float Returns LTDescr value(float, float, float) public static LTDescr value(float from, float to, float time) Parameters from float to float time float Returns LTDescr"
  },
  "api/Global.LeanTweenExt.html": {
    "href": "api/Global.LeanTweenExt.html",
    "title": "Class LeanTweenExt | Czasoport Documentation",
    "keywords": "Class LeanTweenExt Namespace Global public static class LeanTweenExt Inheritance object LeanTweenExt Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LeanAlpha(CanvasGroup, float, float) public static LTDescr LeanAlpha(this CanvasGroup canvas, float to, float time) Parameters canvas CanvasGroup to float time float Returns LTDescr LeanAlpha(GameObject, float, float) public static LTDescr LeanAlpha(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanAlpha(RectTransform, float, float) public static LTDescr LeanAlpha(this RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr LeanAlphaText(RectTransform, float, float) public static LTDescr LeanAlphaText(this RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr LeanAlphaVertex(GameObject, float, float) public static LTDescr LeanAlphaVertex(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanCancel(GameObject) public static void LeanCancel(this GameObject gameObject) Parameters gameObject GameObject LeanCancel(GameObject, bool) public static void LeanCancel(this GameObject gameObject, bool callOnComplete) Parameters gameObject GameObject callOnComplete bool LeanCancel(GameObject, int, bool) public static void LeanCancel(this GameObject gameObject, int uniqueId, bool callOnComplete = false) Parameters gameObject GameObject uniqueId int callOnComplete bool LeanCancel(RectTransform) public static void LeanCancel(this RectTransform rectTransform) Parameters rectTransform RectTransform LeanColor(GameObject, Color, float) public static LTDescr LeanColor(this GameObject gameObject, Color to, float time) Parameters gameObject GameObject to Color time float Returns LTDescr LeanColor(Transform) public static Color LeanColor(this Transform transform) Parameters transform Transform Returns Color LeanColorText(RectTransform, Color, float) public static LTDescr LeanColorText(this RectTransform rectTransform, Color to, float time) Parameters rectTransform RectTransform to Color time float Returns LTDescr LeanDelayedCall(GameObject, float, Action) public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action callback) Parameters gameObject GameObject delayTime float callback Action Returns LTDescr LeanDelayedCall(GameObject, float, Action<object>) public static LTDescr LeanDelayedCall(this GameObject gameObject, float delayTime, Action<object> callback) Parameters gameObject GameObject delayTime float callback Action<object> Returns LTDescr LeanIsPaused(GameObject) public static bool LeanIsPaused(this GameObject gameObject) Parameters gameObject GameObject Returns bool LeanIsPaused(RectTransform) public static bool LeanIsPaused(this RectTransform rectTransform) Parameters rectTransform RectTransform Returns bool LeanIsTweening(GameObject) public static bool LeanIsTweening(this GameObject gameObject) Parameters gameObject GameObject Returns bool LeanMove(GameObject, LTBezierPath, float) public static LTDescr LeanMove(this GameObject gameObject, LTBezierPath to, float time) Parameters gameObject GameObject to LTBezierPath time float Returns LTDescr LeanMove(GameObject, LTSpline, float) public static LTDescr LeanMove(this GameObject gameObject, LTSpline to, float time) Parameters gameObject GameObject to LTSpline time float Returns LTDescr LeanMove(GameObject, Vector2, float) public static LTDescr LeanMove(this GameObject gameObject, Vector2 to, float time) Parameters gameObject GameObject to Vector2 time float Returns LTDescr LeanMove(GameObject, Vector3, float) public static LTDescr LeanMove(this GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr LeanMove(GameObject, Vector3[], float) public static LTDescr LeanMove(this GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr LeanMove(RectTransform, Vector3, float) public static LTDescr LeanMove(this RectTransform rectTransform, Vector3 to, float time) Parameters rectTransform RectTransform to Vector3 time float Returns LTDescr LeanMove(Transform, LTBezierPath, float) public static LTDescr LeanMove(this Transform transform, LTBezierPath to, float time) Parameters transform Transform to LTBezierPath time float Returns LTDescr LeanMove(Transform, LTSpline, float) public static LTDescr LeanMove(this Transform transform, LTSpline to, float time) Parameters transform Transform to LTSpline time float Returns LTDescr LeanMove(Transform, Vector2, float) public static LTDescr LeanMove(this Transform transform, Vector2 to, float time) Parameters transform Transform to Vector2 time float Returns LTDescr LeanMove(Transform, Vector3, float) public static LTDescr LeanMove(this Transform transform, Vector3 to, float time) Parameters transform Transform to Vector3 time float Returns LTDescr LeanMove(Transform, Vector3[], float) public static LTDescr LeanMove(this Transform transform, Vector3[] to, float time) Parameters transform Transform to Vector3[] time float Returns LTDescr LeanMoveLocal(GameObject, LTBezierPath, float) public static LTDescr LeanMoveLocal(this GameObject gameObject, LTBezierPath to, float time) Parameters gameObject GameObject to LTBezierPath time float Returns LTDescr LeanMoveLocal(GameObject, LTSpline, float) public static LTDescr LeanMoveLocal(this GameObject gameObject, LTSpline to, float time) Parameters gameObject GameObject to LTSpline time float Returns LTDescr LeanMoveLocal(GameObject, Vector3, float) public static LTDescr LeanMoveLocal(this GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr LeanMoveLocal(Transform, LTBezierPath, float) public static LTDescr LeanMoveLocal(this Transform transform, LTBezierPath to, float time) Parameters transform Transform to LTBezierPath time float Returns LTDescr LeanMoveLocal(Transform, LTSpline, float) public static LTDescr LeanMoveLocal(this Transform transform, LTSpline to, float time) Parameters transform Transform to LTSpline time float Returns LTDescr LeanMoveLocal(Transform, Vector3, float) public static LTDescr LeanMoveLocal(this Transform transform, Vector3 to, float time) Parameters transform Transform to Vector3 time float Returns LTDescr LeanMoveLocalX(GameObject, float, float) public static LTDescr LeanMoveLocalX(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanMoveLocalX(Transform, float, float) public static LTDescr LeanMoveLocalX(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanMoveLocalY(GameObject, float, float) public static LTDescr LeanMoveLocalY(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanMoveLocalY(Transform, float, float) public static LTDescr LeanMoveLocalY(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanMoveLocalZ(GameObject, float, float) public static LTDescr LeanMoveLocalZ(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanMoveLocalZ(Transform, float, float) public static LTDescr LeanMoveLocalZ(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanMoveSpline(GameObject, LTSpline, float) public static LTDescr LeanMoveSpline(this GameObject gameObject, LTSpline to, float time) Parameters gameObject GameObject to LTSpline time float Returns LTDescr LeanMoveSpline(GameObject, Vector3[], float) public static LTDescr LeanMoveSpline(this GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr LeanMoveSpline(Transform, LTSpline, float) public static LTDescr LeanMoveSpline(this Transform transform, LTSpline to, float time) Parameters transform Transform to LTSpline time float Returns LTDescr LeanMoveSpline(Transform, Vector3[], float) public static LTDescr LeanMoveSpline(this Transform transform, Vector3[] to, float time) Parameters transform Transform to Vector3[] time float Returns LTDescr LeanMoveSplineLocal(GameObject, Vector3[], float) public static LTDescr LeanMoveSplineLocal(this GameObject gameObject, Vector3[] to, float time) Parameters gameObject GameObject to Vector3[] time float Returns LTDescr LeanMoveSplineLocal(Transform, Vector3[], float) public static LTDescr LeanMoveSplineLocal(this Transform transform, Vector3[] to, float time) Parameters transform Transform to Vector3[] time float Returns LTDescr LeanMoveX(GameObject, float, float) public static LTDescr LeanMoveX(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanMoveX(RectTransform, float, float) public static LTDescr LeanMoveX(this RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr LeanMoveX(Transform, float, float) public static LTDescr LeanMoveX(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanMoveY(GameObject, float, float) public static LTDescr LeanMoveY(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanMoveY(RectTransform, float, float) public static LTDescr LeanMoveY(this RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr LeanMoveY(Transform, float, float) public static LTDescr LeanMoveY(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanMoveZ(GameObject, float, float) public static LTDescr LeanMoveZ(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanMoveZ(RectTransform, float, float) public static LTDescr LeanMoveZ(this RectTransform rectTransform, float to, float time) Parameters rectTransform RectTransform to float time float Returns LTDescr LeanMoveZ(Transform, float, float) public static LTDescr LeanMoveZ(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanPause(GameObject) public static void LeanPause(this GameObject gameObject) Parameters gameObject GameObject LeanPlay(RectTransform, Sprite[]) public static LTDescr LeanPlay(this RectTransform rectTransform, UnityEngine.Sprite[] sprites) Parameters rectTransform RectTransform sprites Sprite[] Returns LTDescr LeanResume(GameObject) public static void LeanResume(this GameObject gameObject) Parameters gameObject GameObject LeanRotate(GameObject, Vector3, float) public static LTDescr LeanRotate(this GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr LeanRotate(RectTransform, Vector3, float) public static LTDescr LeanRotate(this RectTransform rectTransform, Vector3 to, float time) Parameters rectTransform RectTransform to Vector3 time float Returns LTDescr LeanRotate(Transform, Vector3, float) public static LTDescr LeanRotate(this Transform transform, Vector3 to, float time) Parameters transform Transform to Vector3 time float Returns LTDescr LeanRotateAround(GameObject, Vector3, float, float) public static LTDescr LeanRotateAround(this GameObject gameObject, Vector3 axis, float add, float time) Parameters gameObject GameObject axis Vector3 add float time float Returns LTDescr LeanRotateAround(RectTransform, Vector3, float, float) public static LTDescr LeanRotateAround(this RectTransform rectTransform, Vector3 axis, float add, float time) Parameters rectTransform RectTransform axis Vector3 add float time float Returns LTDescr LeanRotateAround(Transform, Vector3, float, float) public static LTDescr LeanRotateAround(this Transform transform, Vector3 axis, float add, float time) Parameters transform Transform axis Vector3 add float time float Returns LTDescr LeanRotateAroundLocal(GameObject, Vector3, float, float) public static LTDescr LeanRotateAroundLocal(this GameObject gameObject, Vector3 axis, float add, float time) Parameters gameObject GameObject axis Vector3 add float time float Returns LTDescr LeanRotateAroundLocal(RectTransform, Vector3, float, float) public static LTDescr LeanRotateAroundLocal(this RectTransform rectTransform, Vector3 axis, float add, float time) Parameters rectTransform RectTransform axis Vector3 add float time float Returns LTDescr LeanRotateAroundLocal(Transform, Vector3, float, float) public static LTDescr LeanRotateAroundLocal(this Transform transform, Vector3 axis, float add, float time) Parameters transform Transform axis Vector3 add float time float Returns LTDescr LeanRotateX(GameObject, float, float) public static LTDescr LeanRotateX(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanRotateX(Transform, float, float) public static LTDescr LeanRotateX(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanRotateY(GameObject, float, float) public static LTDescr LeanRotateY(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanRotateY(Transform, float, float) public static LTDescr LeanRotateY(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanRotateZ(GameObject, float, float) public static LTDescr LeanRotateZ(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanRotateZ(Transform, float, float) public static LTDescr LeanRotateZ(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanScale(GameObject, Vector3, float) public static LTDescr LeanScale(this GameObject gameObject, Vector3 to, float time) Parameters gameObject GameObject to Vector3 time float Returns LTDescr LeanScale(RectTransform, Vector3, float) public static LTDescr LeanScale(this RectTransform rectTransform, Vector3 to, float time) Parameters rectTransform RectTransform to Vector3 time float Returns LTDescr LeanScale(Transform, Vector3, float) public static LTDescr LeanScale(this Transform transform, Vector3 to, float time) Parameters transform Transform to Vector3 time float Returns LTDescr LeanScaleX(GameObject, float, float) public static LTDescr LeanScaleX(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanScaleX(Transform, float, float) public static LTDescr LeanScaleX(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanScaleY(GameObject, float, float) public static LTDescr LeanScaleY(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanScaleY(Transform, float, float) public static LTDescr LeanScaleY(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanScaleZ(GameObject, float, float) public static LTDescr LeanScaleZ(this GameObject gameObject, float to, float time) Parameters gameObject GameObject to float time float Returns LTDescr LeanScaleZ(Transform, float, float) public static LTDescr LeanScaleZ(this Transform transform, float to, float time) Parameters transform Transform to float time float Returns LTDescr LeanSetLocalPosX(Transform, float) public static void LeanSetLocalPosX(this Transform transform, float val) Parameters transform Transform val float LeanSetLocalPosY(Transform, float) public static void LeanSetLocalPosY(this Transform transform, float val) Parameters transform Transform val float LeanSetLocalPosZ(Transform, float) public static void LeanSetLocalPosZ(this Transform transform, float val) Parameters transform Transform val float LeanSetPosX(Transform, float) public static void LeanSetPosX(this Transform transform, float val) Parameters transform Transform val float LeanSetPosY(Transform, float) public static void LeanSetPosY(this Transform transform, float val) Parameters transform Transform val float LeanSetPosZ(Transform, float) public static void LeanSetPosZ(this Transform transform, float val) Parameters transform Transform val float LeanSize(RectTransform, Vector2, float) public static LTDescr LeanSize(this RectTransform rectTransform, Vector2 to, float time) Parameters rectTransform RectTransform to Vector2 time float Returns LTDescr LeanValue(GameObject, Color, Color, float) public static LTDescr LeanValue(this GameObject gameObject, Color from, Color to, float time) Parameters gameObject GameObject from Color to Color time float Returns LTDescr LeanValue(GameObject, Action<Color>, Color, Color, float) public static LTDescr LeanValue(this GameObject gameObject, Action<Color> callOnUpdate, Color from, Color to, float time) Parameters gameObject GameObject callOnUpdate Action<Color> from Color to Color time float Returns LTDescr LeanValue(GameObject, Action<float, object>, float, float, float) public static LTDescr LeanValue(this GameObject gameObject, Action<float, object> callOnUpdate, float from, float to, float time) Parameters gameObject GameObject callOnUpdate Action<float, object> from float to float time float Returns LTDescr LeanValue(GameObject, Action<float, float>, float, float, float) public static LTDescr LeanValue(this GameObject gameObject, Action<float, float> callOnUpdate, float from, float to, float time) Parameters gameObject GameObject callOnUpdate Action<float, float> from float to float time float Returns LTDescr LeanValue(GameObject, Action<float>, float, float, float) public static LTDescr LeanValue(this GameObject gameObject, Action<float> callOnUpdate, float from, float to, float time) Parameters gameObject GameObject callOnUpdate Action<float> from float to float time float Returns LTDescr LeanValue(GameObject, Action<Vector2>, Vector2, Vector2, float) public static LTDescr LeanValue(this GameObject gameObject, Action<Vector2> callOnUpdate, Vector2 from, Vector2 to, float time) Parameters gameObject GameObject callOnUpdate Action<Vector2> from Vector2 to Vector2 time float Returns LTDescr LeanValue(GameObject, Action<Vector3>, Vector3, Vector3, float) public static LTDescr LeanValue(this GameObject gameObject, Action<Vector3> callOnUpdate, Vector3 from, Vector3 to, float time) Parameters gameObject GameObject callOnUpdate Action<Vector3> from Vector3 to Vector3 time float Returns LTDescr LeanValue(GameObject, float, float, float) public static LTDescr LeanValue(this GameObject gameObject, float from, float to, float time) Parameters gameObject GameObject from float to float time float Returns LTDescr LeanValue(GameObject, Vector2, Vector2, float) public static LTDescr LeanValue(this GameObject gameObject, Vector2 from, Vector2 to, float time) Parameters gameObject GameObject from Vector2 to Vector2 time float Returns LTDescr LeanValue(GameObject, Vector3, Vector3, float) public static LTDescr LeanValue(this GameObject gameObject, Vector3 from, Vector3 to, float time) Parameters gameObject GameObject from Vector3 to Vector3 time float Returns LTDescr"
  },
  "api/Global.LeanTweenType.html": {
    "href": "api/Global.LeanTweenType.html",
    "title": "Enum LeanTweenType | Czasoport Documentation",
    "keywords": "Enum LeanTweenType Namespace Global public enum LeanTweenType Fields animationCurve = 38 clamp = 36 easeInBack = 26 easeInBounce = 23 easeInCirc = 20 easeInCubic = 5 easeInElastic = 29 easeInExpo = 17 easeInOutBack = 28 easeInOutBounce = 25 easeInOutCirc = 22 easeInOutCubic = 7 easeInOutElastic = 31 easeInOutExpo = 19 easeInOutQuad = 4 easeInOutQuart = 10 easeInOutQuint = 13 easeInOutSine = 16 easeInQuad = 3 easeInQuart = 8 easeInQuint = 11 easeInSine = 14 easeOutBack = 27 easeOutBounce = 24 easeOutCirc = 21 easeOutCubic = 6 easeOutElastic = 30 easeOutExpo = 18 easeOutQuad = 2 easeOutQuart = 9 easeOutQuint = 12 easeOutSine = 15 easeShake = 33 easeSpring = 32 linear = 1 notUsed = 0 once = 35 pingPong = 37 punch = 34"
  },
  "api/Global.LogoCinematic.html": {
    "href": "api/Global.LogoCinematic.html",
    "title": "Class LogoCinematic | Czasoport Documentation",
    "keywords": "Class LogoCinematic Namespace Global public class LogoCinematic : MonoBehaviour Inheritance object LogoCinematic Fields lean public GameObject lean Field Value GameObject tween public GameObject tween Field Value GameObject"
  },
  "api/Global.MusicPlayer.html": {
    "href": "api/Global.MusicPlayer.html",
    "title": "Class MusicPlayer | Czasoport Documentation",
    "keywords": "Class MusicPlayer Namespace Global API to play song with fade in effect and specified delay; public class MusicPlayer : MonoBehaviour Inheritance object MusicPlayer Fields FadeDuration public float FadeDuration Field Value float audioSource public AudioSource audioSource Field Value AudioSource Methods ClipTime() public float ClipTime() Returns float Play(AudioClip, float) public void Play(AudioClip clip, float delay = 0) Parameters clip AudioClip delay float"
  },
  "api/Global.NotificationManager.html": {
    "href": "api/Global.NotificationManager.html",
    "title": "Class NotificationManager | Czasoport Documentation",
    "keywords": "Class NotificationManager Namespace Global public class NotificationManager : MonoBehaviour, IDataPersistence Inheritance object NotificationManager Implements IDataPersistence Fields Instance public static NotificationManager Instance Field Value NotificationManager Methods EndTutorial() public void EndTutorial() LoadPersistentData(GameData) public void LoadPersistentData(GameData gameData) Parameters gameData GameData RaiseNotification(Notification) public void RaiseNotification(Notification notification) Parameters notification Notification RaiseTutorialNotification(TutorialNotification) public void RaiseTutorialNotification(TutorialNotification notification) Parameters notification TutorialNotification SavePersistentData(ref GameData) public void SavePersistentData(ref GameData gameData) Parameters gameData GameData StartTutorial() public void StartTutorial()"
  },
  "api/Global.NotificationUIController.html": {
    "href": "api/Global.NotificationUIController.html",
    "title": "Class NotificationUIController | Czasoport Documentation",
    "keywords": "Class NotificationUIController Namespace Global public class NotificationUIController : MonoBehaviour Inheritance object NotificationUIController Methods CloseNotificationPanel() public void CloseNotificationPanel() OpenNotificationPanel() public void OpenNotificationPanel()"
  },
  "api/Global.OldGUIExamplesCS.html": {
    "href": "api/Global.OldGUIExamplesCS.html",
    "title": "Class OldGUIExamplesCS | Czasoport Documentation",
    "keywords": "Class OldGUIExamplesCS Namespace Global public class OldGUIExamplesCS : MonoBehaviour Inheritance object OldGUIExamplesCS Fields beauty public Texture2D beauty Field Value Texture2D grumpy public Texture2D grumpy Field Value Texture2D Methods catMoved() public void catMoved()"
  },
  "api/Global.PathBezier2d.html": {
    "href": "api/Global.PathBezier2d.html",
    "title": "Class PathBezier2d | Czasoport Documentation",
    "keywords": "Class PathBezier2d Namespace Global public class PathBezier2d : MonoBehaviour Inheritance object PathBezier2d Fields cubes public Transform[] cubes Field Value Transform[] dude1 public GameObject dude1 Field Value GameObject dude2 public GameObject dude2 Field Value GameObject"
  },
  "api/Global.PathSpline2d.html": {
    "href": "api/Global.PathSpline2d.html",
    "title": "Class PathSpline2d | Czasoport Documentation",
    "keywords": "Class PathSpline2d Namespace Global public class PathSpline2d : MonoBehaviour Inheritance object PathSpline2d Fields cubes public Transform[] cubes Field Value Transform[] dude1 public GameObject dude1 Field Value GameObject dude2 public GameObject dude2 Field Value GameObject"
  },
  "api/Global.PathSplineEndless.html": {
    "href": "api/Global.PathSplineEndless.html",
    "title": "Class PathSplineEndless | Czasoport Documentation",
    "keywords": "Class PathSplineEndless Namespace Global public class PathSplineEndless : MonoBehaviour Inheritance object PathSplineEndless Fields car public GameObject car Field Value GameObject carInternal public GameObject carInternal Field Value GameObject cubes public GameObject[] cubes Field Value GameObject[] randomIterWidth public float randomIterWidth Field Value float trackTrailRenderers public GameObject trackTrailRenderers Field Value GameObject trees public GameObject[] trees Field Value GameObject[]"
  },
  "api/Global.PathSplinePerformance.html": {
    "href": "api/Global.PathSplinePerformance.html",
    "title": "Class PathSplinePerformance | Czasoport Documentation",
    "keywords": "Class PathSplinePerformance Namespace Global public class PathSplinePerformance : MonoBehaviour Inheritance object PathSplinePerformance Fields car public GameObject car Field Value GameObject carInternal public GameObject carInternal Field Value GameObject carSpeed public float carSpeed Field Value float circleLength public float circleLength Field Value float randomRange public float randomRange Field Value float tracerSpeed public float tracerSpeed Field Value float trackNodes public int trackNodes Field Value int trackTrailRenderers public GameObject trackTrailRenderers Field Value GameObject"
  },
  "api/Global.PathSplineTrack.html": {
    "href": "api/Global.PathSplineTrack.html",
    "title": "Class PathSplineTrack | Czasoport Documentation",
    "keywords": "Class PathSplineTrack Namespace Global public class PathSplineTrack : MonoBehaviour Inheritance object PathSplineTrack Fields car public GameObject car Field Value GameObject carInternal public GameObject carInternal Field Value GameObject trackOnePoints public Transform[] trackOnePoints Field Value Transform[] trackTrailRenderers public GameObject trackTrailRenderers Field Value GameObject"
  },
  "api/Global.PathSplines.html": {
    "href": "api/Global.PathSplines.html",
    "title": "Class PathSplines | Czasoport Documentation",
    "keywords": "Class PathSplines Namespace Global public class PathSplines : MonoBehaviour Inheritance object PathSplines Fields trans public Transform[] trans Field Value Transform[]"
  },
  "api/Global.SettingsTests.html": {
    "href": "api/Global.SettingsTests.html",
    "title": "Class SettingsTests | Czasoport Documentation",
    "keywords": "Class SettingsTests Namespace Global public class SettingsTests : MonoBehaviour Inheritance object SettingsTests"
  },
  "api/Global.TeleportPlace.html": {
    "href": "api/Global.TeleportPlace.html",
    "title": "Class TeleportPlace | Czasoport Documentation",
    "keywords": "Class TeleportPlace Namespace Global public class TeleportPlace : MonoBehaviour Inheritance object TeleportPlace Methods StartTeleportation() public Vector3 StartTeleportation() Returns Vector3"
  },
  "api/Global.TestingPunch.html": {
    "href": "api/Global.TestingPunch.html",
    "title": "Class TestingPunch | Czasoport Documentation",
    "keywords": "Class TestingPunch Namespace Global public class TestingPunch : MonoBehaviour Inheritance object TestingPunch Fields exportCurve public AnimationCurve exportCurve Field Value AnimationCurve overShootValue public float overShootValue Field Value float"
  },
  "api/Global.TestingRigidbodyCS.html": {
    "href": "api/Global.TestingRigidbodyCS.html",
    "title": "Class TestingRigidbodyCS | Czasoport Documentation",
    "keywords": "Class TestingRigidbodyCS Namespace Global public class TestingRigidbodyCS : MonoBehaviour Inheritance object TestingRigidbodyCS"
  },
  "api/Global.TestingZLegacy.NextFunc.html": {
    "href": "api/Global.TestingZLegacy.NextFunc.html",
    "title": "Delegate TestingZLegacy.NextFunc | Czasoport Documentation",
    "keywords": "Delegate TestingZLegacy.NextFunc Namespace Global public delegate void TestingZLegacy.NextFunc()"
  },
  "api/Global.TestingZLegacy.TimingType.html": {
    "href": "api/Global.TestingZLegacy.TimingType.html",
    "title": "Enum TestingZLegacy.TimingType | Czasoport Documentation",
    "keywords": "Enum TestingZLegacy.TimingType Namespace Global public enum TestingZLegacy.TimingType Fields HalfTimeScale = 2 IgnoreTimeScale = 1 Length = 4 SteadyNormalTime = 0 VariableTimeScale = 3"
  },
  "api/Global.TestingZLegacy.html": {
    "href": "api/Global.TestingZLegacy.html",
    "title": "Class TestingZLegacy | Czasoport Documentation",
    "keywords": "Class TestingZLegacy Namespace Global public class TestingZLegacy : MonoBehaviour Inheritance object TestingZLegacy Fields customAnimationCurve public AnimationCurve customAnimationCurve Field Value AnimationCurve pt1 public Transform pt1 Field Value Transform pt2 public Transform pt2 Field Value Transform pt3 public Transform pt3 Field Value Transform pt4 public Transform pt4 Field Value Transform pt5 public Transform pt5 Field Value Transform useEstimatedTime public bool useEstimatedTime Field Value bool Methods alphaExample() public void alphaExample() colorExample() public void colorExample() customTweenExample() public void customTweenExample() delayedCallExample() public void delayedCallExample() delayedCallExampleCallback() public void delayedCallExampleCallback() loopPause() public void loopPause() loopResume() public void loopResume() loopTestClamp() public void loopTestClamp() loopTestPingPong() public void loopTestPingPong() moveExample() public void moveExample() moveLocalExample() public void moveLocalExample() moveOnACurveExample() public void moveOnACurveExample() punchTest() public void punchTest() rotateAroundExample() public void rotateAroundExample() rotateExample() public void rotateExample() rotateFinished(object) public void rotateFinished(object hash) Parameters hash object rotateOnUpdate(float) public void rotateOnUpdate(float val) Parameters val float scaleExample() public void scaleExample() updateValue3Example() public void updateValue3Example() updateValue3ExampleCallback(Vector3) public void updateValue3ExampleCallback(Vector3 val) Parameters val Vector3 updateValue3ExampleUpdate(Vector3) public void updateValue3ExampleUpdate(Vector3 val) Parameters val Vector3 updateValueExample() public void updateValueExample() updateValueExampleCallback(float, object) public void updateValueExampleCallback(float val, object hash) Parameters val float hash object"
  },
  "api/Global.TestingZLegacyExt.NextFunc.html": {
    "href": "api/Global.TestingZLegacyExt.NextFunc.html",
    "title": "Delegate TestingZLegacyExt.NextFunc | Czasoport Documentation",
    "keywords": "Delegate TestingZLegacyExt.NextFunc Namespace Global public delegate void TestingZLegacyExt.NextFunc()"
  },
  "api/Global.TestingZLegacyExt.TimingType.html": {
    "href": "api/Global.TestingZLegacyExt.TimingType.html",
    "title": "Enum TestingZLegacyExt.TimingType | Czasoport Documentation",
    "keywords": "Enum TestingZLegacyExt.TimingType Namespace Global public enum TestingZLegacyExt.TimingType Fields HalfTimeScale = 2 IgnoreTimeScale = 1 Length = 4 SteadyNormalTime = 0 VariableTimeScale = 3"
  },
  "api/Global.TestingZLegacyExt.html": {
    "href": "api/Global.TestingZLegacyExt.html",
    "title": "Class TestingZLegacyExt | Czasoport Documentation",
    "keywords": "Class TestingZLegacyExt Namespace Global public class TestingZLegacyExt : MonoBehaviour Inheritance object TestingZLegacyExt Fields customAnimationCurve public AnimationCurve customAnimationCurve Field Value AnimationCurve pt1 public Transform pt1 Field Value Transform pt2 public Transform pt2 Field Value Transform pt3 public Transform pt3 Field Value Transform pt4 public Transform pt4 Field Value Transform pt5 public Transform pt5 Field Value Transform useEstimatedTime public bool useEstimatedTime Field Value bool Methods alphaExample() public void alphaExample() colorExample() public void colorExample() customTweenExample() public void customTweenExample() delayedCallExample() public void delayedCallExample() delayedCallExampleCallback() public void delayedCallExampleCallback() loopPause() public void loopPause() loopResume() public void loopResume() loopTestClamp() public void loopTestClamp() loopTestPingPong() public void loopTestPingPong() moveExample() public void moveExample() moveLocalExample() public void moveLocalExample() moveOnACurveExample() public void moveOnACurveExample() punchTest() public void punchTest() rotateAroundExample() public void rotateAroundExample() rotateExample() public void rotateExample() rotateFinished(object) public void rotateFinished(object hash) Parameters hash object rotateOnUpdate(float) public void rotateOnUpdate(float val) Parameters val float scaleExample() public void scaleExample() updateValue3Example() public void updateValue3Example() updateValue3ExampleCallback(Vector3) public void updateValue3ExampleCallback(Vector3 val) Parameters val Vector3 updateValue3ExampleUpdate(Vector3) public void updateValue3ExampleUpdate(Vector3 val) Parameters val Vector3 updateValueExample() public void updateValueExample() updateValueExampleCallback(float, object) public void updateValueExampleCallback(float val, object hash) Parameters val float hash object"
  },
  "api/Global.TutorialManager.html": {
    "href": "api/Global.TutorialManager.html",
    "title": "Class TutorialManager | Czasoport Documentation",
    "keywords": "Class TutorialManager Namespace Global public class TutorialManager : MonoBehaviour Inheritance object TutorialManager"
  },
  "api/Global.TutorialNotification.html": {
    "href": "api/Global.TutorialNotification.html",
    "title": "Class TutorialNotification | Czasoport Documentation",
    "keywords": "Class TutorialNotification Namespace Global public class TutorialNotification Inheritance object TutorialNotification Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TutorialNotification(string) public TutorialNotification(string message) Parameters message string TutorialNotification(string, string, string) public TutorialNotification(string message1, string message2, string message3) Parameters message1 string message2 string message3 string Fields messages public List<string> messages Field Value List<string>"
  },
  "api/Global.TutorialStage.html": {
    "href": "api/Global.TutorialStage.html",
    "title": "Class TutorialStage | Czasoport Documentation",
    "keywords": "Class TutorialStage Namespace Global public class TutorialStage Inheritance object TutorialStage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TutorialStage(InputAction, bool) public TutorialStage(InputAction action, bool b) Parameters action InputAction b bool Fields mainAction public InputAction mainAction Field Value InputAction otherConditionsSatisfied public bool otherConditionsSatisfied Field Value bool"
  },
  "api/Global.TweenAction.html": {
    "href": "api/Global.TweenAction.html",
    "title": "Enum TweenAction | Czasoport Documentation",
    "keywords": "Enum TweenAction Namespace Global public enum TweenAction Fields ALPHA = 21 ALPHA_VERTEX = 25 CALLBACK = 33 CALLBACK_COLOR = 27 CANVASGROUP_ALPHA = 24 CANVAS_ALPHA = 23 CANVAS_COLOR = 29 CANVAS_MOVE = 47 CANVAS_MOVE_X = 30 CANVAS_MOVE_Y = 31 CANVAS_MOVE_Z = 32 CANVAS_PLAYSPRITE = 20 CANVAS_ROTATEAROUND = 18 CANVAS_ROTATEAROUND_LOCAL = 19 CANVAS_SCALE = 48 CANVAS_SIZEDELTA = 49 COLOR = 26 DELAYED_SOUND = 46 FOLLOW = 50 GUI_ALPHA = 44 GUI_MOVE = 41 GUI_MOVE_MARGIN = 42 GUI_ROTATE = 45 GUI_SCALE = 43 MOVE = 34 MOVE_CURVED = 6 MOVE_CURVED_LOCAL = 7 MOVE_LOCAL = 35 MOVE_LOCAL_X = 3 MOVE_LOCAL_Y = 4 MOVE_LOCAL_Z = 5 MOVE_SPLINE = 8 MOVE_SPLINE_LOCAL = 9 MOVE_TO_TRANSFORM = 36 MOVE_X = 0 MOVE_Y = 1 MOVE_Z = 2 ROTATE = 37 ROTATE_AROUND = 16 ROTATE_AROUND_LOCAL = 17 ROTATE_LOCAL = 38 ROTATE_X = 13 ROTATE_Y = 14 ROTATE_Z = 15 SCALE = 39 SCALE_X = 10 SCALE_Y = 11 SCALE_Z = 12 TEXT_ALPHA = 22 TEXT_COLOR = 28 VALUE3 = 40"
  },
  "api/Global.UnityInkFileHandler.html": {
    "href": "api/Global.UnityInkFileHandler.html",
    "title": "Class UnityInkFileHandler | Czasoport Documentation",
    "keywords": "Class UnityInkFileHandler Namespace Global public class UnityInkFileHandler : IFileHandler Inheritance object UnityInkFileHandler Implements IFileHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UnityInkFileHandler(string) public UnityInkFileHandler(string rootDirectory) Parameters rootDirectory string Methods LoadInkFileContents(string) public string LoadInkFileContents(string fullFilename) Parameters fullFilename string Returns string ResolveInkFilename(string) public string ResolveInkFilename(string includeName) Parameters includeName string Returns string"
  },
  "api/Global.WithinLevelPortal.html": {
    "href": "api/Global.WithinLevelPortal.html",
    "title": "Class WithinLevelPortal | Czasoport Documentation",
    "keywords": "Class WithinLevelPortal Namespace Global public class WithinLevelPortal : MonoBehaviour Inheritance object WithinLevelPortal"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace | Czasoport Documentation",
    "keywords": "Namespace Classes Audio CrossingLight Czasoport CzasoportPart DummyNPC ExampleSpline FollowWorld Following GeneralAdvancedTechniques GeneralBasic GeneralBasics2d GeneralCameraShake GeneralEasingTypes GeneralEventsListeners GeneralSequencer GeneralSimpleUI GeneralUISpace InputActions LTBezier LTBezierPath LTDescr LTDescrOptional LTEvent LTGUI LTRect LTSeq LTSpline Move a GameObject to a certain location LTUtility LeanAudio LeanAudioOptions LeanAudioStream LeanSmooth LeanTest LeanTester LeanTween LeanTweenExt LogoCinematic MusicPlayer API to play song with fade in effect and specified delay; NotificationManager NotificationUIController OldGUIExamplesCS PathBezier2d PathSpline2d PathSplineEndless PathSplinePerformance PathSplineTrack PathSplines SettingsTests TeleportPlace TestingPunch TestingRigidbodyCS TestingZLegacy TestingZLegacyExt TutorialManager TutorialNotification TutorialStage UnityInkFileHandler WithinLevelPortal Structs InputActions.GameActions InputActions.InteractionsActions InputActions.InventoryActions InputActions.MouseActions InputActions.MovementActions InputActions.TeleportActions Interfaces InputActions.IGameActions InputActions.IInteractionsActions InputActions.IInventoryActions InputActions.IMouseActions InputActions.IMovementActions InputActions.ITeleportActions Enums GeneralEventsListeners.MyEvents LTGUI.Element_Type LeanAudioOptions.LeanAudioWaveStyle LeanProp LeanTweenType TestingZLegacy.TimingType TestingZLegacyExt.TimingType TweenAction Delegates LTDescr.ActionMethodDelegate LTDescr.EaseTypeDelegate TestingZLegacy.NextFunc TestingZLegacyExt.NextFunc"
  },
  "api/Ink.CharacterRange.html": {
    "href": "api/Ink.CharacterRange.html",
    "title": "Class CharacterRange | Czasoport Documentation",
    "keywords": "Class CharacterRange Namespace Ink A class representing a character range. Allows for lazy-loading a corresponding character set. public sealed class CharacterRange Inheritance object CharacterRange Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Properties end public char end { get; } Property Value char start public char start { get; } Property Value char Methods Define(char, char, IEnumerable<char>) public static CharacterRange Define(char start, char end, IEnumerable<char> excludes = null) Parameters start char end char excludes IEnumerable<char> Returns CharacterRange ToCharacterSet() Returns a character set instance corresponding to the character range represented by the current instance. public CharacterSet ToCharacterSet() Returns CharacterSet The char set. Remarks The internal character set is created once and cached in memory."
  },
  "api/Ink.CharacterSet.html": {
    "href": "api/Ink.CharacterSet.html",
    "title": "Class CharacterSet | Czasoport Documentation",
    "keywords": "Class CharacterSet Namespace Ink public class CharacterSet : HashSet<char>, ISet<char>, ICollection<char>, IReadOnlySet<char>, IReadOnlyCollection<char>, IEnumerable<char>, IEnumerable, IDeserializationCallback, ISerializable Inheritance object HashSet<char> CharacterSet Implements ISet<char> ICollection<char> IReadOnlySet<char> IReadOnlyCollection<char> IEnumerable<char> IEnumerable IDeserializationCallback ISerializable Inherited Members HashSet<char>.Add(char) HashSet<char>.Clear() HashSet<char>.Contains(char) HashSet<char>.CopyTo(char[]) HashSet<char>.CopyTo(char[], int) HashSet<char>.CopyTo(char[], int, int) HashSet<char>.CreateSetComparer() HashSet<char>.EnsureCapacity(int) HashSet<char>.ExceptWith(IEnumerable<char>) HashSet<char>.GetEnumerator() HashSet<char>.IntersectWith(IEnumerable<char>) HashSet<char>.IsProperSubsetOf(IEnumerable<char>) HashSet<char>.IsProperSupersetOf(IEnumerable<char>) HashSet<char>.IsSubsetOf(IEnumerable<char>) HashSet<char>.IsSupersetOf(IEnumerable<char>) HashSet<char>.OnDeserialization(object) HashSet<char>.Overlaps(IEnumerable<char>) HashSet<char>.Remove(char) HashSet<char>.RemoveWhere(Predicate<char>) HashSet<char>.SetEquals(IEnumerable<char>) HashSet<char>.SymmetricExceptWith(IEnumerable<char>) HashSet<char>.TrimExcess() HashSet<char>.TryGetValue(char, out char) HashSet<char>.UnionWith(IEnumerable<char>) HashSet<char>.Comparer HashSet<char>.Count object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CharacterSet() public CharacterSet() CharacterSet(CharacterSet) public CharacterSet(CharacterSet charSetToCopy) Parameters charSetToCopy CharacterSet CharacterSet(string) public CharacterSet(string str) Parameters str string Methods AddCharacters(IEnumerable<char>) public CharacterSet AddCharacters(IEnumerable<char> chars) Parameters chars IEnumerable<char> Returns CharacterSet AddCharacters(string) public CharacterSet AddCharacters(string chars) Parameters chars string Returns CharacterSet AddRange(char, char) public CharacterSet AddRange(char start, char end) Parameters start char end char Returns CharacterSet FromRange(char, char) public static CharacterSet FromRange(char start, char end) Parameters start char end char Returns CharacterSet"
  },
  "api/Ink.CommandLineInput.html": {
    "href": "api/Ink.CommandLineInput.html",
    "title": "Class CommandLineInput | Czasoport Documentation",
    "keywords": "Class CommandLineInput Namespace Ink public class CommandLineInput Inheritance object CommandLineInput Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields choiceInput public int? choiceInput Field Value int? debugPathLookup public string debugPathLookup Field Value string debugSource public int? debugSource Field Value int? isExit public bool isExit Field Value bool isHelp public bool isHelp Field Value bool userImmediateModeStatement public object userImmediateModeStatement Field Value object"
  },
  "api/Ink.CommentEliminator.html": {
    "href": "api/Ink.CommentEliminator.html",
    "title": "Class CommentEliminator | Czasoport Documentation",
    "keywords": "Class CommentEliminator Namespace Ink Pre-pass before main ink parser runs. It actually performs two main tasks: comment elimination to simplify the parse rules in the main parser Conversion of Windows line endings (\\r\\n) to the simpler Unix style (\\n), so we don't have to worry about them later. public class CommentEliminator : StringParser Inheritance object StringParser CommentEliminator Inherited Members StringParser.ParseSuccess StringParser.numbersCharacterSet StringParser.errorHandler StringParser.currentCharacter StringParser.state StringParser.hadError StringParser.PreProcessInputString(string) StringParser.BeginRule() StringParser.FailRule(int) StringParser.CancelRule(int) StringParser.SucceedRule(int, object) StringParser.RuleDidSucceed(object, StringParserState.Element, StringParserState.Element) StringParser.Expect(StringParser.ParseRule, string, StringParser.ParseRule) StringParser.Error(string, bool) StringParser.ErrorWithParsedObject(string, Object, bool) StringParser.ErrorOnLine(string, int, bool) StringParser.Warning(string) StringParser.endOfInput StringParser.remainingString StringParser.LineRemainder() StringParser.remainingLength StringParser.inputString StringParser.lineIndex StringParser.characterInLineIndex StringParser.index StringParser.SetFlag(uint, bool) StringParser.GetFlag(uint) StringParser.ParseObject(StringParser.ParseRule) StringParser.Parse<T>(StringParser.SpecificParseRule<T>) StringParser.OneOf(params StringParser.ParseRule[]) StringParser.OneOrMore(StringParser.ParseRule) StringParser.Optional(StringParser.ParseRule) StringParser.Exclude(StringParser.ParseRule) StringParser.OptionalExclude(StringParser.ParseRule) StringParser.String(string) StringParser.Interleave<T>(StringParser.ParseRule, StringParser.ParseRule, StringParser.ParseRule, bool) StringParser.ParseString(string) StringParser.ParseSingleCharacter() StringParser.ParseUntilCharactersFromString(string, int) StringParser.ParseUntilCharactersFromCharSet(CharacterSet, int) StringParser.ParseCharactersFromString(string, int) StringParser.ParseCharactersFromString(string, bool, int) StringParser.ParseCharactersFromCharSet(CharacterSet, bool, int) StringParser.Peek(StringParser.ParseRule) StringParser.ParseUntil(StringParser.ParseRule, CharacterSet, CharacterSet) StringParser.ParseInt() StringParser.ParseFloat() StringParser.ParseNewline() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommentEliminator(string) public CommentEliminator(string input) Parameters input string Methods Process() public string Process() Returns string"
  },
  "api/Ink.Compiler.CommandLineInputResult.html": {
    "href": "api/Ink.Compiler.CommandLineInputResult.html",
    "title": "Class Compiler.CommandLineInputResult | Czasoport Documentation",
    "keywords": "Class Compiler.CommandLineInputResult Namespace Ink public class Compiler.CommandLineInputResult Inheritance object Compiler.CommandLineInputResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields choiceIdx public int choiceIdx Field Value int divertedPath public string divertedPath Field Value string output public string output Field Value string requestsExit public bool requestsExit Field Value bool"
  },
  "api/Ink.Compiler.DebugSourceRange.html": {
    "href": "api/Ink.Compiler.DebugSourceRange.html",
    "title": "Struct Compiler.DebugSourceRange | Czasoport Documentation",
    "keywords": "Struct Compiler.DebugSourceRange Namespace Ink public struct Compiler.DebugSourceRange Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields debugMetadata public DebugMetadata debugMetadata Field Value DebugMetadata length public int length Field Value int text public string text Field Value string"
  },
  "api/Ink.Compiler.Options.html": {
    "href": "api/Ink.Compiler.Options.html",
    "title": "Class Compiler.Options | Czasoport Documentation",
    "keywords": "Class Compiler.Options Namespace Ink public class Compiler.Options Inheritance object Compiler.Options Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields countAllVisits public bool countAllVisits Field Value bool errorHandler public ErrorHandler errorHandler Field Value ErrorHandler fileHandler public IFileHandler fileHandler Field Value IFileHandler pluginDirectories public List<string> pluginDirectories Field Value List<string> sourceFilename public string sourceFilename Field Value string"
  },
  "api/Ink.Compiler.html": {
    "href": "api/Ink.Compiler.html",
    "title": "Class Compiler | Czasoport Documentation",
    "keywords": "Class Compiler Namespace Ink public class Compiler Inheritance object Compiler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Compiler(string, Options) public Compiler(string inkSource, Compiler.Options options = null) Parameters inkSource string options Compiler.Options Properties parsedStory public Story parsedStory { get; } Property Value Story Methods Compile() public Story Compile() Returns Story HandleInput(CommandLineInput) public Compiler.CommandLineInputResult HandleInput(CommandLineInput inputResult) Parameters inputResult CommandLineInput Returns Compiler.CommandLineInputResult Parse() public Story Parse() Returns Story RetrieveDebugSourceForLatestContent() public void RetrieveDebugSourceForLatestContent()"
  },
  "api/Ink.DefaultFileHandler.html": {
    "href": "api/Ink.DefaultFileHandler.html",
    "title": "Class DefaultFileHandler | Czasoport Documentation",
    "keywords": "Class DefaultFileHandler Namespace Ink public class DefaultFileHandler : IFileHandler Inheritance object DefaultFileHandler Implements IFileHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods LoadInkFileContents(string) public string LoadInkFileContents(string fullFilename) Parameters fullFilename string Returns string ResolveInkFilename(string) public string ResolveInkFilename(string includeName) Parameters includeName string Returns string"
  },
  "api/Ink.ErrorHandler.html": {
    "href": "api/Ink.ErrorHandler.html",
    "title": "Delegate ErrorHandler | Czasoport Documentation",
    "keywords": "Delegate ErrorHandler Namespace Ink Callback for errors throughout both the ink runtime and compiler. public delegate void ErrorHandler(string message, ErrorType type) Parameters message string Callback for errors throughout both the ink runtime and compiler. type ErrorType Callback for errors throughout both the ink runtime and compiler."
  },
  "api/Ink.ErrorType.html": {
    "href": "api/Ink.ErrorType.html",
    "title": "Enum ErrorType | Czasoport Documentation",
    "keywords": "Enum ErrorType Namespace Ink Author errors will only ever come from the compiler so don't need to be handled by your Story error handler. The \"Error\" ErrorType is by far the most common for a runtime story error (rather than compiler error), though the Warning type is also possible. public enum ErrorType Fields Author = 0 Error = 2 Warning = 1"
  },
  "api/Ink.IFileHandler.html": {
    "href": "api/Ink.IFileHandler.html",
    "title": "Interface IFileHandler | Czasoport Documentation",
    "keywords": "Interface IFileHandler Namespace Ink public interface IFileHandler Methods LoadInkFileContents(string) string LoadInkFileContents(string fullFilename) Parameters fullFilename string Returns string ResolveInkFilename(string) string ResolveInkFilename(string includeName) Parameters includeName string Returns string"
  },
  "api/Ink.IPlugin.html": {
    "href": "api/Ink.IPlugin.html",
    "title": "Interface IPlugin | Czasoport Documentation",
    "keywords": "Interface IPlugin Namespace Ink public interface IPlugin Methods PostExport(Story, ref Story) void PostExport(Story parsedStory, ref Story runtimeStory) Parameters parsedStory Story runtimeStory Story PostParse(ref Story) void PostParse(ref Story parsedStory) Parameters parsedStory Story PreParse(ref string) void PreParse(ref string storyContent) Parameters storyContent string"
  },
  "api/Ink.InkParser.CustomFlags.html": {
    "href": "api/Ink.InkParser.CustomFlags.html",
    "title": "Enum InkParser.CustomFlags | Czasoport Documentation",
    "keywords": "Enum InkParser.CustomFlags Namespace Ink protected enum InkParser.CustomFlags Fields ParsingString = 1 TagActive = 2"
  },
  "api/Ink.InkParser.FlowDecl.html": {
    "href": "api/Ink.InkParser.FlowDecl.html",
    "title": "Class InkParser.FlowDecl | Czasoport Documentation",
    "keywords": "Class InkParser.FlowDecl Namespace Ink protected class InkParser.FlowDecl Inheritance object InkParser.FlowDecl Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields arguments public List<FlowBase.Argument> arguments Field Value List<FlowBase.Argument> isFunction public bool isFunction Field Value bool name public Identifier name Field Value Identifier"
  },
  "api/Ink.InkParser.InfixOperator.html": {
    "href": "api/Ink.InkParser.InfixOperator.html",
    "title": "Class InkParser.InfixOperator | Czasoport Documentation",
    "keywords": "Class InkParser.InfixOperator Namespace Ink protected class InkParser.InfixOperator Inheritance object InkParser.InfixOperator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InfixOperator(string, int, bool) public InfixOperator(string type, int precedence, bool requireWhitespace) Parameters type string precedence int requireWhitespace bool Fields precedence public int precedence Field Value int requireWhitespace public bool requireWhitespace Field Value bool type public string type Field Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.InkParser.NameWithMetadata.html": {
    "href": "api/Ink.InkParser.NameWithMetadata.html",
    "title": "Class InkParser.NameWithMetadata | Czasoport Documentation",
    "keywords": "Class InkParser.NameWithMetadata Namespace Ink protected class InkParser.NameWithMetadata Inheritance object InkParser.NameWithMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields metadata public DebugMetadata metadata Field Value DebugMetadata name public string name Field Value string"
  },
  "api/Ink.InkParser.StatementLevel.html": {
    "href": "api/Ink.InkParser.StatementLevel.html",
    "title": "Enum InkParser.StatementLevel | Czasoport Documentation",
    "keywords": "Enum InkParser.StatementLevel Namespace Ink protected enum InkParser.StatementLevel Fields InnerBlock = 0 Knot = 2 Stitch = 1 Top = 3"
  },
  "api/Ink.InkParser.html": {
    "href": "api/Ink.InkParser.html",
    "title": "Class InkParser | Czasoport Documentation",
    "keywords": "Class InkParser Namespace Ink public class InkParser : StringParser Inheritance object StringParser InkParser Inherited Members StringParser.ParseSuccess StringParser.numbersCharacterSet StringParser.errorHandler StringParser.currentCharacter StringParser.state StringParser.hadError StringParser.BeginRule() StringParser.FailRule(int) StringParser.CancelRule(int) StringParser.SucceedRule(int, object) StringParser.Expect(StringParser.ParseRule, string, StringParser.ParseRule) StringParser.Error(string, bool) StringParser.ErrorWithParsedObject(string, Object, bool) StringParser.ErrorOnLine(string, int, bool) StringParser.Warning(string) StringParser.endOfInput StringParser.remainingString StringParser.LineRemainder() StringParser.remainingLength StringParser.inputString StringParser.lineIndex StringParser.characterInLineIndex StringParser.index StringParser.SetFlag(uint, bool) StringParser.GetFlag(uint) StringParser.ParseObject(StringParser.ParseRule) StringParser.Parse<T>(StringParser.SpecificParseRule<T>) StringParser.OneOf(params StringParser.ParseRule[]) StringParser.OneOrMore(StringParser.ParseRule) StringParser.Optional(StringParser.ParseRule) StringParser.Exclude(StringParser.ParseRule) StringParser.OptionalExclude(StringParser.ParseRule) StringParser.String(string) StringParser.Interleave<T>(StringParser.ParseRule, StringParser.ParseRule, StringParser.ParseRule, bool) StringParser.ParseString(string) StringParser.ParseSingleCharacter() StringParser.ParseUntilCharactersFromString(string, int) StringParser.ParseUntilCharactersFromCharSet(CharacterSet, int) StringParser.ParseCharactersFromString(string, int) StringParser.ParseCharactersFromString(string, bool, int) StringParser.ParseCharactersFromCharSet(CharacterSet, bool, int) StringParser.Peek(StringParser.ParseRule) StringParser.ParseUntil(StringParser.ParseRule, CharacterSet, CharacterSet) StringParser.ParseInt() StringParser.ParseFloat() StringParser.ParseNewline() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InkParser(string, string, ErrorHandler, IFileHandler) public InkParser(string str, string filenameForMetadata = null, ErrorHandler externalErrorHandler = null, IFileHandler fileHandler = null) Parameters str string filenameForMetadata string externalErrorHandler ErrorHandler fileHandler IFileHandler Fields Arabic public static readonly CharacterRange Arabic Field Value CharacterRange Armenian public static readonly CharacterRange Armenian Field Value CharacterRange Cyrillic public static readonly CharacterRange Cyrillic Field Value CharacterRange Greek public static readonly CharacterRange Greek Field Value CharacterRange Hebrew public static readonly CharacterRange Hebrew Field Value CharacterRange Korean public static readonly CharacterRange Korean Field Value CharacterRange Latin1Supplement public static readonly CharacterRange Latin1Supplement Field Value CharacterRange LatinBasic public static readonly CharacterRange LatinBasic Field Value CharacterRange LatinExtendedA public static readonly CharacterRange LatinExtendedA Field Value CharacterRange LatinExtendedB public static readonly CharacterRange LatinExtendedB Field Value CharacterRange Properties parsingStringExpression protected bool parsingStringExpression { get; set; } Property Value bool tagActive protected bool tagActive { get; set; } Property Value bool Methods AnyWhitespace() protected object AnyWhitespace() Returns object AuthorWarning() protected AuthorWarning AuthorWarning() Returns AuthorWarning BracketedKnotDeclArguments() protected List<FlowBase.Argument> BracketedKnotDeclArguments() Returns List<FlowBase.Argument> BracketedName() protected Identifier BracketedName() Returns Identifier Choice() protected Choice Choice() Returns Choice ChoiceCondition() protected Expression ChoiceCondition() Returns Expression ChoiceConditionsSpace() protected object ChoiceConditionsSpace() Returns object ChoiceSingleCondition() protected Expression ChoiceSingleCondition() Returns Expression CommandLineUserInput() public CommandLineInput CommandLineUserInput() Returns CommandLineInput ConditionExpression() protected Expression ConditionExpression() Returns Expression ConstDeclaration() protected Object ConstDeclaration() Returns Object ContentText() protected Text ContentText() Returns Text ContentTextAllowingEcapeChar() protected Text ContentTextAllowingEcapeChar() Returns Text ContentTextNoEscape() protected string ContentTextNoEscape() Returns string CreateDebugMetadata(Element, Element) protected DebugMetadata CreateDebugMetadata(StringParserState.Element stateAtStart, StringParserState.Element stateAtEnd) Parameters stateAtStart StringParserState.Element stateAtEnd StringParserState.Element Returns DebugMetadata DisallowIncrement(Object) protected void DisallowIncrement(Object expr) Parameters expr Object DivertIdentifierWithArguments() protected Divert DivertIdentifierWithArguments() Returns Divert ElseExpression() protected object ElseExpression() Returns object EndOfFile() protected object EndOfFile() Returns object EndOfLine() protected object EndOfLine() Returns object EndTagIfNecessary(ContentList) protected void EndTagIfNecessary(ContentList outputContentList) Parameters outputContentList ContentList EndTagIfNecessary(List<Object>) protected void EndTagIfNecessary(List<Object> outputContentList) Parameters outputContentList List<Object> Expression() protected Expression Expression() Returns Expression Expression(int) protected Expression Expression(int minimumPrecedence) Parameters minimumPrecedence int Returns Expression ExpressionBool() protected Number ExpressionBool() Returns Number ExpressionDivertTarget() protected Expression ExpressionDivertTarget() Returns Expression ExpressionFloat() protected Number ExpressionFloat() Returns Number ExpressionFunctionCall() protected Expression ExpressionFunctionCall() Returns Expression ExpressionFunctionCallArguments() protected List<Expression> ExpressionFunctionCallArguments() Returns List<Expression> ExpressionInfixRight(Expression, InfixOperator) protected Expression ExpressionInfixRight(Expression left, InkParser.InfixOperator op) Parameters left Expression op InkParser.InfixOperator Returns Expression ExpressionInt() protected Number ExpressionInt() Returns Number ExpressionList() protected List ExpressionList() Returns List ExpressionLiteral() protected Expression ExpressionLiteral() Returns Expression ExpressionNot() protected string ExpressionNot() Returns string ExpressionParen() protected Expression ExpressionParen() Returns Expression ExpressionString() protected StringExpression ExpressionString() Returns StringExpression ExpressionUnary() protected Expression ExpressionUnary() Returns Expression ExpressionVariableName() protected Expression ExpressionVariableName() Returns Expression ExternalDeclaration() protected ExternalDeclaration ExternalDeclaration() Returns ExternalDeclaration FlowDeclArgument() protected FlowBase.Argument FlowDeclArgument() Returns FlowBase.Argument Gather() protected Gather Gather() Returns Gather GatherDashes() protected object GatherDashes() Returns object Glue() protected Glue Glue() Returns Glue Identifier() protected string Identifier() Returns string IdentifierWithMetadata() protected Identifier IdentifierWithMetadata() Returns Identifier IncludeStatement() protected object IncludeStatement() Returns object InlineConditionalBranches() protected List<ConditionalSingleBranch> InlineConditionalBranches() Returns List<ConditionalSingleBranch> InlineLogic() protected Object InlineLogic() Returns Object InlineLogicOrGlueOrStartTag() protected Object InlineLogicOrGlueOrStartTag() Returns Object InnerConditionalContent() protected Conditional InnerConditionalContent() Returns Conditional InnerConditionalContent(Expression) protected Conditional InnerConditionalContent(Expression initialQueryExpression) Parameters initialQueryExpression Expression Returns Conditional InnerExpression() protected Object InnerExpression() Returns Object InnerInlineSequenceObjects() protected List<ContentList> InnerInlineSequenceObjects() Returns List<ContentList> InnerLogic() protected Object InnerLogic() Returns Object InnerMultilineSequenceObjects() protected List<ContentList> InnerMultilineSequenceObjects() Returns List<ContentList> InnerSequence() protected Sequence InnerSequence() Returns Sequence InnerSequenceObjects() protected List<ContentList> InnerSequenceObjects() Returns List<ContentList> KnotDeclaration() protected InkParser.FlowDecl KnotDeclaration() Returns InkParser.FlowDecl KnotDefinition() protected Knot KnotDefinition() Returns Knot KnotStitchNoContentRecoveryRule() protected object KnotStitchNoContentRecoveryRule() Returns object KnotTitleEquals() protected string KnotTitleEquals() Returns string Line(ParseRule) protected StringParser.ParseRule Line(StringParser.ParseRule inlineRule) Parameters inlineRule StringParser.ParseRule Returns StringParser.ParseRule LineOfMixedTextAndLogic() protected List<Object> LineOfMixedTextAndLogic() Returns List<Object> ListAllCharacterRanges() Gets an array of CharacterRange representing all of the currently supported non-ASCII character ranges that can be used in identifier names. public static CharacterRange[] ListAllCharacterRanges() Returns CharacterRange[] An array of CharacterRange representing all of the currently supported non-ASCII character ranges that can be used in identifier names. ListDeclaration() protected VariableAssignment ListDeclaration() Returns VariableAssignment ListDefinition() protected ListDefinition ListDefinition() Returns ListDefinition ListElementDefinition() protected ListElementDefinition ListElementDefinition() Returns ListElementDefinition ListElementDefinitionSeparator() protected string ListElementDefinitionSeparator() Returns string ListMember() protected Identifier ListMember() Returns Identifier LogicLine() protected Object LogicLine() Returns Object MixedTextAndLogic() protected List<Object> MixedTextAndLogic() Returns List<Object> MultiDivert() protected List<Object> MultiDivert() Returns List<Object> MultiSpaced(ParseRule) protected StringParser.ParseRule MultiSpaced(StringParser.ParseRule rule) Parameters rule StringParser.ParseRule Returns StringParser.ParseRule MultilineConditionalBranches() protected List<ConditionalSingleBranch> MultilineConditionalBranches() Returns List<ConditionalSingleBranch> MultilineWhitespace() protected object MultilineWhitespace() Returns object Newline() protected object Newline() Returns object Parse() public Story Parse() Returns Story ParseDashNotArrow() protected object ParseDashNotArrow() Returns object ParseDivertArrow() protected string ParseDivertArrow() Returns string ParseDivertArrowOrTunnelOnwards() protected string ParseDivertArrowOrTunnelOnwards() Returns string ParseTempKeyword() protected bool ParseTempKeyword() Returns bool ParseThreadArrow() protected string ParseThreadArrow() Returns string PreProcessInputString(string) protected override string PreProcessInputString(string str) Parameters str string Returns string ReturnStatement() protected Return ReturnStatement() Returns Return RuleDidSucceed(object, Element, Element) protected override void RuleDidSucceed(object result, StringParserState.Element stateAtStart, StringParserState.Element stateAtEnd) Parameters result object stateAtStart StringParserState.Element stateAtEnd StringParserState.Element SeparatedList<T>(SpecificParseRule<T>, ParseRule) protected List<T> SeparatedList<T>(StringParser.SpecificParseRule<T> mainRule, StringParser.ParseRule separatorRule) where T : class Parameters mainRule StringParser.SpecificParseRule<T> separatorRule StringParser.ParseRule Returns List<T> Type Parameters T SequenceTypeAnnotation() protected object SequenceTypeAnnotation() Returns object SequenceTypeSingleWord() protected object SequenceTypeSingleWord() Returns object SequenceTypeSymbolAnnotation() protected object SequenceTypeSymbolAnnotation() Returns object SequenceTypeWordAnnotation() protected object SequenceTypeWordAnnotation() Returns object SingleDivert() protected Divert SingleDivert() Returns Divert SingleMultilineCondition() protected ConditionalSingleBranch SingleMultilineCondition() Returns ConditionalSingleBranch SingleMultilineSequenceElement() protected ContentList SingleMultilineSequenceElement() Returns ContentList SkipToNextLine() protected object SkipToNextLine() Returns object Spaced(ParseRule) protected StringParser.ParseRule Spaced(StringParser.ParseRule rule) Parameters rule StringParser.ParseRule Returns StringParser.ParseRule StartTag() protected Object StartTag() Returns Object StartThread() protected Divert StartThread() Returns Divert StatementAtLevel(StatementLevel) protected object StatementAtLevel(InkParser.StatementLevel level) Parameters level InkParser.StatementLevel Returns object StatementsAtLevel(StatementLevel) protected List<Object> StatementsAtLevel(InkParser.StatementLevel level) Parameters level InkParser.StatementLevel Returns List<Object> StatementsBreakForLevel(StatementLevel) protected object StatementsBreakForLevel(InkParser.StatementLevel level) Parameters level InkParser.StatementLevel Returns object StitchDeclaration() protected InkParser.FlowDecl StitchDeclaration() Returns InkParser.FlowDecl StitchDefinition() protected object StitchDefinition() Returns object TempDeclarationOrAssignment() protected Object TempDeclarationOrAssignment() Returns Object VariableDeclaration() protected Object VariableDeclaration() Returns Object Whitespace() protected object Whitespace() Returns object"
  },
  "api/Ink.InkStringConversionExtensions.html": {
    "href": "api/Ink.InkStringConversionExtensions.html",
    "title": "Class InkStringConversionExtensions | Czasoport Documentation",
    "keywords": "Class InkStringConversionExtensions Namespace Ink public static class InkStringConversionExtensions Inheritance object InkStringConversionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToStringsArray<T>(List<T>) public static string[] ToStringsArray<T>(this List<T> list) Parameters list List<T> Returns string[] Type Parameters T"
  },
  "api/Ink.Parsed.AuthorWarning.html": {
    "href": "api/Ink.Parsed.AuthorWarning.html",
    "title": "Class AuthorWarning | Czasoport Documentation",
    "keywords": "Class AuthorWarning Namespace Ink.Parsed public class AuthorWarning : Object Inheritance object Object AuthorWarning Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthorWarning(string) public AuthorWarning(string message) Parameters message string Fields warningMessage public string warningMessage Field Value string Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object"
  },
  "api/Ink.Parsed.BinaryExpression.html": {
    "href": "api/Ink.Parsed.BinaryExpression.html",
    "title": "Class BinaryExpression | Czasoport Documentation",
    "keywords": "Class BinaryExpression Namespace Ink.Parsed public class BinaryExpression : Expression Inheritance object Object Expression BinaryExpression Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BinaryExpression(Expression, Expression, string) public BinaryExpression(Expression left, Expression right, string opName) Parameters left Expression right Expression opName string Fields leftExpression public Expression leftExpression Field Value Expression opName public string opName Field Value string rightExpression public Expression rightExpression Field Value Expression Methods GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.Choice.html": {
    "href": "api/Ink.Parsed.Choice.html",
    "title": "Class Choice | Czasoport Documentation",
    "keywords": "Class Choice Namespace Ink.Parsed public class Choice : Object, IWeavePoint, INamedContent Inheritance object Object Choice Implements IWeavePoint INamedContent Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Choice(ContentList, ContentList, ContentList) public Choice(ContentList startContent, ContentList choiceOnlyContent, ContentList innerContent) Parameters startContent ContentList choiceOnlyContent ContentList innerContent ContentList Properties choiceOnlyContent public ContentList choiceOnlyContent { get; protected set; } Property Value ContentList condition public Expression condition { get; set; } Property Value Expression containerForCounting public override Container containerForCounting { get; } Property Value Container hasWeaveStyleInlineBrackets public bool hasWeaveStyleInlineBrackets { get; set; } Property Value bool identifier public Identifier identifier { get; set; } Property Value Identifier indentationDepth public int indentationDepth { get; set; } Property Value int innerContent public ContentList innerContent { get; protected set; } Property Value ContentList innerContentContainer public Container innerContentContainer { get; } Property Value Container isInvisibleDefault public bool isInvisibleDefault { get; set; } Property Value bool name public string name { get; } Property Value string onceOnly public bool onceOnly { get; set; } Property Value bool runtimeContainer public Container runtimeContainer { get; } Property Value Container runtimePath public override Path runtimePath { get; } Property Value Path startContent public ContentList startContent { get; protected set; } Property Value ContentList Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.Conditional.html": {
    "href": "api/Ink.Parsed.Conditional.html",
    "title": "Class Conditional | Czasoport Documentation",
    "keywords": "Class Conditional Namespace Ink.Parsed public class Conditional : Object Inheritance object Object Conditional Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Conditional(Expression, List<ConditionalSingleBranch>) public Conditional(Expression condition, List<ConditionalSingleBranch> branches) Parameters condition Expression branches List<ConditionalSingleBranch> Properties branches public List<ConditionalSingleBranch> branches { get; } Property Value List<ConditionalSingleBranch> initialCondition public Expression initialCondition { get; } Property Value Expression Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.ConditionalSingleBranch.html": {
    "href": "api/Ink.Parsed.ConditionalSingleBranch.html",
    "title": "Class ConditionalSingleBranch | Czasoport Documentation",
    "keywords": "Class ConditionalSingleBranch Namespace Ink.Parsed public class ConditionalSingleBranch : Object Inheritance object Object ConditionalSingleBranch Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConditionalSingleBranch(List<Object>) public ConditionalSingleBranch(List<Object> content) Parameters content List<Object> Properties isElse public bool isElse { get; set; } Property Value bool isInline public bool isInline { get; set; } Property Value bool isTrueBranch public bool isTrueBranch { get; set; } Property Value bool matchingEquality public bool matchingEquality { get; set; } Property Value bool ownExpression public Expression ownExpression { get; set; } Property Value Expression returnDivert public Divert returnDivert { get; protected set; } Property Value Divert Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.ConstantDeclaration.html": {
    "href": "api/Ink.Parsed.ConstantDeclaration.html",
    "title": "Class ConstantDeclaration | Czasoport Documentation",
    "keywords": "Class ConstantDeclaration Namespace Ink.Parsed public class ConstantDeclaration : Object Inheritance object Object ConstantDeclaration Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ConstantDeclaration(Identifier, Expression) public ConstantDeclaration(Identifier name, Expression assignedExpression) Parameters name Identifier assignedExpression Expression Properties constantIdentifier public Identifier constantIdentifier { get; protected set; } Property Value Identifier constantName public string constantName { get; } Property Value string expression public Expression expression { get; protected set; } Property Value Expression typeName public override string typeName { get; } Property Value string Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.ContentList.html": {
    "href": "api/Ink.Parsed.ContentList.html",
    "title": "Class ContentList | Czasoport Documentation",
    "keywords": "Class ContentList Namespace Ink.Parsed public class ContentList : Object Inheritance object Object ContentList Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ContentList() public ContentList() ContentList(params Object[]) public ContentList(params Object[] objects) Parameters objects Object[] ContentList(List<Object>) public ContentList(List<Object> objects) Parameters objects List<Object> Properties dontFlatten public bool dontFlatten { get; set; } Property Value bool runtimeContainer public Container runtimeContainer { get; } Property Value Container Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. TrimTrailingWhitespace() public void TrimTrailingWhitespace()"
  },
  "api/Ink.Parsed.Divert.html": {
    "href": "api/Ink.Parsed.Divert.html",
    "title": "Class Divert | Czasoport Documentation",
    "keywords": "Class Divert Namespace Ink.Parsed public class Divert : Object Inheritance object Object Divert Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Divert(Object) public Divert(Object targetContent) Parameters targetContent Object Divert(Path, List<Expression>) public Divert(Path target, List<Expression> arguments = null) Parameters target Path arguments List<Expression> Properties arguments public List<Expression> arguments { get; protected set; } Property Value List<Expression> isDone public bool isDone { get; } Property Value bool isEmpty public bool isEmpty { get; set; } Property Value bool isEnd public bool isEnd { get; } Property Value bool isFunctionCall public bool isFunctionCall { get; set; } Property Value bool isThread public bool isThread { get; set; } Property Value bool isTunnel public bool isTunnel { get; set; } Property Value bool runtimeDivert public Divert runtimeDivert { get; protected set; } Property Value Divert target public Path target { get; protected set; } Property Value Path targetContent public Object targetContent { get; protected set; } Property Value Object Methods Error(string, Object, bool) public override void Error(string message, Object source = null, bool isWarning = false) Parameters message string source Object isWarning bool GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object PathAsVariableName() public string PathAsVariableName() Returns string ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.DivertTarget.html": {
    "href": "api/Ink.Parsed.DivertTarget.html",
    "title": "Class DivertTarget | Czasoport Documentation",
    "keywords": "Class DivertTarget Namespace Ink.Parsed public class DivertTarget : Expression Inheritance object Object Expression DivertTarget Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DivertTarget(Divert) public DivertTarget(Divert divert) Parameters divert Divert Fields divert public Divert divert Field Value Divert Methods Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.Expression.html": {
    "href": "api/Ink.Parsed.Expression.html",
    "title": "Class Expression | Czasoport Documentation",
    "keywords": "Class Expression Namespace Ink.Parsed public abstract class Expression : Object Inheritance object Object Expression Derived BinaryExpression DivertTarget FunctionCall IncDecExpression List MultipleConditionExpression Number StringExpression UnaryExpression VariableReference Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties outputWhenComplete public bool outputWhenComplete { get; set; } Property Value bool Methods GenerateConstantIntoContainer(Container) public void GenerateConstantIntoContainer(Container container) Parameters container Container GenerateIntoContainer(Container) public abstract void GenerateIntoContainer(Container container) Parameters container Container GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object"
  },
  "api/Ink.Parsed.ExternalDeclaration.html": {
    "href": "api/Ink.Parsed.ExternalDeclaration.html",
    "title": "Class ExternalDeclaration | Czasoport Documentation",
    "keywords": "Class ExternalDeclaration Namespace Ink.Parsed public class ExternalDeclaration : Object, INamedContent Inheritance object Object ExternalDeclaration Implements INamedContent Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ExternalDeclaration(Identifier, List<string>) public ExternalDeclaration(Identifier identifier, List<string> argumentNames) Parameters identifier Identifier argumentNames List<string> Properties argumentNames public List<string> argumentNames { get; set; } Property Value List<string> identifier public Identifier identifier { get; set; } Property Value Identifier name public string name { get; } Property Value string Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object"
  },
  "api/Ink.Parsed.FlowBase.Argument.html": {
    "href": "api/Ink.Parsed.FlowBase.Argument.html",
    "title": "Class FlowBase.Argument | Czasoport Documentation",
    "keywords": "Class FlowBase.Argument Namespace Ink.Parsed public class FlowBase.Argument Inheritance object FlowBase.Argument Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields identifier public Identifier identifier Field Value Identifier isByReference public bool isByReference Field Value bool isDivertTarget public bool isDivertTarget Field Value bool"
  },
  "api/Ink.Parsed.FlowBase.VariableResolveResult.html": {
    "href": "api/Ink.Parsed.FlowBase.VariableResolveResult.html",
    "title": "Struct FlowBase.VariableResolveResult | Czasoport Documentation",
    "keywords": "Struct FlowBase.VariableResolveResult Namespace Ink.Parsed public struct FlowBase.VariableResolveResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields found public bool found Field Value bool isArgument public bool isArgument Field Value bool isGlobal public bool isGlobal Field Value bool isTemporary public bool isTemporary Field Value bool ownerFlow public FlowBase ownerFlow Field Value FlowBase"
  },
  "api/Ink.Parsed.FlowBase.html": {
    "href": "api/Ink.Parsed.FlowBase.html",
    "title": "Class FlowBase | Czasoport Documentation",
    "keywords": "Class FlowBase Namespace Ink.Parsed public abstract class FlowBase : Object, INamedContent Inheritance object Object FlowBase Implements INamedContent Derived Knot Stitch Story Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FlowBase(Identifier, List<Object>, List<Argument>, bool, bool) public FlowBase(Identifier name = null, List<Object> topLevelObjects = null, List<FlowBase.Argument> arguments = null, bool isFunction = false, bool isIncludedStory = false) Parameters name Identifier topLevelObjects List<Object> arguments List<FlowBase.Argument> isFunction bool isIncludedStory bool Fields variableDeclarations public Dictionary<string, VariableAssignment> variableDeclarations Field Value Dictionary<string, VariableAssignment> Properties arguments public List<FlowBase.Argument> arguments { get; protected set; } Property Value List<FlowBase.Argument> flowLevel public abstract FlowLevel flowLevel { get; } Property Value FlowLevel hasParameters public bool hasParameters { get; } Property Value bool identifier public Identifier identifier { get; set; } Property Value Identifier isFunction public bool isFunction { get; protected set; } Property Value bool name public string name { get; } Property Value string subFlowsByName protected Dictionary<string, FlowBase> subFlowsByName { get; } Property Value Dictionary<string, FlowBase> typeName public override string typeName { get; } Property Value string Methods ContentWithNameAtLevel(string, FlowLevel?, bool) public Object ContentWithNameAtLevel(string name, FlowLevel? level = null, bool deepSearch = false) Parameters name string level FlowLevel? deepSearch bool Returns Object GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object PreProcessTopLevelObjects(List<Object>) protected virtual void PreProcessTopLevelObjects(List<Object> topLevelObjects) Parameters topLevelObjects List<Object> ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story ResolveVariableWithName(string, Object) public FlowBase.VariableResolveResult ResolveVariableWithName(string varName, Object fromNode) Parameters varName string fromNode Object Returns FlowBase.VariableResolveResult ResolveWeavePointNaming() public void ResolveWeavePointNaming() ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. TryAddNewVariableDeclaration(VariableAssignment) public void TryAddNewVariableDeclaration(VariableAssignment varDecl) Parameters varDecl VariableAssignment"
  },
  "api/Ink.Parsed.FlowLevel.html": {
    "href": "api/Ink.Parsed.FlowLevel.html",
    "title": "Enum FlowLevel | Czasoport Documentation",
    "keywords": "Enum FlowLevel Namespace Ink.Parsed public enum FlowLevel Fields Knot = 1 Stitch = 2 Story = 0 WeavePoint = 3"
  },
  "api/Ink.Parsed.FunctionCall.html": {
    "href": "api/Ink.Parsed.FunctionCall.html",
    "title": "Class FunctionCall | Czasoport Documentation",
    "keywords": "Class FunctionCall Namespace Ink.Parsed public class FunctionCall : Expression Inheritance object Object Expression FunctionCall Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FunctionCall(Identifier, List<Expression>) public FunctionCall(Identifier functionName, List<Expression> arguments) Parameters functionName Identifier arguments List<Expression> Fields shouldPopReturnedValue public bool shouldPopReturnedValue Field Value bool Properties arguments public List<Expression> arguments { get; } Property Value List<Expression> isChoiceCount public bool isChoiceCount { get; } Property Value bool isListRandom public bool isListRandom { get; } Property Value bool isListRange public bool isListRange { get; } Property Value bool isRandom public bool isRandom { get; } Property Value bool isReadCount public bool isReadCount { get; } Property Value bool isSeedRandom public bool isSeedRandom { get; } Property Value bool isTurns public bool isTurns { get; } Property Value bool isTurnsSince public bool isTurnsSince { get; } Property Value bool name public string name { get; } Property Value string proxyDivert public Divert proxyDivert { get; } Property Value Divert runtimeDivert public Divert runtimeDivert { get; } Property Value Divert Methods GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container IsBuiltIn(string) public static bool IsBuiltIn(string name) Parameters name string Returns bool ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.Gather.html": {
    "href": "api/Ink.Parsed.Gather.html",
    "title": "Class Gather | Czasoport Documentation",
    "keywords": "Class Gather Namespace Ink.Parsed public class Gather : Object, IWeavePoint, INamedContent Inheritance object Object Gather Implements IWeavePoint INamedContent Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Gather(Identifier, int) public Gather(Identifier identifier, int indentationDepth) Parameters identifier Identifier indentationDepth int Properties identifier public Identifier identifier { get; set; } Property Value Identifier indentationDepth public int indentationDepth { get; protected set; } Property Value int name public string name { get; } Property Value string runtimeContainer public Container runtimeContainer { get; } Property Value Container Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.Glue.html": {
    "href": "api/Ink.Parsed.Glue.html",
    "title": "Class Glue | Czasoport Documentation",
    "keywords": "Class Glue Namespace Ink.Parsed public class Glue : Wrap<Glue> Inheritance object Object Wrap<Glue> Glue Inherited Members Wrap<Glue>.GenerateRuntimeObject() Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Glue(Glue) public Glue(Glue glue) Parameters glue Glue"
  },
  "api/Ink.Parsed.INamedContent.html": {
    "href": "api/Ink.Parsed.INamedContent.html",
    "title": "Interface INamedContent | Czasoport Documentation",
    "keywords": "Interface INamedContent Namespace Ink.Parsed public interface INamedContent Properties name string name { get; } Property Value string"
  },
  "api/Ink.Parsed.IWeavePoint.html": {
    "href": "api/Ink.Parsed.IWeavePoint.html",
    "title": "Interface IWeavePoint | Czasoport Documentation",
    "keywords": "Interface IWeavePoint Namespace Ink.Parsed public interface IWeavePoint Properties content List<Object> content { get; } Property Value List<Object> identifier Identifier identifier { get; } Property Value Identifier indentationDepth int indentationDepth { get; } Property Value int name string name { get; } Property Value string runtimeContainer Container runtimeContainer { get; } Property Value Container"
  },
  "api/Ink.Parsed.Identifier.html": {
    "href": "api/Ink.Parsed.Identifier.html",
    "title": "Class Identifier | Czasoport Documentation",
    "keywords": "Class Identifier Namespace Ink.Parsed public class Identifier Inheritance object Identifier Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields Done public static Identifier Done Field Value Identifier debugMetadata public DebugMetadata debugMetadata Field Value DebugMetadata name public string name Field Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.IncDecExpression.html": {
    "href": "api/Ink.Parsed.IncDecExpression.html",
    "title": "Class IncDecExpression | Czasoport Documentation",
    "keywords": "Class IncDecExpression Namespace Ink.Parsed public class IncDecExpression : Expression Inheritance object Object Expression IncDecExpression Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IncDecExpression(Identifier, Expression, bool) public IncDecExpression(Identifier varIdentifier, Expression expression, bool isInc) Parameters varIdentifier Identifier expression Expression isInc bool IncDecExpression(Identifier, bool) public IncDecExpression(Identifier varIdentifier, bool isInc) Parameters varIdentifier Identifier isInc bool Fields expression public Expression expression Field Value Expression isInc public bool isInc Field Value bool varIdentifier public Identifier varIdentifier Field Value Identifier Methods GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.IncludedFile.html": {
    "href": "api/Ink.Parsed.IncludedFile.html",
    "title": "Class IncludedFile | Czasoport Documentation",
    "keywords": "Class IncludedFile Namespace Ink.Parsed public class IncludedFile : Object Inheritance object Object IncludedFile Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors IncludedFile(Story) public IncludedFile(Story includedStory) Parameters includedStory Story Properties includedStory public Story includedStory { get; } Property Value Story Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object"
  },
  "api/Ink.Parsed.Knot.html": {
    "href": "api/Ink.Parsed.Knot.html",
    "title": "Class Knot | Czasoport Documentation",
    "keywords": "Class Knot Namespace Ink.Parsed public class Knot : FlowBase, INamedContent Inheritance object Object FlowBase Knot Implements INamedContent Inherited Members FlowBase.name FlowBase.identifier FlowBase.arguments FlowBase.hasParameters FlowBase.variableDeclarations FlowBase.isFunction FlowBase.PreProcessTopLevelObjects(List<Object>) FlowBase.ResolveVariableWithName(string, Object) FlowBase.TryAddNewVariableDeclaration(VariableAssignment) FlowBase.ResolveWeavePointNaming() FlowBase.GenerateRuntimeObject() FlowBase.ContentWithNameAtLevel(string, FlowLevel?, bool) FlowBase.subFlowsByName FlowBase.typeName FlowBase.ToString() Object.debugMetadata Object.hasOwnDebugMetadata Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Knot(Identifier, List<Object>, List<Argument>, bool) public Knot(Identifier name, List<Object> topLevelObjects, List<FlowBase.Argument> arguments, bool isFunction) Parameters name Identifier topLevelObjects List<Object> arguments List<FlowBase.Argument> isFunction bool Properties flowLevel public override FlowLevel flowLevel { get; } Property Value FlowLevel Methods ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.LegacyTag.html": {
    "href": "api/Ink.Parsed.LegacyTag.html",
    "title": "Class LegacyTag | Czasoport Documentation",
    "keywords": "Class LegacyTag Namespace Ink.Parsed public class LegacyTag : Wrap<Tag> Inheritance object Object Wrap<Tag> LegacyTag Inherited Members Wrap<Tag>.GenerateRuntimeObject() Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LegacyTag(Tag) public LegacyTag(Tag tag) Parameters tag Tag"
  },
  "api/Ink.Parsed.List.html": {
    "href": "api/Ink.Parsed.List.html",
    "title": "Class List | Czasoport Documentation",
    "keywords": "Class List Namespace Ink.Parsed public class List : Expression Inheritance object Object Expression List Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors List(List<Identifier>) public List(List<Identifier> itemIdentifierList) Parameters itemIdentifierList List<Identifier> Fields itemIdentifierList public List<Identifier> itemIdentifierList Field Value List<Identifier> Methods GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container"
  },
  "api/Ink.Parsed.ListDefinition.html": {
    "href": "api/Ink.Parsed.ListDefinition.html",
    "title": "Class ListDefinition | Czasoport Documentation",
    "keywords": "Class ListDefinition Namespace Ink.Parsed public class ListDefinition : Object Inheritance object Object ListDefinition Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ListDefinition(List<ListElementDefinition>) public ListDefinition(List<ListElementDefinition> elements) Parameters elements List<ListElementDefinition> Fields identifier public Identifier identifier Field Value Identifier itemDefinitions public List<ListElementDefinition> itemDefinitions Field Value List<ListElementDefinition> variableAssignment public VariableAssignment variableAssignment Field Value VariableAssignment Properties runtimeListDefinition public ListDefinition runtimeListDefinition { get; } Property Value ListDefinition typeName public override string typeName { get; } Property Value string Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ItemNamed(string) public ListElementDefinition ItemNamed(string itemName) Parameters itemName string Returns ListElementDefinition ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.ListElementDefinition.html": {
    "href": "api/Ink.Parsed.ListElementDefinition.html",
    "title": "Class ListElementDefinition | Czasoport Documentation",
    "keywords": "Class ListElementDefinition Namespace Ink.Parsed public class ListElementDefinition : Object Inheritance object Object ListElementDefinition Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ListElementDefinition(Identifier, bool, int?) public ListElementDefinition(Identifier identifier, bool inInitialList, int? explicitValue = null) Parameters identifier Identifier inInitialList bool explicitValue int? Fields explicitValue public int? explicitValue Field Value int? identifier public Identifier identifier Field Value Identifier inInitialList public bool inInitialList Field Value bool seriesValue public int seriesValue Field Value int Properties fullName public string fullName { get; } Property Value string name public string name { get; } Property Value string typeName public override string typeName { get; } Property Value string Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.MultipleConditionExpression.html": {
    "href": "api/Ink.Parsed.MultipleConditionExpression.html",
    "title": "Class MultipleConditionExpression | Czasoport Documentation",
    "keywords": "Class MultipleConditionExpression Namespace Ink.Parsed public class MultipleConditionExpression : Expression Inheritance object Object Expression MultipleConditionExpression Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MultipleConditionExpression(List<Expression>) public MultipleConditionExpression(List<Expression> conditionExpressions) Parameters conditionExpressions List<Expression> Properties subExpressions public List<Expression> subExpressions { get; } Property Value List<Expression> Methods GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container"
  },
  "api/Ink.Parsed.Number.html": {
    "href": "api/Ink.Parsed.Number.html",
    "title": "Class Number | Czasoport Documentation",
    "keywords": "Class Number Namespace Ink.Parsed public class Number : Expression Inheritance object Object Expression Number Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Number(object) public Number(object value) Parameters value object Fields value public object value Field Value object Methods Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.Object.FindQueryFunc-1.html": {
    "href": "api/Ink.Parsed.Object.FindQueryFunc-1.html",
    "title": "Delegate Object.FindQueryFunc<T> | Czasoport Documentation",
    "keywords": "Delegate Object.FindQueryFunc<T> Namespace Ink.Parsed public delegate bool Object.FindQueryFunc<T>(T obj) Parameters obj T Returns bool Type Parameters T"
  },
  "api/Ink.Parsed.Object.html": {
    "href": "api/Ink.Parsed.Object.html",
    "title": "Class Object | Czasoport Documentation",
    "keywords": "Class Object Namespace Ink.Parsed public abstract class Object Inheritance object Object Derived AuthorWarning Choice Conditional ConditionalSingleBranch ConstantDeclaration ContentList Divert Expression ExternalDeclaration FlowBase Gather IncludedFile ListDefinition ListElementDefinition Return Sequence Tag Text TunnelOnwards VariableAssignment Weave Wrap<T> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ancestry public List<Object> ancestry { get; } Property Value List<Object> containerForCounting public virtual Container containerForCounting { get; } Property Value Container content public List<Object> content { get; protected set; } Property Value List<Object> debugMetadata public DebugMetadata debugMetadata { get; set; } Property Value DebugMetadata descriptionOfScope public string descriptionOfScope { get; } Property Value string hasOwnDebugMetadata public bool hasOwnDebugMetadata { get; } Property Value bool parent public Object parent { get; set; } Property Value Object runtimeObject public Object runtimeObject { get; set; } Property Value Object runtimePath public virtual Path runtimePath { get; } Property Value Path story public Story story { get; } Property Value Story typeName public virtual string typeName { get; } Property Value string Methods AddContent<T>(List<T>) public void AddContent<T>(List<T> listContent) where T : Object Parameters listContent List<T> Type Parameters T AddContent<T>(T) public T AddContent<T>(T subContent) where T : Object Parameters subContent T Returns T Type Parameters T ClosestFlowBase() public FlowBase ClosestFlowBase() Returns FlowBase Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. Error(string, Object, bool) public virtual void Error(string message, Object source = null, bool isWarning = false) Parameters message string source Object isWarning bool FindAll<T>(FindQueryFunc<T>) public List<T> FindAll<T>(Object.FindQueryFunc<T> queryFunc = null) where T : class Parameters queryFunc Object.FindQueryFunc<T> Returns List<T> Type Parameters T Find<T>(FindQueryFunc<T>) public T Find<T>(Object.FindQueryFunc<T> queryFunc = null) where T : class Parameters queryFunc Object.FindQueryFunc<T> Returns T Type Parameters T GenerateRuntimeObject() public abstract Object GenerateRuntimeObject() Returns Object GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. InsertContent<T>(int, T) public T InsertContent<T>(int index, T subContent) where T : Object Parameters index int subContent T Returns T Type Parameters T PathRelativeTo(Object) public Path PathRelativeTo(Object otherObj) Parameters otherObj Object Returns Path ResolveReferences(Story) public virtual void ResolveReferences(Story context) Parameters context Story Warning(string, Object) public void Warning(string message, Object source = null) Parameters message string source Object Operators operator ==(Object, Object) public static bool operator ==(Object a, Object b) Parameters a Object b Object Returns bool implicit operator bool(Object) public static implicit operator bool(Object obj) Parameters obj Object Returns bool operator !=(Object, Object) public static bool operator !=(Object a, Object b) Parameters a Object b Object Returns bool"
  },
  "api/Ink.Parsed.Path.html": {
    "href": "api/Ink.Parsed.Path.html",
    "title": "Class Path | Czasoport Documentation",
    "keywords": "Class Path Namespace Ink.Parsed public class Path Inheritance object Path Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Path(FlowLevel, List<Identifier>) public Path(FlowLevel baseFlowLevel, List<Identifier> components) Parameters baseFlowLevel FlowLevel components List<Identifier> Path(Identifier) public Path(Identifier ambiguousName) Parameters ambiguousName Identifier Path(List<Identifier>) public Path(List<Identifier> components) Parameters components List<Identifier> Properties baseLevelIsAmbiguous public bool baseLevelIsAmbiguous { get; } Property Value bool baseTargetLevel public FlowLevel baseTargetLevel { get; } Property Value FlowLevel components public List<Identifier> components { get; } Property Value List<Identifier> dotSeparatedComponents public string dotSeparatedComponents { get; } Property Value string firstComponent public string firstComponent { get; } Property Value string numberOfComponents public int numberOfComponents { get; } Property Value int Methods ResolveFromContext(Object) public Object ResolveFromContext(Object context) Parameters context Object Returns Object ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.Return.html": {
    "href": "api/Ink.Parsed.Return.html",
    "title": "Class Return | Czasoport Documentation",
    "keywords": "Class Return Namespace Ink.Parsed public class Return : Object Inheritance object Object Return Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Return(Expression) public Return(Expression returnedExpression = null) Parameters returnedExpression Expression Properties returnedExpression public Expression returnedExpression { get; protected set; } Property Value Expression Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object"
  },
  "api/Ink.Parsed.Sequence.html": {
    "href": "api/Ink.Parsed.Sequence.html",
    "title": "Class Sequence | Czasoport Documentation",
    "keywords": "Class Sequence Namespace Ink.Parsed public class Sequence : Object Inheritance object Object Sequence Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Sequence(List<ContentList>, SequenceType) public Sequence(List<ContentList> elementContentLists, SequenceType sequenceType) Parameters elementContentLists List<ContentList> sequenceType SequenceType Fields sequenceElements public List<Object> sequenceElements Field Value List<Object> sequenceType public SequenceType sequenceType Field Value SequenceType Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.SequenceType.html": {
    "href": "api/Ink.Parsed.SequenceType.html",
    "title": "Enum SequenceType | Czasoport Documentation",
    "keywords": "Enum SequenceType Namespace Ink.Parsed [Flags] public enum SequenceType Fields Cycle = 2 Once = 8 Shuffle = 4 Stopping = 1"
  },
  "api/Ink.Parsed.Stitch.html": {
    "href": "api/Ink.Parsed.Stitch.html",
    "title": "Class Stitch | Czasoport Documentation",
    "keywords": "Class Stitch Namespace Ink.Parsed public class Stitch : FlowBase, INamedContent Inheritance object Object FlowBase Stitch Implements INamedContent Inherited Members FlowBase.name FlowBase.identifier FlowBase.arguments FlowBase.hasParameters FlowBase.variableDeclarations FlowBase.isFunction FlowBase.PreProcessTopLevelObjects(List<Object>) FlowBase.ResolveVariableWithName(string, Object) FlowBase.TryAddNewVariableDeclaration(VariableAssignment) FlowBase.ResolveWeavePointNaming() FlowBase.GenerateRuntimeObject() FlowBase.ContentWithNameAtLevel(string, FlowLevel?, bool) FlowBase.ResolveReferences(Story) FlowBase.subFlowsByName FlowBase.typeName FlowBase.ToString() Object.debugMetadata Object.hasOwnDebugMetadata Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Stitch(Identifier, List<Object>, List<Argument>, bool) public Stitch(Identifier name, List<Object> topLevelObjects, List<FlowBase.Argument> arguments, bool isFunction) Parameters name Identifier topLevelObjects List<Object> arguments List<FlowBase.Argument> isFunction bool Properties flowLevel public override FlowLevel flowLevel { get; } Property Value FlowLevel"
  },
  "api/Ink.Parsed.Story.SymbolType.html": {
    "href": "api/Ink.Parsed.Story.SymbolType.html",
    "title": "Enum Story.SymbolType | Czasoport Documentation",
    "keywords": "Enum Story.SymbolType Namespace Ink.Parsed public enum Story.SymbolType : uint Fields Arg = 5 Knot = 0 List = 1 ListItem = 2 SubFlowAndWeave = 4 Temp = 6 Var = 3"
  },
  "api/Ink.Parsed.Story.html": {
    "href": "api/Ink.Parsed.Story.html",
    "title": "Class Story | Czasoport Documentation",
    "keywords": "Class Story Namespace Ink.Parsed public class Story : FlowBase, INamedContent Inheritance object Object FlowBase Story Implements INamedContent Inherited Members FlowBase.name FlowBase.identifier FlowBase.arguments FlowBase.hasParameters FlowBase.variableDeclarations FlowBase.isFunction FlowBase.ResolveVariableWithName(string, Object) FlowBase.TryAddNewVariableDeclaration(VariableAssignment) FlowBase.ResolveWeavePointNaming() FlowBase.GenerateRuntimeObject() FlowBase.ContentWithNameAtLevel(string, FlowLevel?, bool) FlowBase.ResolveReferences(Story) FlowBase.subFlowsByName FlowBase.typeName FlowBase.ToString() Object.debugMetadata Object.hasOwnDebugMetadata Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Story(List<Object>, bool) public Story(List<Object> toplevelObjects, bool isInclude = false) Parameters toplevelObjects List<Object> isInclude bool Fields constants public Dictionary<string, Expression> constants Field Value Dictionary<string, Expression> countAllVisits public bool countAllVisits Field Value bool externals public Dictionary<string, ExternalDeclaration> externals Field Value Dictionary<string, ExternalDeclaration> Properties flowLevel public override FlowLevel flowLevel { get; } Property Value FlowLevel Methods AddExternal(ExternalDeclaration) public void AddExternal(ExternalDeclaration decl) Parameters decl ExternalDeclaration CheckForNamingCollisions(Object, Identifier, SymbolType, string) public void CheckForNamingCollisions(Object obj, Identifier identifier, Story.SymbolType symbolType, string typeNameOverride = null) Parameters obj Object identifier Identifier symbolType Story.SymbolType typeNameOverride string DontFlattenContainer(Container) public void DontFlattenContainer(Container container) Parameters container Container Error(string, Object, bool) public override void Error(string message, Object source, bool isWarning) Parameters message string source Object isWarning bool ExportRuntime(ErrorHandler) public Story ExportRuntime(ErrorHandler errorHandler = null) Parameters errorHandler ErrorHandler Returns Story IsExternal(string) public bool IsExternal(string namedFuncTarget) Parameters namedFuncTarget string Returns bool IsReservedKeyword(string) public static bool IsReservedKeyword(string name) Parameters name string Returns bool PreProcessTopLevelObjects(List<Object>) protected override void PreProcessTopLevelObjects(List<Object> topLevelContent) Parameters topLevelContent List<Object> ResetError() public void ResetError() ResolveList(string) public ListDefinition ResolveList(string listName) Parameters listName string Returns ListDefinition ResolveListItem(string, string, Object) public ListElementDefinition ResolveListItem(string listName, string itemName, Object source = null) Parameters listName string itemName string source Object Returns ListElementDefinition"
  },
  "api/Ink.Parsed.StringExpression.html": {
    "href": "api/Ink.Parsed.StringExpression.html",
    "title": "Class StringExpression | Czasoport Documentation",
    "keywords": "Class StringExpression Namespace Ink.Parsed public class StringExpression : Expression Inheritance object Object Expression StringExpression Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StringExpression(List<Object>) public StringExpression(List<Object> content) Parameters content List<Object> Properties isSingleString public bool isSingleString { get; } Property Value bool Methods Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.Tag.html": {
    "href": "api/Ink.Parsed.Tag.html",
    "title": "Class Tag | Czasoport Documentation",
    "keywords": "Class Tag Namespace Ink.Parsed public class Tag : Object Inheritance object Object Tag Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields inChoice public bool inChoice Field Value bool isStart public bool isStart Field Value bool Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.Text.html": {
    "href": "api/Ink.Parsed.Text.html",
    "title": "Class Text | Czasoport Documentation",
    "keywords": "Class Text Namespace Ink.Parsed public class Text : Object Inheritance object Object Text Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Text(string) public Text(string str) Parameters str string Properties text public string text { get; set; } Property Value string Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.TunnelOnwards.html": {
    "href": "api/Ink.Parsed.TunnelOnwards.html",
    "title": "Class TunnelOnwards | Czasoport Documentation",
    "keywords": "Class TunnelOnwards Namespace Ink.Parsed public class TunnelOnwards : Object Inheritance object Object TunnelOnwards Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties divertAfter public Divert divertAfter { get; set; } Property Value Divert Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.UnaryExpression.html": {
    "href": "api/Ink.Parsed.UnaryExpression.html",
    "title": "Class UnaryExpression | Czasoport Documentation",
    "keywords": "Class UnaryExpression Namespace Ink.Parsed public class UnaryExpression : Expression Inheritance object Object Expression UnaryExpression Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UnaryExpression(Expression, string) public UnaryExpression(Expression inner, string op) Parameters inner Expression op string Fields innerExpression public Expression innerExpression Field Value Expression op public string op Field Value string Methods GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. WithInner(Expression, string) public static Expression WithInner(Expression inner, string op) Parameters inner Expression op string Returns Expression"
  },
  "api/Ink.Parsed.VariableAssignment.html": {
    "href": "api/Ink.Parsed.VariableAssignment.html",
    "title": "Class VariableAssignment | Czasoport Documentation",
    "keywords": "Class VariableAssignment Namespace Ink.Parsed public class VariableAssignment : Object Inheritance object Object VariableAssignment Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VariableAssignment(Identifier, Expression) public VariableAssignment(Identifier identifier, Expression assignedExpression) Parameters identifier Identifier assignedExpression Expression VariableAssignment(Identifier, ListDefinition) public VariableAssignment(Identifier identifier, ListDefinition listDef) Parameters identifier Identifier listDef ListDefinition Properties expression public Expression expression { get; protected set; } Property Value Expression isDeclaration public bool isDeclaration { get; } Property Value bool isGlobalDeclaration public bool isGlobalDeclaration { get; set; } Property Value bool isNewTemporaryDeclaration public bool isNewTemporaryDeclaration { get; set; } Property Value bool listDefinition public ListDefinition listDefinition { get; protected set; } Property Value ListDefinition typeName public override string typeName { get; } Property Value string variableIdentifier public Identifier variableIdentifier { get; protected set; } Property Value Identifier variableName public string variableName { get; } Property Value string Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story"
  },
  "api/Ink.Parsed.VariableReference.html": {
    "href": "api/Ink.Parsed.VariableReference.html",
    "title": "Class VariableReference | Czasoport Documentation",
    "keywords": "Class VariableReference Namespace Ink.Parsed public class VariableReference : Expression Inheritance object Object Expression VariableReference Inherited Members Expression.outputWhenComplete Expression.GenerateRuntimeObject() Expression.GenerateConstantIntoContainer(Container) Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VariableReference(List<Identifier>) public VariableReference(List<Identifier> pathIdentifiers) Parameters pathIdentifiers List<Identifier> Fields isConstantReference public bool isConstantReference Field Value bool isListItemReference public bool isListItemReference Field Value bool pathIdentifiers public List<Identifier> pathIdentifiers Field Value List<Identifier> Properties identifier public Identifier identifier { get; } Property Value Identifier name public string name { get; } Property Value string path public List<string> path { get; } Property Value List<string> runtimeVarRef public VariableReference runtimeVarRef { get; } Property Value VariableReference Methods GenerateIntoContainer(Container) public override void GenerateIntoContainer(Container container) Parameters container Container ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Parsed.Weave.BadTerminationHandler.html": {
    "href": "api/Ink.Parsed.Weave.BadTerminationHandler.html",
    "title": "Delegate Weave.BadTerminationHandler | Czasoport Documentation",
    "keywords": "Delegate Weave.BadTerminationHandler Namespace Ink.Parsed public delegate void Weave.BadTerminationHandler(Object terminatingObj) Parameters terminatingObj Object"
  },
  "api/Ink.Parsed.Weave.GatherPointToResolve.html": {
    "href": "api/Ink.Parsed.Weave.GatherPointToResolve.html",
    "title": "Class Weave.GatherPointToResolve | Czasoport Documentation",
    "keywords": "Class Weave.GatherPointToResolve Namespace Ink.Parsed public class Weave.GatherPointToResolve Inheritance object Weave.GatherPointToResolve Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields divert public Divert divert Field Value Divert targetRuntimeObj public Object targetRuntimeObj Field Value Object"
  },
  "api/Ink.Parsed.Weave.html": {
    "href": "api/Ink.Parsed.Weave.html",
    "title": "Class Weave | Czasoport Documentation",
    "keywords": "Class Weave Namespace Ink.Parsed public class Weave : Object Inheritance object Object Weave Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Weave(List<Object>, int) public Weave(List<Object> cont, int indentIndex = -1) Parameters cont List<Object> indentIndex int Fields gatherPointsToResolve public List<Weave.GatherPointToResolve> gatherPointsToResolve Field Value List<Weave.GatherPointToResolve> looseEnds public List<IWeavePoint> looseEnds Field Value List<IWeavePoint> Properties baseIndentIndex public int baseIndentIndex { get; } Property Value int lastParsedSignificantObject public Object lastParsedSignificantObject { get; } Property Value Object rootContainer public Container rootContainer { get; } Property Value Container Methods AddRuntimeForNestedWeave(Weave) public void AddRuntimeForNestedWeave(Weave nestedResult) Parameters nestedResult Weave DetermineBaseIndentationFromContent(List<Object>) public int DetermineBaseIndentationFromContent(List<Object> contentList) Parameters contentList List<Object> Returns int GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object ResolveReferences(Story) public override void ResolveReferences(Story context) Parameters context Story ResolveWeavePointNaming() public void ResolveWeavePointNaming() ValidateTermination(BadTerminationHandler) public void ValidateTermination(Weave.BadTerminationHandler badTerminationHandler) Parameters badTerminationHandler Weave.BadTerminationHandler WeavePointNamed(string) public IWeavePoint WeavePointNamed(string name) Parameters name string Returns IWeavePoint"
  },
  "api/Ink.Parsed.Wrap-1.html": {
    "href": "api/Ink.Parsed.Wrap-1.html",
    "title": "Class Wrap<T> | Czasoport Documentation",
    "keywords": "Class Wrap<T> Namespace Ink.Parsed public class Wrap<T> : Object where T : Object Type Parameters T Inheritance object Object Wrap<T> Derived Glue LegacyTag Inherited Members Object.debugMetadata Object.hasOwnDebugMetadata Object.typeName Object.parent Object.content Object.story Object.runtimeObject Object.runtimePath Object.containerForCounting Object.PathRelativeTo(Object) Object.ancestry Object.descriptionOfScope Object.AddContent<T>(T) Object.AddContent<T>(List<T>) Object.InsertContent<T>(int, T) Object.Find<T>(Object.FindQueryFunc<T>) Object.FindAll<T>(Object.FindQueryFunc<T>) Object.ResolveReferences(Story) Object.ClosestFlowBase() Object.Error(string, Object, bool) Object.Warning(string, Object) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Wrap(T) public Wrap(T objToWrap) Parameters objToWrap T Methods GenerateRuntimeObject() public override Object GenerateRuntimeObject() Returns Object"
  },
  "api/Ink.Parsed.html": {
    "href": "api/Ink.Parsed.html",
    "title": "Namespace Ink.Parsed | Czasoport Documentation",
    "keywords": "Namespace Ink.Parsed Classes AuthorWarning BinaryExpression Choice Conditional ConditionalSingleBranch ConstantDeclaration ContentList Divert DivertTarget Expression ExternalDeclaration FlowBase FlowBase.Argument FunctionCall Gather Glue Identifier IncDecExpression IncludedFile Knot LegacyTag List ListDefinition ListElementDefinition MultipleConditionExpression Number Object Path Return Sequence Stitch Story StringExpression Tag Text TunnelOnwards UnaryExpression VariableAssignment VariableReference Weave Weave.GatherPointToResolve Wrap<T> Structs FlowBase.VariableResolveResult Interfaces INamedContent IWeavePoint Enums FlowLevel SequenceType Story.SymbolType Delegates Object.FindQueryFunc<T> Weave.BadTerminationHandler"
  },
  "api/Ink.PluginManager.html": {
    "href": "api/Ink.PluginManager.html",
    "title": "Class PluginManager | Czasoport Documentation",
    "keywords": "Class PluginManager Namespace Ink public class PluginManager Inheritance object PluginManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PluginManager(List<string>) public PluginManager(List<string> pluginDirectories) Parameters pluginDirectories List<string> Methods PostExport(Story, Story) public Story PostExport(Story parsedStory, Story runtimeStory) Parameters parsedStory Story runtimeStory Story Returns Story PostParse(Story) public Story PostParse(Story parsedStory) Parameters parsedStory Story Returns Story PreParse(string) public string PreParse(string storyContent) Parameters storyContent string Returns string"
  },
  "api/Ink.Runtime.BoolValue.html": {
    "href": "api/Ink.Runtime.BoolValue.html",
    "title": "Class BoolValue | Czasoport Documentation",
    "keywords": "Class BoolValue Namespace Ink.Runtime public class BoolValue : Value<bool> Inheritance object Object Value Value<bool> BoolValue Inherited Members Value<bool>.value Value<bool>.valueObject Value.Create(object) Value.Copy() Value.BadCastException(ValueType) Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BoolValue() public BoolValue() BoolValue(bool) public BoolValue(bool boolVal) Parameters boolVal bool Properties isTruthy public override bool isTruthy { get; } Property Value bool valueType public override ValueType valueType { get; } Property Value ValueType Methods Cast(ValueType) public override Value Cast(ValueType newType) Parameters newType ValueType Returns Value ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.CallStack.Element.html": {
    "href": "api/Ink.Runtime.CallStack.Element.html",
    "title": "Class CallStack.Element | Czasoport Documentation",
    "keywords": "Class CallStack.Element Namespace Ink.Runtime public class CallStack.Element Inheritance object CallStack.Element Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Element(PushPopType, Pointer, bool) public Element(PushPopType type, Pointer pointer, bool inExpressionEvaluation = false) Parameters type PushPopType pointer Pointer inExpressionEvaluation bool Fields currentPointer public Pointer currentPointer Field Value Pointer evaluationStackHeightWhenPushed public int evaluationStackHeightWhenPushed Field Value int functionStartInOuputStream public int functionStartInOuputStream Field Value int inExpressionEvaluation public bool inExpressionEvaluation Field Value bool temporaryVariables public Dictionary<string, Object> temporaryVariables Field Value Dictionary<string, Object> type public PushPopType type Field Value PushPopType Methods Copy() public CallStack.Element Copy() Returns CallStack.Element"
  },
  "api/Ink.Runtime.CallStack.Thread.html": {
    "href": "api/Ink.Runtime.CallStack.Thread.html",
    "title": "Class CallStack.Thread | Czasoport Documentation",
    "keywords": "Class CallStack.Thread Namespace Ink.Runtime public class CallStack.Thread Inheritance object CallStack.Thread Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Thread() public Thread() Thread(Dictionary<string, object>, Story) public Thread(Dictionary<string, object> jThreadObj, Story storyContext) Parameters jThreadObj Dictionary<string, object> storyContext Story Fields callstack public List<CallStack.Element> callstack Field Value List<CallStack.Element> previousPointer public Pointer previousPointer Field Value Pointer threadIndex public int threadIndex Field Value int Methods Copy() public CallStack.Thread Copy() Returns CallStack.Thread WriteJson(Writer) public void WriteJson(SimpleJson.Writer writer) Parameters writer SimpleJson.Writer"
  },
  "api/Ink.Runtime.CallStack.html": {
    "href": "api/Ink.Runtime.CallStack.html",
    "title": "Class CallStack | Czasoport Documentation",
    "keywords": "Class CallStack Namespace Ink.Runtime public class CallStack Inheritance object CallStack Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CallStack(CallStack) public CallStack(CallStack toCopy) Parameters toCopy CallStack CallStack(Story) public CallStack(Story storyContext) Parameters storyContext Story Properties callStackTrace public string callStackTrace { get; } Property Value string canPop public bool canPop { get; } Property Value bool canPopThread public bool canPopThread { get; } Property Value bool currentElement public CallStack.Element currentElement { get; } Property Value CallStack.Element currentElementIndex public int currentElementIndex { get; } Property Value int currentThread public CallStack.Thread currentThread { get; set; } Property Value CallStack.Thread depth public int depth { get; } Property Value int elementIsEvaluateFromGame public bool elementIsEvaluateFromGame { get; } Property Value bool elements public List<CallStack.Element> elements { get; } Property Value List<CallStack.Element> Methods CanPop(PushPopType?) public bool CanPop(PushPopType? type = null) Parameters type PushPopType? Returns bool ContextForVariableNamed(string) public int ContextForVariableNamed(string name) Parameters name string Returns int ForkThread() public CallStack.Thread ForkThread() Returns CallStack.Thread GetTemporaryVariableWithName(string, int) public Object GetTemporaryVariableWithName(string name, int contextIndex = -1) Parameters name string contextIndex int Returns Object Pop(PushPopType?) public void Pop(PushPopType? type = null) Parameters type PushPopType? PopThread() public void PopThread() Push(PushPopType, int, int) public void Push(PushPopType type, int externalEvaluationStackHeight = 0, int outputStreamLengthWithPushed = 0) Parameters type PushPopType externalEvaluationStackHeight int outputStreamLengthWithPushed int PushThread() public void PushThread() Reset() public void Reset() SetJsonToken(Dictionary<string, object>, Story) public void SetJsonToken(Dictionary<string, object> jObject, Story storyContext) Parameters jObject Dictionary<string, object> storyContext Story SetTemporaryVariable(string, Object, bool, int) public void SetTemporaryVariable(string name, Object value, bool declareNew, int contextIndex = -1) Parameters name string value Object declareNew bool contextIndex int ThreadWithIndex(int) public CallStack.Thread ThreadWithIndex(int index) Parameters index int Returns CallStack.Thread WriteJson(Writer) public void WriteJson(SimpleJson.Writer w) Parameters w SimpleJson.Writer"
  },
  "api/Ink.Runtime.Choice.html": {
    "href": "api/Ink.Runtime.Choice.html",
    "title": "Class Choice | Czasoport Documentation",
    "keywords": "Class Choice Namespace Ink.Runtime A generated Choice from the story. A single ChoicePoint in the Story could potentially generate different Choices dynamically dependent on state, so they're separated. public class Choice : Object Inheritance object Object Choice Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Choice() public Choice() Fields isInvisibleDefault public bool isInvisibleDefault Field Value bool originalThreadIndex public int originalThreadIndex Field Value int sourcePath Get the path to the original choice point - where was this choice defined in the story? public string sourcePath Field Value string A dot separated path into the story data. tags public List<string> tags Field Value List<string> targetPath public Path targetPath Field Value Path Properties index The original index into currentChoices list on the Story when this Choice was generated, for convenience. public int index { get; set; } Property Value int pathStringOnChoice The target path that the Story should be diverted to if this Choice is chosen. public string pathStringOnChoice { get; set; } Property Value string text The main text to presented to the player for this Choice. public string text { get; set; } Property Value string threadAtGeneration public CallStack.Thread threadAtGeneration { get; set; } Property Value CallStack.Thread"
  },
  "api/Ink.Runtime.ChoicePoint.html": {
    "href": "api/Ink.Runtime.ChoicePoint.html",
    "title": "Class ChoicePoint | Czasoport Documentation",
    "keywords": "Class ChoicePoint Namespace Ink.Runtime The ChoicePoint represents the point within the Story where a Choice instance gets generated. The distinction is made because the text of the Choice can be dynamically generated. public class ChoicePoint : Object Inheritance object Object ChoicePoint Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChoicePoint() public ChoicePoint() ChoicePoint(bool) public ChoicePoint(bool onceOnly) Parameters onceOnly bool Properties choiceTarget public Container choiceTarget { get; } Property Value Container flags public int flags { get; set; } Property Value int hasChoiceOnlyContent public bool hasChoiceOnlyContent { get; set; } Property Value bool hasCondition public bool hasCondition { get; set; } Property Value bool hasStartContent public bool hasStartContent { get; set; } Property Value bool isInvisibleDefault public bool isInvisibleDefault { get; set; } Property Value bool onceOnly public bool onceOnly { get; set; } Property Value bool pathOnChoice public Path pathOnChoice { get; set; } Property Value Path pathStringOnChoice public string pathStringOnChoice { get; set; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.Container.CountFlags.html": {
    "href": "api/Ink.Runtime.Container.CountFlags.html",
    "title": "Enum Container.CountFlags | Czasoport Documentation",
    "keywords": "Enum Container.CountFlags Namespace Ink.Runtime [Flags] public enum Container.CountFlags Fields CountStartOnly = 4 Turns = 2 Visits = 1"
  },
  "api/Ink.Runtime.Container.html": {
    "href": "api/Ink.Runtime.Container.html",
    "title": "Class Container | Czasoport Documentation",
    "keywords": "Class Container Namespace Ink.Runtime public class Container : Object, INamedContent Inheritance object Object Container Implements INamedContent Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Container() public Container() Properties content public List<Object> content { get; set; } Property Value List<Object> countFlags public int countFlags { get; set; } Property Value int countingAtStartOnly public bool countingAtStartOnly { get; set; } Property Value bool hasValidName public bool hasValidName { get; } Property Value bool name public string name { get; set; } Property Value string namedContent public Dictionary<string, INamedContent> namedContent { get; set; } Property Value Dictionary<string, INamedContent> namedOnlyContent public Dictionary<string, Object> namedOnlyContent { get; set; } Property Value Dictionary<string, Object> pathToFirstLeafContent public Path pathToFirstLeafContent { get; } Property Value Path turnIndexShouldBeCounted public bool turnIndexShouldBeCounted { get; set; } Property Value bool visitsShouldBeCounted public bool visitsShouldBeCounted { get; set; } Property Value bool Methods AddContent(Object) public void AddContent(Object contentObj) Parameters contentObj Object AddContent(IList<Object>) public void AddContent(IList<Object> contentList) Parameters contentList IList<Object> AddContentsOfContainer(Container) public void AddContentsOfContainer(Container otherContainer) Parameters otherContainer Container AddToNamedContentOnly(INamedContent) public void AddToNamedContentOnly(INamedContent namedContentObj) Parameters namedContentObj INamedContent BuildStringOfHierarchy() public virtual string BuildStringOfHierarchy() Returns string BuildStringOfHierarchy(StringBuilder, int, Object) public void BuildStringOfHierarchy(StringBuilder sb, int indentation, Object pointedObj) Parameters sb StringBuilder indentation int pointedObj Object ContentAtPath(Path, int, int) public SearchResult ContentAtPath(Path path, int partialPathStart = 0, int partialPathLength = -1) Parameters path Path partialPathStart int partialPathLength int Returns SearchResult ContentWithPathComponent(Component) protected Object ContentWithPathComponent(Path.Component component) Parameters component Path.Component Returns Object InsertContent(Object, int) public void InsertContent(Object contentObj, int index) Parameters contentObj Object index int TryAddNamedContent(Object) public void TryAddNamedContent(Object contentObj) Parameters contentObj Object"
  },
  "api/Ink.Runtime.ControlCommand.CommandType.html": {
    "href": "api/Ink.Runtime.ControlCommand.CommandType.html",
    "title": "Enum ControlCommand.CommandType | Czasoport Documentation",
    "keywords": "Enum ControlCommand.CommandType Namespace Ink.Runtime public enum ControlCommand.CommandType Fields BeginString = 7 BeginTag = 24 ChoiceCount = 10 Done = 19 Duplicate = 3 End = 20 EndString = 8 EndTag = 25 EvalEnd = 2 EvalOutput = 1 EvalStart = 0 ListFromInt = 21 ListRandom = 23 ListRange = 22 NoOp = 9 NotSet = -1 PopEvaluatedValue = 4 PopFunction = 5 PopTunnel = 6 Random = 14 ReadCount = 13 SeedRandom = 15 SequenceShuffleIndex = 17 StartThread = 18 TOTAL_VALUES = 26 Turns = 11 TurnsSince = 12 VisitIndex = 16"
  },
  "api/Ink.Runtime.ControlCommand.html": {
    "href": "api/Ink.Runtime.ControlCommand.html",
    "title": "Class ControlCommand | Czasoport Documentation",
    "keywords": "Class ControlCommand Namespace Ink.Runtime public class ControlCommand : Object Inheritance object Object ControlCommand Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ControlCommand() public ControlCommand() ControlCommand(CommandType) public ControlCommand(ControlCommand.CommandType commandType) Parameters commandType ControlCommand.CommandType Properties commandType public ControlCommand.CommandType commandType { get; protected set; } Property Value ControlCommand.CommandType Methods BeginString() public static ControlCommand BeginString() Returns ControlCommand BeginTag() public static ControlCommand BeginTag() Returns ControlCommand ChoiceCount() public static ControlCommand ChoiceCount() Returns ControlCommand Copy() public override Object Copy() Returns Object Done() public static ControlCommand Done() Returns ControlCommand Duplicate() public static ControlCommand Duplicate() Returns ControlCommand End() public static ControlCommand End() Returns ControlCommand EndString() public static ControlCommand EndString() Returns ControlCommand EndTag() public static ControlCommand EndTag() Returns ControlCommand EvalEnd() public static ControlCommand EvalEnd() Returns ControlCommand EvalOutput() public static ControlCommand EvalOutput() Returns ControlCommand EvalStart() public static ControlCommand EvalStart() Returns ControlCommand ListFromInt() public static ControlCommand ListFromInt() Returns ControlCommand ListRandom() public static ControlCommand ListRandom() Returns ControlCommand ListRange() public static ControlCommand ListRange() Returns ControlCommand NoOp() public static ControlCommand NoOp() Returns ControlCommand PopEvaluatedValue() public static ControlCommand PopEvaluatedValue() Returns ControlCommand PopFunction() public static ControlCommand PopFunction() Returns ControlCommand PopTunnel() public static ControlCommand PopTunnel() Returns ControlCommand Random() public static ControlCommand Random() Returns ControlCommand ReadCount() public static ControlCommand ReadCount() Returns ControlCommand SeedRandom() public static ControlCommand SeedRandom() Returns ControlCommand SequenceShuffleIndex() public static ControlCommand SequenceShuffleIndex() Returns ControlCommand StartThread() public static ControlCommand StartThread() Returns ControlCommand ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Turns() public static ControlCommand Turns() Returns ControlCommand TurnsSince() public static ControlCommand TurnsSince() Returns ControlCommand VisitIndex() public static ControlCommand VisitIndex() Returns ControlCommand"
  },
  "api/Ink.Runtime.DebugMetadata.html": {
    "href": "api/Ink.Runtime.DebugMetadata.html",
    "title": "Class DebugMetadata | Czasoport Documentation",
    "keywords": "Class DebugMetadata Namespace Ink.Runtime public class DebugMetadata Inheritance object DebugMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DebugMetadata() public DebugMetadata() Fields endCharacterNumber public int endCharacterNumber Field Value int endLineNumber public int endLineNumber Field Value int fileName public string fileName Field Value string sourceName public string sourceName Field Value string startCharacterNumber public int startCharacterNumber Field Value int startLineNumber public int startLineNumber Field Value int Methods Merge(DebugMetadata) public DebugMetadata Merge(DebugMetadata dm) Parameters dm DebugMetadata Returns DebugMetadata ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.Divert.html": {
    "href": "api/Ink.Runtime.Divert.html",
    "title": "Class Divert | Czasoport Documentation",
    "keywords": "Class Divert Namespace Ink.Runtime public class Divert : Object Inheritance object Object Divert Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Divert() public Divert() Divert(PushPopType) public Divert(PushPopType stackPushType) Parameters stackPushType PushPopType Fields stackPushType public PushPopType stackPushType Field Value PushPopType Properties externalArgs public int externalArgs { get; set; } Property Value int hasVariableTarget public bool hasVariableTarget { get; } Property Value bool isConditional public bool isConditional { get; set; } Property Value bool isExternal public bool isExternal { get; set; } Property Value bool pushesToStack public bool pushesToStack { get; set; } Property Value bool targetPath public Path targetPath { get; set; } Property Value Path targetPathString public string targetPathString { get; set; } Property Value string targetPointer public Pointer targetPointer { get; } Property Value Pointer variableDivertName public string variableDivertName { get; set; } Property Value string Methods Equals(object) Required for implicit bool comparison public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() Required for implicit bool comparison public override int GetHashCode() Returns int ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.DivertTargetValue.html": {
    "href": "api/Ink.Runtime.DivertTargetValue.html",
    "title": "Class DivertTargetValue | Czasoport Documentation",
    "keywords": "Class DivertTargetValue Namespace Ink.Runtime public class DivertTargetValue : Value<Path> Inheritance object Object Value Value<Path> DivertTargetValue Inherited Members Value<Path>.value Value<Path>.valueObject Value.Create(object) Value.Copy() Value.BadCastException(ValueType) Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DivertTargetValue() public DivertTargetValue() DivertTargetValue(Path) public DivertTargetValue(Path targetPath) Parameters targetPath Path Properties isTruthy public override bool isTruthy { get; } Property Value bool targetPath public Path targetPath { get; set; } Property Value Path valueType public override ValueType valueType { get; } Property Value ValueType Methods Cast(ValueType) public override Value Cast(ValueType newType) Parameters newType ValueType Returns Value ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.FloatValue.html": {
    "href": "api/Ink.Runtime.FloatValue.html",
    "title": "Class FloatValue | Czasoport Documentation",
    "keywords": "Class FloatValue Namespace Ink.Runtime public class FloatValue : Value<float> Inheritance object Object Value Value<float> FloatValue Inherited Members Value<float>.value Value<float>.valueObject Value<float>.ToString() Value.Create(object) Value.Copy() Value.BadCastException(ValueType) Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FloatValue() public FloatValue() FloatValue(float) public FloatValue(float val) Parameters val float Properties isTruthy public override bool isTruthy { get; } Property Value bool valueType public override ValueType valueType { get; } Property Value ValueType Methods Cast(ValueType) public override Value Cast(ValueType newType) Parameters newType ValueType Returns Value"
  },
  "api/Ink.Runtime.Flow.html": {
    "href": "api/Ink.Runtime.Flow.html",
    "title": "Class Flow | Czasoport Documentation",
    "keywords": "Class Flow Namespace Ink.Runtime public class Flow Inheritance object Flow Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Flow(string, Story) public Flow(string name, Story story) Parameters name string story Story Flow(string, Story, Dictionary<string, object>) public Flow(string name, Story story, Dictionary<string, object> jObject) Parameters name string story Story jObject Dictionary<string, object> Fields callStack public CallStack callStack Field Value CallStack currentChoices public List<Choice> currentChoices Field Value List<Choice> name public string name Field Value string outputStream public List<Object> outputStream Field Value List<Object> Methods LoadFlowChoiceThreads(Dictionary<string, object>, Story) public void LoadFlowChoiceThreads(Dictionary<string, object> jChoiceThreads, Story story) Parameters jChoiceThreads Dictionary<string, object> story Story WriteJson(Writer) public void WriteJson(SimpleJson.Writer writer) Parameters writer SimpleJson.Writer"
  },
  "api/Ink.Runtime.Glue.html": {
    "href": "api/Ink.Runtime.Glue.html",
    "title": "Class Glue | Czasoport Documentation",
    "keywords": "Class Glue Namespace Ink.Runtime public class Glue : Object Inheritance object Object Glue Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Glue() public Glue() Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.INamedContent.html": {
    "href": "api/Ink.Runtime.INamedContent.html",
    "title": "Interface INamedContent | Czasoport Documentation",
    "keywords": "Interface INamedContent Namespace Ink.Runtime public interface INamedContent Properties hasValidName bool hasValidName { get; } Property Value bool name string name { get; } Property Value string"
  },
  "api/Ink.Runtime.InkList.html": {
    "href": "api/Ink.Runtime.InkList.html",
    "title": "Class InkList | Czasoport Documentation",
    "keywords": "Class InkList Namespace Ink.Runtime The InkList is the underlying type that's used to store an instance of a list in ink. It's not used for the definition of the list, but for a list value that's stored in a variable. Somewhat confusingly, it's backed by a C# Dictionary, and has nothing to do with a C# List! public class InkList : Dictionary<InkListItem, int>, IDictionary<InkListItem, int>, ICollection<KeyValuePair<InkListItem, int>>, IReadOnlyDictionary<InkListItem, int>, IReadOnlyCollection<KeyValuePair<InkListItem, int>>, IEnumerable<KeyValuePair<InkListItem, int>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable Inheritance object Dictionary<InkListItem, int> InkList Implements IDictionary<InkListItem, int> ICollection<KeyValuePair<InkListItem, int>> IReadOnlyDictionary<InkListItem, int> IReadOnlyCollection<KeyValuePair<InkListItem, int>> IEnumerable<KeyValuePair<InkListItem, int>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Inherited Members Dictionary<InkListItem, int>.Add(InkListItem, int) Dictionary<InkListItem, int>.Clear() Dictionary<InkListItem, int>.ContainsKey(InkListItem) Dictionary<InkListItem, int>.ContainsValue(int) Dictionary<InkListItem, int>.EnsureCapacity(int) Dictionary<InkListItem, int>.GetEnumerator() Dictionary<InkListItem, int>.OnDeserialization(object) Dictionary<InkListItem, int>.Remove(InkListItem) Dictionary<InkListItem, int>.Remove(InkListItem, out int) Dictionary<InkListItem, int>.TrimExcess() Dictionary<InkListItem, int>.TrimExcess(int) Dictionary<InkListItem, int>.TryAdd(InkListItem, int) Dictionary<InkListItem, int>.TryGetValue(InkListItem, out int) Dictionary<InkListItem, int>.Comparer Dictionary<InkListItem, int>.Count Dictionary<InkListItem, int>.this[InkListItem] Dictionary<InkListItem, int>.Keys Dictionary<InkListItem, int>.Values object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InkList() Create a new empty ink list. public InkList() InkList(InkList) Create a new ink list that contains the same contents as another list. public InkList(InkList otherList) Parameters otherList InkList InkList(KeyValuePair<InkListItem, int>) public InkList(KeyValuePair<InkListItem, int> singleElement) Parameters singleElement KeyValuePair<InkListItem, int> InkList(string, Story) Create a new empty ink list that's intended to hold items from a particular origin list definition. The origin Story is needed in order to be able to look up that definition. public InkList(string singleOriginListName, Story originStory) Parameters singleOriginListName string originStory Story Fields origins public List<ListDefinition> origins Field Value List<ListDefinition> Properties all The list of all items from the original list definition, equivalent to calling LIST_ALL(list) in ink. public InkList all { get; } Property Value InkList inverse The inverse of the list, equivalent to calling LIST_INVERSE(list) in ink public InkList inverse { get; } Property Value InkList maxItem Get the maximum item in the list, equivalent to calling LIST_MAX(list) in ink. public KeyValuePair<InkListItem, int> maxItem { get; } Property Value KeyValuePair<InkListItem, int> minItem Get the minimum item in the list, equivalent to calling LIST_MIN(list) in ink. public KeyValuePair<InkListItem, int> minItem { get; } Property Value KeyValuePair<InkListItem, int> originNames public List<string> originNames { get; } Property Value List<string> originOfMaxItem public ListDefinition originOfMaxItem { get; } Property Value ListDefinition Methods AddItem(InkListItem) Adds the given item to the ink list. Note that the item must come from a list definition that is already \"known\" to this list, so that the item's value can be looked up. By \"known\", we mean that it already has items in it from that source, or it did at one point - it can't be a completely fresh empty list, or a list that only contains items from a different list definition. public void AddItem(InkListItem item) Parameters item InkListItem AddItem(string) Adds the given item to the ink list, attempting to find the origin list definition that it belongs to. The item must therefore come from a list definition that is already \"known\" to this list, so that the item's value can be looked up. By \"known\", we mean that it already has items in it from that source, or it did at one point - it can't be a completely fresh empty list, or a list that only contains items from a different list definition. public void AddItem(string itemName) Parameters itemName string Contains(InkList) Returns true if the current list contains all the items that are in the list that is passed in. Equivalent to calling (list1 ? list2) in ink. public bool Contains(InkList otherList) Parameters otherList InkList Other list. Returns bool Contains(string) Returns true if the current list contains an item matching the given name. public bool Contains(string listItemName) Parameters listItemName string Returns bool ContainsItemNamed(string) Returns true if this ink list contains an item with the given short name (ignoring the original list where it was defined). public bool ContainsItemNamed(string itemName) Parameters itemName string Returns bool Equals(object) Returns true if the passed object is also an ink list that contains the same items as the current list, false otherwise. public override bool Equals(object other) Parameters other object Returns bool FromString(string, Story) Converts a string to an ink list and returns for use in the story. public static InkList FromString(string myListItem, Story originStory) Parameters myListItem string originStory Story Origin story. Returns InkList InkList created from string list item GetHashCode() Return the hashcode for this object, used for comparisons and inserting into dictionaries. public override int GetHashCode() Returns int GreaterThan(InkList) Returns true if all the item values in the current list are greater than all the item values in the passed in list. Equivalent to calling (list1 > list2) in ink. public bool GreaterThan(InkList otherList) Parameters otherList InkList Returns bool GreaterThanOrEquals(InkList) Returns true if the item values in the current list overlap or are all greater than the item values in the passed in list. None of the item values in the current list must fall below the item values in the passed in list. Equivalent to (list1 >= list2) in ink, or LIST_MIN(list1) >= LIST_MIN(list2) && LIST_MAX(list1) >= LIST_MAX(list2). public bool GreaterThanOrEquals(InkList otherList) Parameters otherList InkList Returns bool HasIntersection(InkList) Fast test for the existence of any intersection between the current list and another public bool HasIntersection(InkList otherList) Parameters otherList InkList Returns bool Intersect(InkList) Returns a new list that is the intersection of the current list with another list that's passed in - i.e. a list of the items that are shared between the two other lists. Equivalent to calling (list1 ^ list2) in ink. public InkList Intersect(InkList otherList) Parameters otherList InkList Returns InkList LessThan(InkList) Returns true if all the item values in the current list are less than all the item values in the passed in list. Equivalent to calling (list1 < list2) in ink. public bool LessThan(InkList otherList) Parameters otherList InkList Returns bool LessThanOrEquals(InkList) Returns true if the item values in the current list overlap or are all less than the item values in the passed in list. None of the item values in the current list must go above the item values in the passed in list. Equivalent to (list1 <= list2) in ink, or LIST_MAX(list1) <= LIST_MAX(list2) && LIST_MIN(list1) <= LIST_MIN(list2). public bool LessThanOrEquals(InkList otherList) Parameters otherList InkList Returns bool ListWithSubRange(object, object) Returns a sublist with the elements given the minimum and maxmimum bounds. The bounds can either be ints which are indices into the entire (sorted) list, or they can be InkLists themselves. These are intended to be single-item lists so you can specify the upper and lower bounds. If you pass in multi-item lists, it'll use the minimum and maximum items in those lists respectively. WARNING: Calling this method requires a full sort of all the elements in the list. public InkList ListWithSubRange(object minBound, object maxBound) Parameters minBound object maxBound object Returns InkList MaxAsList() public InkList MaxAsList() Returns InkList MinAsList() public InkList MinAsList() Returns InkList SetInitialOriginName(string) public void SetInitialOriginName(string initialOriginName) Parameters initialOriginName string SetInitialOriginNames(List<string>) public void SetInitialOriginNames(List<string> initialOriginNames) Parameters initialOriginNames List<string> ToString() Returns a string in the form \"a, b, c\" with the names of the items in the list, without the origin list definition names. Equivalent to writing {list} in ink. public override string ToString() Returns string Union(InkList) Returns a new list that is the combination of the current list and one that's passed in. Equivalent to calling (list1 + list2) in ink. public InkList Union(InkList otherList) Parameters otherList InkList Returns InkList Without(InkList) Returns a new list that's the same as the current one, except with the given items removed that are in the passed in list. Equivalent to calling (list1 - list2) in ink. public InkList Without(InkList listToRemove) Parameters listToRemove InkList List to remove. Returns InkList"
  },
  "api/Ink.Runtime.InkListItem.html": {
    "href": "api/Ink.Runtime.InkListItem.html",
    "title": "Struct InkListItem | Czasoport Documentation",
    "keywords": "Struct InkListItem Namespace Ink.Runtime The underlying type for a list item in ink. It stores the original list definition name as well as the item name, but without the value of the item. When the value is stored, it's stored in a KeyValuePair of InkListItem and int. public struct InkListItem Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors InkListItem(string) Create an item from a dot-separted string of the form \"listDefinitionName.listItemName\". public InkListItem(string fullName) Parameters fullName string InkListItem(string, string) Create an item with the given original list definition name, and the name of this item. public InkListItem(string originName, string itemName) Parameters originName string itemName string Fields itemName The main name of the item as defined in ink. public readonly string itemName Field Value string originName The name of the list where the item was originally defined. public readonly string originName Field Value string Properties Null public static InkListItem Null { get; } Property Value InkListItem fullName Get the full dot-separated name of the item, in the form \"listDefinitionName.itemName\". public string fullName { get; } Property Value string isNull public bool isNull { get; } Property Value bool Methods Equals(object) Is this item the same as another item? public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() Get the hashcode for an item. public override int GetHashCode() Returns int ToString() Get the full dot-separated name of the item, in the form \"listDefinitionName.itemName\". Calls fullName internally. public override string ToString() Returns string"
  },
  "api/Ink.Runtime.IntValue.html": {
    "href": "api/Ink.Runtime.IntValue.html",
    "title": "Class IntValue | Czasoport Documentation",
    "keywords": "Class IntValue Namespace Ink.Runtime public class IntValue : Value<int> Inheritance object Object Value Value<int> IntValue Inherited Members Value<int>.value Value<int>.valueObject Value<int>.ToString() Value.Create(object) Value.Copy() Value.BadCastException(ValueType) Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IntValue() public IntValue() IntValue(int) public IntValue(int intVal) Parameters intVal int Properties isTruthy public override bool isTruthy { get; } Property Value bool valueType public override ValueType valueType { get; } Property Value ValueType Methods Cast(ValueType) public override Value Cast(ValueType newType) Parameters newType ValueType Returns Value"
  },
  "api/Ink.Runtime.Json.html": {
    "href": "api/Ink.Runtime.Json.html",
    "title": "Class Json | Czasoport Documentation",
    "keywords": "Class Json Namespace Ink.Runtime public static class Json Inheritance object Json Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods JArrayToRuntimeObjList(List<object>, bool) public static List<Object> JArrayToRuntimeObjList(List<object> jArray, bool skipLast = false) Parameters jArray List<object> skipLast bool Returns List<Object> JArrayToRuntimeObjList<T>(List<object>, bool) public static List<T> JArrayToRuntimeObjList<T>(List<object> jArray, bool skipLast = false) where T : Object Parameters jArray List<object> skipLast bool Returns List<T> Type Parameters T JObjectToDictionaryRuntimeObjs(Dictionary<string, object>) public static Dictionary<string, Object> JObjectToDictionaryRuntimeObjs(Dictionary<string, object> jObject) Parameters jObject Dictionary<string, object> Returns Dictionary<string, Object> JObjectToIntDictionary(Dictionary<string, object>) public static Dictionary<string, int> JObjectToIntDictionary(Dictionary<string, object> jObject) Parameters jObject Dictionary<string, object> Returns Dictionary<string, int> JTokenToListDefinitions(object) public static ListDefinitionsOrigin JTokenToListDefinitions(object obj) Parameters obj object Returns ListDefinitionsOrigin JTokenToRuntimeObject(object) public static Object JTokenToRuntimeObject(object token) Parameters token object Returns Object WriteChoice(Writer, Choice) public static void WriteChoice(SimpleJson.Writer writer, Choice choice) Parameters writer SimpleJson.Writer choice Choice WriteDictionaryRuntimeObjs(Writer, Dictionary<string, Object>) public static void WriteDictionaryRuntimeObjs(SimpleJson.Writer writer, Dictionary<string, Object> dictionary) Parameters writer SimpleJson.Writer dictionary Dictionary<string, Object> WriteIntDictionary(Writer, Dictionary<string, int>) public static void WriteIntDictionary(SimpleJson.Writer writer, Dictionary<string, int> dict) Parameters writer SimpleJson.Writer dict Dictionary<string, int> WriteListRuntimeObjs(Writer, List<Object>) public static void WriteListRuntimeObjs(SimpleJson.Writer writer, List<Object> list) Parameters writer SimpleJson.Writer list List<Object> WriteRuntimeContainer(Writer, Container, bool) public static void WriteRuntimeContainer(SimpleJson.Writer writer, Container container, bool withoutName = false) Parameters writer SimpleJson.Writer container Container withoutName bool WriteRuntimeObject(Writer, Object) public static void WriteRuntimeObject(SimpleJson.Writer writer, Object obj) Parameters writer SimpleJson.Writer obj Object"
  },
  "api/Ink.Runtime.ListDefinition.html": {
    "href": "api/Ink.Runtime.ListDefinition.html",
    "title": "Class ListDefinition | Czasoport Documentation",
    "keywords": "Class ListDefinition Namespace Ink.Runtime public class ListDefinition Inheritance object ListDefinition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ListDefinition(string, Dictionary<string, int>) public ListDefinition(string name, Dictionary<string, int> items) Parameters name string items Dictionary<string, int> Properties items public Dictionary<InkListItem, int> items { get; } Property Value Dictionary<InkListItem, int> name public string name { get; } Property Value string Methods ContainsItem(InkListItem) public bool ContainsItem(InkListItem item) Parameters item InkListItem Returns bool ContainsItemWithName(string) public bool ContainsItemWithName(string itemName) Parameters itemName string Returns bool TryGetItemWithValue(int, out InkListItem) public bool TryGetItemWithValue(int val, out InkListItem item) Parameters val int item InkListItem Returns bool TryGetValueForItem(InkListItem, out int) public bool TryGetValueForItem(InkListItem item, out int intVal) Parameters item InkListItem intVal int Returns bool ValueForItem(InkListItem) public int ValueForItem(InkListItem item) Parameters item InkListItem Returns int"
  },
  "api/Ink.Runtime.ListDefinitionsOrigin.html": {
    "href": "api/Ink.Runtime.ListDefinitionsOrigin.html",
    "title": "Class ListDefinitionsOrigin | Czasoport Documentation",
    "keywords": "Class ListDefinitionsOrigin Namespace Ink.Runtime public class ListDefinitionsOrigin Inheritance object ListDefinitionsOrigin Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ListDefinitionsOrigin(List<ListDefinition>) public ListDefinitionsOrigin(List<ListDefinition> lists) Parameters lists List<ListDefinition> Properties lists public List<ListDefinition> lists { get; } Property Value List<ListDefinition> Methods FindSingleItemListWithName(string) public ListValue FindSingleItemListWithName(string name) Parameters name string Returns ListValue TryListGetDefinition(string, out ListDefinition) public bool TryListGetDefinition(string name, out ListDefinition def) Parameters name string def ListDefinition Returns bool"
  },
  "api/Ink.Runtime.ListValue.html": {
    "href": "api/Ink.Runtime.ListValue.html",
    "title": "Class ListValue | Czasoport Documentation",
    "keywords": "Class ListValue Namespace Ink.Runtime public class ListValue : Value<InkList> Inheritance object Object Value Value<InkList> ListValue Inherited Members Value<InkList>.value Value<InkList>.valueObject Value<InkList>.ToString() Value.Create(object) Value.Copy() Value.BadCastException(ValueType) Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ListValue() public ListValue() ListValue(InkList) public ListValue(InkList list) Parameters list InkList ListValue(InkListItem, int) public ListValue(InkListItem singleItem, int singleValue) Parameters singleItem InkListItem singleValue int Properties isTruthy public override bool isTruthy { get; } Property Value bool valueType public override ValueType valueType { get; } Property Value ValueType Methods Cast(ValueType) public override Value Cast(ValueType newType) Parameters newType ValueType Returns Value RetainListOriginsForAssignment(Object, Object) public static void RetainListOriginsForAssignment(Object oldValue, Object newValue) Parameters oldValue Object newValue Object"
  },
  "api/Ink.Runtime.NativeFunctionCall.html": {
    "href": "api/Ink.Runtime.NativeFunctionCall.html",
    "title": "Class NativeFunctionCall | Czasoport Documentation",
    "keywords": "Class NativeFunctionCall Namespace Ink.Runtime public class NativeFunctionCall : Object Inheritance object Object NativeFunctionCall Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NativeFunctionCall() public NativeFunctionCall() NativeFunctionCall(string) public NativeFunctionCall(string name) Parameters name string Fields Add public const string Add = \"+\" Field Value string All public const string All = \"LIST_ALL\" Field Value string And public const string And = \"&&\" Field Value string Ceiling public const string Ceiling = \"CEILING\" Field Value string Count public const string Count = \"LIST_COUNT\" Field Value string Divide public const string Divide = \"/\" Field Value string Equal public const string Equal = \"==\" Field Value string Float public const string Float = \"FLOAT\" Field Value string Floor public const string Floor = \"FLOOR\" Field Value string Greater public const string Greater = \">\" Field Value string GreaterThanOrEquals public const string GreaterThanOrEquals = \">=\" Field Value string Has public const string Has = \"?\" Field Value string Hasnt public const string Hasnt = \"!?\" Field Value string Int public const string Int = \"INT\" Field Value string Intersect public const string Intersect = \"^\" Field Value string Invert public const string Invert = \"LIST_INVERT\" Field Value string Less public const string Less = \"<\" Field Value string LessThanOrEquals public const string LessThanOrEquals = \"<=\" Field Value string ListMax public const string ListMax = \"LIST_MAX\" Field Value string ListMin public const string ListMin = \"LIST_MIN\" Field Value string Max public const string Max = \"MAX\" Field Value string Min public const string Min = \"MIN\" Field Value string Mod public const string Mod = \"%\" Field Value string Multiply public const string Multiply = \"*\" Field Value string Negate public const string Negate = \"_\" Field Value string Not public const string Not = \"!\" Field Value string NotEquals public const string NotEquals = \"!=\" Field Value string Or public const string Or = \"||\" Field Value string Pow public const string Pow = \"POW\" Field Value string Subtract public const string Subtract = \"-\" Field Value string ValueOfList public const string ValueOfList = \"LIST_VALUE\" Field Value string Properties name public string name { get; protected set; } Property Value string numberOfParameters public int numberOfParameters { get; protected set; } Property Value int Methods Call(List<Object>) public Object Call(List<Object> parameters) Parameters parameters List<Object> Returns Object CallExistsWithName(string) public static bool CallExistsWithName(string functionName) Parameters functionName string Returns bool CallWithName(string) public static NativeFunctionCall CallWithName(string functionName) Parameters functionName string Returns NativeFunctionCall ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.Object.html": {
    "href": "api/Ink.Runtime.Object.html",
    "title": "Class Object | Czasoport Documentation",
    "keywords": "Class Object Namespace Ink.Runtime Base class for all ink runtime content. public class Object Inheritance object Object Derived Choice ChoicePoint Container ControlCommand Divert Glue NativeFunctionCall Story Tag Value VariableAssignment VariableReference Void Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Object() public Object() Properties debugMetadata public DebugMetadata debugMetadata { get; set; } Property Value DebugMetadata ownDebugMetadata public DebugMetadata ownDebugMetadata { get; } Property Value DebugMetadata parent Runtime.Objects can be included in the main Story as a hierarchy. Usually parents are Container objects. (TODO: Always?) public Object parent { get; set; } Property Value Object The parent. path public Path path { get; } Property Value Path rootContentContainer public Container rootContentContainer { get; } Property Value Container Methods CompactPathString(Path) public string CompactPathString(Path otherPath) Parameters otherPath Path Returns string ConvertPathToRelative(Path) public Path ConvertPathToRelative(Path globalPath) Parameters globalPath Path Returns Path Copy() public virtual Object Copy() Returns Object DebugLineNumberOfPath(Path) public int? DebugLineNumberOfPath(Path path) Parameters path Path Returns int? Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool GetHashCode() public override int GetHashCode() Returns int ResolvePath(Path) public SearchResult ResolvePath(Path path) Parameters path Path Returns SearchResult SetChild<T>(ref T, T) public void SetChild<T>(ref T obj, T value) where T : Object Parameters obj T value T Type Parameters T Operators operator ==(Object, Object) public static bool operator ==(Object a, Object b) Parameters a Object b Object Returns bool implicit operator bool(Object) public static implicit operator bool(Object obj) Parameters obj Object Returns bool operator !=(Object, Object) public static bool operator !=(Object a, Object b) Parameters a Object b Object Returns bool"
  },
  "api/Ink.Runtime.Path.Component.html": {
    "href": "api/Ink.Runtime.Path.Component.html",
    "title": "Class Path.Component | Czasoport Documentation",
    "keywords": "Class Path.Component Namespace Ink.Runtime public class Path.Component : IEquatable<Path.Component> Inheritance object Path.Component Implements IEquatable<Path.Component> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Component(int) public Component(int index) Parameters index int Component(string) public Component(string name) Parameters name string Properties index public int index { get; } Property Value int isIndex public bool isIndex { get; } Property Value bool isParent public bool isParent { get; } Property Value bool name public string name { get; } Property Value string Methods Equals(Component) Indicates whether the current object is equal to another object of the same type. public bool Equals(Path.Component otherComp) Parameters otherComp Path.Component Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. ToParent() public static Path.Component ToParent() Returns Path.Component ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.Path.html": {
    "href": "api/Ink.Runtime.Path.html",
    "title": "Class Path | Czasoport Documentation",
    "keywords": "Class Path Namespace Ink.Runtime public class Path : IEquatable<Path> Inheritance object Path Implements IEquatable<Path> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Path() public Path() Path(Component, Path) public Path(Path.Component head, Path tail) Parameters head Path.Component tail Path Path(IEnumerable<Component>, bool) public Path(IEnumerable<Path.Component> components, bool relative = false) Parameters components IEnumerable<Path.Component> relative bool Path(string) public Path(string componentsString) Parameters componentsString string Properties componentsString public string componentsString { get; } Property Value string containsNamedComponent public bool containsNamedComponent { get; } Property Value bool head public Path.Component head { get; } Property Value Path.Component isRelative public bool isRelative { get; } Property Value bool lastComponent public Path.Component lastComponent { get; } Property Value Path.Component length public int length { get; } Property Value int self public static Path self { get; } Property Value Path tail public Path tail { get; } Property Value Path Methods Equals(Path) Indicates whether the current object is equal to another object of the same type. public bool Equals(Path otherPath) Parameters otherPath Path Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object) Determines whether the specified object is equal to the current object. public override bool Equals(object obj) Parameters obj object The object to compare with the current object. Returns bool true if the specified object is equal to the current object; otherwise, false. GetComponent(int) public Path.Component GetComponent(int index) Parameters index int Returns Path.Component GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. PathByAppendingComponent(Component) public Path PathByAppendingComponent(Path.Component c) Parameters c Path.Component Returns Path PathByAppendingPath(Path) public Path PathByAppendingPath(Path pathToAppend) Parameters pathToAppend Path Returns Path ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.Pointer.html": {
    "href": "api/Ink.Runtime.Pointer.html",
    "title": "Struct Pointer | Czasoport Documentation",
    "keywords": "Struct Pointer Namespace Ink.Runtime Internal structure used to point to a particular / current point in the story. Where Path is a set of components that make content fully addressable, this is a reference to the current container, and the index of the current piece of content within that container. This scheme makes it as fast and efficient as possible to increment the pointer (move the story forwards) in a way that's as native to the internal engine as possible. public struct Pointer Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors Pointer(Container, int) public Pointer(Container container, int index) Parameters container Container index int Fields Null public static Pointer Null Field Value Pointer container public Container container Field Value Container index public int index Field Value int Properties isNull public bool isNull { get; } Property Value bool path public Path path { get; } Property Value Path Methods Resolve() public Object Resolve() Returns Object StartOf(Container) public static Pointer StartOf(Container container) Parameters container Container Returns Pointer ToString() Returns the fully qualified type name of this instance. public override string ToString() Returns string The fully qualified type name."
  },
  "api/Ink.Runtime.ProfileNode.html": {
    "href": "api/Ink.Runtime.ProfileNode.html",
    "title": "Class ProfileNode | Czasoport Documentation",
    "keywords": "Class ProfileNode Namespace Ink.Runtime Node used in the hierarchical tree of timings used by the Profiler. Each node corresponds to a single line viewable in a UI-based representation. public class ProfileNode Inheritance object ProfileNode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ProfileNode() public ProfileNode() ProfileNode(string) public ProfileNode(string key) Parameters key string Fields key The key for the node corresponds to the printable name of the callstack element. public readonly string key Field Value string openInUI Horribly hacky field only used by ink unity integration, but saves constructing an entire data structure that mirrors the one in here purely to store the state of whether each node in the UI has been opened or not /// public bool openInUI Field Value bool Properties descendingOrderedNodes Returns a sorted enumerable of the nodes in descending order of how long they took to run. public IEnumerable<KeyValuePair<string, ProfileNode>> descendingOrderedNodes { get; } Property Value IEnumerable<KeyValuePair<string, ProfileNode>> hasChildren Whether this node contains any sub-nodes - i.e. does it call anything else that has been recorded? public bool hasChildren { get; } Property Value bool true if has children; otherwise, false. ownReport Generates a string giving timing information for this single node, including total milliseconds spent on the piece of ink, the time spent within itself (v.s. spent in children), as well as the number of samples (instruction steps) recorded for both too. public string ownReport { get; } Property Value string The own report. totalMillisecs Total number of milliseconds this node has been active for. public int totalMillisecs { get; } Property Value int Methods AddSample(string[], double) public void AddSample(string[] stack, double duration) Parameters stack string[] duration double ToString() String is a report of the sub-tree from this node, but without any of the header information that's prepended by the Profiler in its Report() method. public override string ToString() Returns string"
  },
  "api/Ink.Runtime.Profiler.html": {
    "href": "api/Ink.Runtime.Profiler.html",
    "title": "Class Profiler | Czasoport Documentation",
    "keywords": "Class Profiler Namespace Ink.Runtime Simple ink profiler that logs every instruction in the story and counts frequency and timing. To use: var profiler = story.StartProfiling(), (play your story for a bit) var reportStr = profiler.Report(); story.EndProfiling(); public class Profiler Inheritance object Profiler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Profiler() public Profiler() Properties rootNode The root node in the hierarchical tree of recorded ink timings. public ProfileNode rootNode { get; } Property Value ProfileNode Methods FormatMillisecs(double) public static string FormatMillisecs(double num) Parameters num double Returns string Megalog() Create a large log of all the internal instructions that were evaluated while profiling was active. Log is in a tab-separated format, for easy loading into a spreadsheet application. public string Megalog() Returns string PostContinue() public void PostContinue() PostSnapshot() public void PostSnapshot() PostStep() public void PostStep() PreContinue() public void PreContinue() PreSnapshot() public void PreSnapshot() PreStep() public void PreStep() Report() Generate a printable report based on the data recording during profiling. public string Report() Returns string Step(CallStack) public void Step(CallStack callstack) Parameters callstack CallStack StepLengthReport() Generate a printable report specifying the average and maximum times spent stepping over different internal ink instruction types. This report type is primarily used to profile the ink engine itself rather than your own specific ink. public string StepLengthReport() Returns string"
  },
  "api/Ink.Runtime.PushPopType.html": {
    "href": "api/Ink.Runtime.PushPopType.html",
    "title": "Enum PushPopType | Czasoport Documentation",
    "keywords": "Enum PushPopType Namespace Ink.Runtime public enum PushPopType Fields Function = 1 FunctionEvaluationFromGame = 2 Tunnel = 0"
  },
  "api/Ink.Runtime.SearchResult.html": {
    "href": "api/Ink.Runtime.SearchResult.html",
    "title": "Struct SearchResult | Czasoport Documentation",
    "keywords": "Struct SearchResult Namespace Ink.Runtime public struct SearchResult Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields approximate public bool approximate Field Value bool obj public Object obj Field Value Object Properties container public Container container { get; } Property Value Container correctObj public Object correctObj { get; } Property Value Object"
  },
  "api/Ink.Runtime.SimpleJson.Writer.html": {
    "href": "api/Ink.Runtime.SimpleJson.Writer.html",
    "title": "Class SimpleJson.Writer | Czasoport Documentation",
    "keywords": "Class SimpleJson.Writer Namespace Ink.Runtime public class SimpleJson.Writer Inheritance object SimpleJson.Writer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Writer() public Writer() Writer(Stream) public Writer(Stream stream) Parameters stream Stream Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Write(bool) public void Write(bool b) Parameters b bool Write(int) public void Write(int i) Parameters i int Write(float) public void Write(float f) Parameters f float Write(string, bool) public void Write(string str, bool escape = true) Parameters str string escape bool WriteArrayEnd() public void WriteArrayEnd() WriteArrayStart() public void WriteArrayStart() WriteNull() public void WriteNull() WriteObject(Action<Writer>) public void WriteObject(Action<SimpleJson.Writer> inner) Parameters inner Action<SimpleJson.Writer> WriteObjectEnd() public void WriteObjectEnd() WriteObjectStart() public void WriteObjectStart() WriteProperty(int, Action<Writer>) public void WriteProperty(int id, Action<SimpleJson.Writer> inner) Parameters id int inner Action<SimpleJson.Writer> WriteProperty(string, Action<Writer>) public void WriteProperty(string name, Action<SimpleJson.Writer> inner) Parameters name string inner Action<SimpleJson.Writer> WriteProperty(string, bool) public void WriteProperty(string name, bool content) Parameters name string content bool WriteProperty(string, int) public void WriteProperty(string name, int content) Parameters name string content int WriteProperty(string, string) public void WriteProperty(string name, string content) Parameters name string content string WritePropertyEnd() public void WritePropertyEnd() WritePropertyNameEnd() public void WritePropertyNameEnd() WritePropertyNameInner(string) public void WritePropertyNameInner(string str) Parameters str string WritePropertyNameStart() public void WritePropertyNameStart() WritePropertyStart(int) public void WritePropertyStart(int id) Parameters id int WritePropertyStart(string) public void WritePropertyStart(string name) Parameters name string WriteStringEnd() public void WriteStringEnd() WriteStringInner(string, bool) public void WriteStringInner(string str, bool escape = true) Parameters str string escape bool WriteStringStart() public void WriteStringStart()"
  },
  "api/Ink.Runtime.SimpleJson.html": {
    "href": "api/Ink.Runtime.SimpleJson.html",
    "title": "Class SimpleJson | Czasoport Documentation",
    "keywords": "Class SimpleJson Namespace Ink.Runtime Simple custom JSON serialisation implementation that takes JSON-able System.Collections that are produced by the ink engine and converts to and from JSON text. public static class SimpleJson Inheritance object SimpleJson Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods TextToArray(string) public static List<object> TextToArray(string text) Parameters text string Returns List<object> TextToDictionary(string) public static Dictionary<string, object> TextToDictionary(string text) Parameters text string Returns Dictionary<string, object>"
  },
  "api/Ink.Runtime.StatePatch.html": {
    "href": "api/Ink.Runtime.StatePatch.html",
    "title": "Class StatePatch | Czasoport Documentation",
    "keywords": "Class StatePatch Namespace Ink.Runtime public class StatePatch Inheritance object StatePatch Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StatePatch(StatePatch) public StatePatch(StatePatch toCopy) Parameters toCopy StatePatch Properties changedVariables public HashSet<string> changedVariables { get; } Property Value HashSet<string> globals public Dictionary<string, Object> globals { get; } Property Value Dictionary<string, Object> turnIndices public Dictionary<Container, int> turnIndices { get; } Property Value Dictionary<Container, int> visitCounts public Dictionary<Container, int> visitCounts { get; } Property Value Dictionary<Container, int> Methods AddChangedVariable(string) public void AddChangedVariable(string name) Parameters name string SetGlobal(string, Object) public void SetGlobal(string name, Object value) Parameters name string value Object SetTurnIndex(Container, int) public void SetTurnIndex(Container container, int index) Parameters container Container index int SetVisitCount(Container, int) public void SetVisitCount(Container container, int count) Parameters container Container count int TryGetGlobal(string, out Object) public bool TryGetGlobal(string name, out Object value) Parameters name string value Object Returns bool TryGetTurnIndex(Container, out int) public bool TryGetTurnIndex(Container container, out int index) Parameters container Container index int Returns bool TryGetVisitCount(Container, out int) public bool TryGetVisitCount(Container container, out int count) Parameters container Container count int Returns bool"
  },
  "api/Ink.Runtime.Story.ExternalFunction.html": {
    "href": "api/Ink.Runtime.Story.ExternalFunction.html",
    "title": "Delegate Story.ExternalFunction | Czasoport Documentation",
    "keywords": "Delegate Story.ExternalFunction Namespace Ink.Runtime General purpose delegate definition for bound EXTERNAL function definitions from ink. Note that this version isn't necessary if you have a function with three arguments or less - see the overloads of BindExternalFunction. public delegate object Story.ExternalFunction(object[] args) Parameters args object[] General purpose delegate definition for bound EXTERNAL function definitions from ink. Note that this version isn't necessary if you have a function with three arguments or less - see the overloads of BindExternalFunction. Returns object General purpose delegate definition for bound EXTERNAL function definitions from ink. Note that this version isn't necessary if you have a function with three arguments or less - see the overloads of BindExternalFunction."
  },
  "api/Ink.Runtime.Story.VariableObserver.html": {
    "href": "api/Ink.Runtime.Story.VariableObserver.html",
    "title": "Delegate Story.VariableObserver | Czasoport Documentation",
    "keywords": "Delegate Story.VariableObserver Namespace Ink.Runtime Delegate definition for variable observation - see ObserveVariable. public delegate void Story.VariableObserver(string variableName, object newValue) Parameters variableName string Delegate definition for variable observation - see ObserveVariable. newValue object Delegate definition for variable observation - see ObserveVariable."
  },
  "api/Ink.Runtime.Story.html": {
    "href": "api/Ink.Runtime.Story.html",
    "title": "Class Story | Czasoport Documentation",
    "keywords": "Class Story Namespace Ink.Runtime A Story is the core class that represents a complete Ink narrative, and manages the evaluation and state of it. public class Story : Object Inheritance object Object Story Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Story(Container, List<ListDefinition>) public Story(Container contentContainer, List<ListDefinition> lists = null) Parameters contentContainer Container lists List<ListDefinition> Story(string) Construct a Story object using a JSON string compiled through inklecate. public Story(string jsonString) Parameters jsonString string Fields inkVersionCurrent The current version of the ink story file format. public const int inkVersionCurrent = 21 Field Value int Properties aliveFlowNames Names of currently alive flows (not including the default flow) public List<string> aliveFlowNames { get; } Property Value List<string> allowExternalFunctionFallbacks An ink file can provide a fallback functions for when when an EXTERNAL has been left unbound by the client, and the fallback function will be called instead. Useful when testing a story in playmode, when it's not possible to write a client-side C# external function, but you don't want it to fail to run. public bool allowExternalFunctionFallbacks { get; set; } Property Value bool asyncContinueComplete If ContinueAsync was called (with milliseconds limit > 0) then this property will return false if the ink evaluation isn't yet finished, and you need to call it again in order for the Continue to fully complete. public bool asyncContinueComplete { get; } Property Value bool canContinue Check whether more content is available if you were to call Continue() - i.e. are we mid story rather than at a choice point or at the end. public bool canContinue { get; } Property Value bool true if it's possible to call Continue(). currentChoices The list of Choice objects available at the current point in the Story. This list will be populated as the Story is stepped through with the Continue() method. Once canContinue becomes false, this list will be populated, and is usually (but not always) on the final Continue() step. public List<Choice> currentChoices { get; } Property Value List<Choice> currentErrors Any errors generated during evaluation of the Story. public List<string> currentErrors { get; } Property Value List<string> currentFlowIsDefaultFlow Is the default flow currently active? By definition, will also return true if not using multi-flow functionality - see SwitchFlow public bool currentFlowIsDefaultFlow { get; } Property Value bool currentFlowName The current flow name if using multi-flow functionality - see SwitchFlow public string currentFlowName { get; } Property Value string currentTags Gets a list of tags as defined with '#' in source that were seen during the latest Continue() call. public List<string> currentTags { get; } Property Value List<string> currentText The latest line of text to be generated from a Continue() call. public string currentText { get; } Property Value string currentWarnings Any warnings generated during evaluation of the Story. public List<string> currentWarnings { get; } Property Value List<string> globalTags Get any global tags associated with the story. These are defined as hash tags defined at the very top of the story. public List<string> globalTags { get; } Property Value List<string> hasError Whether the currentErrors list contains any errors. THIS MAY BE REMOVED - you should be setting an error handler directly using Story.onError. public bool hasError { get; } Property Value bool hasWarning Whether the currentWarnings list contains any warnings. public bool hasWarning { get; } Property Value bool listDefinitions public ListDefinitionsOrigin listDefinitions { get; } Property Value ListDefinitionsOrigin mainContentContainer public Container mainContentContainer { get; } Property Value Container state The entire current state of the story including (but not limited to): Global variables Temporary variables Read/visit and turn counts The callstack and evaluation stacks The current threads public StoryState state { get; } Property Value StoryState variablesState The VariablesState object contains all the global variables in the story. However, note that there's more to the state of a Story than just the global variables. This is a convenience accessor to the full state object. public VariablesState variablesState { get; } Property Value VariablesState Methods BackgroundSaveComplete() See CopyStateForBackgroundThreadSave. This method releases the \"frozen\" save state, applying its patch that it was using internally. public void BackgroundSaveComplete() BindExternalFunction(string, Action, bool) Bind a C# Action to an ink EXTERNAL function declaration. public void BindExternalFunction(string funcName, Action act, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. act Action The C# action to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. BindExternalFunction(string, Func<object>, bool) Bind a C# function to an ink EXTERNAL function declaration. public void BindExternalFunction(string funcName, Func<object> func, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. func Func<object> The C# function to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. BindExternalFunctionGeneral(string, ExternalFunction, bool) Most general form of function binding that returns an object and takes an array of object parameters. The only way to bind a function with more than 3 arguments. public void BindExternalFunctionGeneral(string funcName, Story.ExternalFunction func, bool lookaheadSafe = true) Parameters funcName string EXTERNAL ink function name to bind to. func Story.ExternalFunction The C# function to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. BindExternalFunction<T>(string, Action<T>, bool) Bind a C# action to an ink EXTERNAL function declaration. public void BindExternalFunction<T>(string funcName, Action<T> act, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. act Action<T> The C# action to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. Type Parameters T BindExternalFunction<T>(string, Func<T, object>, bool) Bind a C# function to an ink EXTERNAL function declaration. public void BindExternalFunction<T>(string funcName, Func<T, object> func, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. func Func<T, object> The C# function to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. Type Parameters T BindExternalFunction<T1, T2>(string, Action<T1, T2>, bool) Bind a C# action to an ink EXTERNAL function declaration. public void BindExternalFunction<T1, T2>(string funcName, Action<T1, T2> act, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. act Action<T1, T2> The C# action to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. Type Parameters T1 T2 BindExternalFunction<T1, T2>(string, Func<T1, T2, object>, bool) Bind a C# function to an ink EXTERNAL function declaration. public void BindExternalFunction<T1, T2>(string funcName, Func<T1, T2, object> func, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. func Func<T1, T2, object> The C# function to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. Type Parameters T1 T2 BindExternalFunction<T1, T2, T3>(string, Action<T1, T2, T3>, bool) Bind a C# action to an ink EXTERNAL function declaration. public void BindExternalFunction<T1, T2, T3>(string funcName, Action<T1, T2, T3> act, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. act Action<T1, T2, T3> The C# action to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. Type Parameters T1 T2 T3 BindExternalFunction<T1, T2, T3>(string, Func<T1, T2, T3, object>, bool) Bind a C# function to an ink EXTERNAL function declaration. public void BindExternalFunction<T1, T2, T3>(string funcName, Func<T1, T2, T3, object> func, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. func Func<T1, T2, T3, object> The C# function to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. Type Parameters T1 T2 T3 BindExternalFunction<T1, T2, T3, T4>(string, Action<T1, T2, T3, T4>, bool) Bind a C# action to an ink EXTERNAL function declaration. public void BindExternalFunction<T1, T2, T3, T4>(string funcName, Action<T1, T2, T3, T4> act, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. act Action<T1, T2, T3, T4> The C# action to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. Type Parameters T1 T2 T3 T4 BindExternalFunction<T1, T2, T3, T4>(string, Func<T1, T2, T3, T4, object>, bool) Bind a C# function to an ink EXTERNAL function declaration. public void BindExternalFunction<T1, T2, T3, T4>(string funcName, Func<T1, T2, T3, T4, object> func, bool lookaheadSafe = false) Parameters funcName string EXTERNAL ink function name to bind to. func Func<T1, T2, T3, T4, object> The C# function to bind. lookaheadSafe bool The ink engine often evaluates further than you might expect beyond the current line just in case it sees glue that will cause the two lines to become one. In this case it's possible that a function can appear to be called twice instead of just once, and earlier than you expect. If it's safe for your function to be called in this way (since the result and side effect of the function will not change), then you can pass 'true'. Usually, you want to pass 'false', especially if you want some action to be performed in game code when this function is called. Type Parameters T1 T2 T3 T4 BuildStringOfHierarchy() Useful when debugging a (very short) story, to visualise the state of the story. Add this call as a watch and open the extended text. A left-arrow mark will denote the current point of the story. It's only recommended that this is used on very short debug stories, since it can end up generate a large quantity of text otherwise. public virtual string BuildStringOfHierarchy() Returns string CallExternalFunction(string, int) public void CallExternalFunction(string funcName, int numberOfArguments) Parameters funcName string numberOfArguments int ChooseChoiceIndex(int) Chooses the Choice from the currentChoices list with the given index. Internally, this sets the current content path to that pointed to by the Choice, ready to continue story evaluation. public void ChooseChoiceIndex(int choiceIdx) Parameters choiceIdx int ChoosePath(Path, bool) public void ChoosePath(Path p, bool incrementingTurnIndex = true) Parameters p Path incrementingTurnIndex bool ChoosePathString(string, bool, params object[]) Change the current position of the story to the given path. From here you can call Continue() to evaluate the next line. The path string is a dot-separated path as used internally by the engine. These examples should work: myKnot myKnot.myStitch Note however that this won't necessarily work: myKnot.myStitch.myLabelledChoice ...because of the way that content is nested within a weave structure. By default this will reset the callstack beforehand, which means that any tunnels, threads or functions you were in at the time of calling will be discarded. This is different from the behaviour of ChooseChoiceIndex, which will always keep the callstack, since the choices are known to come from the correct state, and known their source thread. You have the option of passing false to the resetCallstack parameter if you don't want this behaviour, and will leave any active threads, tunnels or function calls in-tact. This is potentially dangerous! If you're in the middle of a tunnel, it'll redirect only the inner-most tunnel, meaning that when you tunnel-return using '->->', it'll return to where you were before. This may be what you want though. However, if you're in the middle of a function, ChoosePathString will throw an exception. public void ChoosePathString(string path, bool resetCallstack = true, params object[] arguments) Parameters path string A dot-separted path string, as specified above. resetCallstack bool Whether to reset the callstack first (see summary description). arguments object[] Optional set of arguments to pass, if path is to a knot that takes them. ContentAtPath(Path) public SearchResult ContentAtPath(Path path) Parameters path Path Returns SearchResult Continue() Continue the story for one line of content, if possible. If you're not sure if there's more content available, for example if you want to check whether you're at a choice point or at the end of the story, you should call canContinue before calling this function. public string Continue() Returns string The line of text content. ContinueAsync(float) An \"asnychronous\" version of Continue that only partially evaluates the ink, with a budget of a certain time limit. It will exit ink evaluation early if the evaluation isn't complete within the time limit, with the asyncContinueComplete property being false. This is useful if ink evaluation takes a long time, and you want to distribute it over multiple game frames for smoother animation. If you pass a limit of zero, then it will fully evaluate the ink in the same way as calling Continue (and in fact, this exactly what Continue does internally). public void ContinueAsync(float millisecsLimitAsync) Parameters millisecsLimitAsync float ContinueMaximally() Continue the story until the next choice point or until it runs out of content. This is as opposed to the Continue() method which only evaluates one line of output at a time. public string ContinueMaximally() Returns string The resulting text evaluated by the ink engine, concatenated together. CopyStateForBackgroundThreadSave() Advanced usage! If you have a large story, and saving state to JSON takes too long for your framerate, you can temporarily freeze a copy of the state for saving on a separate thread. Internally, the engine maintains a \"diff patch\". When you've finished saving your state, call BackgroundSaveComplete() and that diff patch will be applied, allowing the story to continue in its usual mode. public StoryState CopyStateForBackgroundThreadSave() Returns StoryState The state for background thread save. EndProfiling() Stop recording ink profiling information during calls to Continue on Story. To generate a report from the profiler, call public void EndProfiling() Error(string, bool) public void Error(string message, bool useEndLineNumber = false) Parameters message string useEndLineNumber bool EvaluateExpression(Container) public Object EvaluateExpression(Container exprContainer) Parameters exprContainer Container Returns Object EvaluateFunction(string, params object[]) Evaluates a function defined in ink. public object EvaluateFunction(string functionName, params object[] arguments) Parameters functionName string The name of the function as declared in ink. arguments object[] The arguments that the ink function takes, if any. Note that we don't (can't) do any validation on the number of arguments right now, so make sure you get it right! Returns object The return value as returned from the ink function with ~ return myValue, or null if nothing is returned. EvaluateFunction(string, out string, params object[]) Evaluates a function defined in ink, and gathers the possibly multi-line text as generated by the function. This text output is any text written as normal content within the function, as opposed to the return value, as returned with ~ return. public object EvaluateFunction(string functionName, out string textOutput, params object[] arguments) Parameters functionName string The name of the function as declared in ink. textOutput string The text content produced by the function via normal ink, if any. arguments object[] The arguments that the ink function takes, if any. Note that we don't (can't) do any validation on the number of arguments right now, so make sure you get it right! Returns object The return value as returned from the ink function with ~ return myValue, or null if nothing is returned. HasFunction(string) Checks if a function exists. public bool HasFunction(string functionName) Parameters functionName string The name of the function as declared in ink. Returns bool True if the function exists, else false. KnotContainerWithName(string) public Container KnotContainerWithName(string name) Parameters name string Returns Container ObserveVariable(string, VariableObserver) When the named global variable changes it's value, the observer will be called to notify it of the change. Note that if the value changes multiple times within the ink, the observer will only be called once, at the end of the ink's evaluation. If, during the evaluation, it changes and then changes back again to its original value, it will still be called. Note that the observer will also be fired if the value of the variable is changed externally to the ink, by directly setting a value in story.variablesState. public void ObserveVariable(string variableName, Story.VariableObserver observer) Parameters variableName string The name of the global variable to observe. observer Story.VariableObserver A delegate function to call when the variable changes. ObserveVariables(IList<string>, VariableObserver) Convenience function to allow multiple variables to be observed with the same observer delegate function. See the singular ObserveVariable for details. The observer will get one call for every variable that has changed. public void ObserveVariables(IList<string> variableNames, Story.VariableObserver observer) Parameters variableNames IList<string> The set of variables to observe. observer Story.VariableObserver The delegate function to call when any of the named variables change. PointerAtPath(Path) public Pointer PointerAtPath(Path path) Parameters path Path Returns Pointer RemoveFlow(string) public void RemoveFlow(string flowName) Parameters flowName string RemoveVariableObserver(VariableObserver, string) Removes the variable observer, to stop getting variable change notifications. If you pass a specific variable name, it will stop observing that particular one. If you pass null (or leave it blank, since it's optional), then the observer will be removed from all variables that it's subscribed to. If you pass in a specific variable name and null for the the observer, all observers for that variable will be removed. public void RemoveVariableObserver(Story.VariableObserver observer = null, string specificVariableName = null) Parameters observer Story.VariableObserver (Optional) The observer to stop observing. specificVariableName string (Optional) Specific variable name to stop observing. ResetCallstack() Unwinds the callstack. Useful to reset the Story's evaluation without actually changing any meaningful state, for example if you want to exit a section of story prematurely and tell it to go elsewhere with a call to ChoosePathString(...). Doing so without calling ResetCallstack() could cause unexpected issues if, for example, the Story was in a tunnel already. public void ResetCallstack() ResetState() Reset the Story back to its initial state as it was when it was first constructed. public void ResetState() StartProfiling() Start recording ink profiling information during calls to Continue on Story. Return a Profiler instance that you can request a report from when you're finished. public Profiler StartProfiling() Returns Profiler SwitchFlow(string) public void SwitchFlow(string flowName) Parameters flowName string SwitchToDefaultFlow() public void SwitchToDefaultFlow() TagsForContentAtPath(string) Gets any tags associated with a particular knot or knot.stitch. These are defined as hash tags defined at the very top of a knot or stitch. public List<string> TagsForContentAtPath(string path) Parameters path string The path of the knot or stitch, in the form \"knot\" or \"knot.stitch\". Returns List<string> ToJson() The Story itself in JSON representation. public string ToJson() Returns string ToJson(Stream) The Story itself in JSON representation. public void ToJson(Stream stream) Parameters stream Stream TryGetExternalFunction(string, out ExternalFunction) public bool TryGetExternalFunction(string functionName, out Story.ExternalFunction externalFunction) Parameters functionName string externalFunction Story.ExternalFunction Returns bool UnbindExternalFunction(string) Remove a binding for a named EXTERNAL ink function. public void UnbindExternalFunction(string funcName) Parameters funcName string ValidateExternalBindings() Check that all EXTERNAL ink functions have a valid bound C# function. Note that this is automatically called on the first call to Continue(). public void ValidateExternalBindings() Warning(string) public void Warning(string message) Parameters message string Events onChoosePathString Callback for when a path string is chosen public event Action<string, object[]> onChoosePathString Event Type Action<string, object[]> onCompleteEvaluateFunction Callback for when a function has been evaluated This is necessary because evaluating a function can cause continuing public event Action<string, object[], string, object> onCompleteEvaluateFunction Event Type Action<string, object[], string, object> onDidContinue Callback for when ContinueInternal is complete public event Action onDidContinue Event Type Action onError Error handler for all runtime errors in ink - i.e. problems with the source ink itself that are only discovered when playing the story. It's strongly recommended that you assign an error handler to your story instance to avoid getting exceptions for ink errors. public event ErrorHandler onError Event Type ErrorHandler onEvaluateFunction Callback for when a function is about to be evaluated public event Action<string, object[]> onEvaluateFunction Event Type Action<string, object[]> onMakeChoice Callback for when a choice is about to be executed public event Action<Choice> onMakeChoice Event Type Action<Choice>"
  },
  "api/Ink.Runtime.StoryException.html": {
    "href": "api/Ink.Runtime.StoryException.html",
    "title": "Class StoryException | Czasoport Documentation",
    "keywords": "Class StoryException Namespace Ink.Runtime Exception that represents an error when running a Story at runtime. An exception being thrown of this type is typically when there's a bug in your ink, rather than in the ink engine itself! public class StoryException : Exception, ISerializable Inheritance object Exception StoryException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StoryException() Constructs a default instance of a StoryException without a message. public StoryException() StoryException(string) Constructs an instance of a StoryException with a message. public StoryException(string message) Parameters message string The error message. Fields useEndLineNumber public bool useEndLineNumber Field Value bool"
  },
  "api/Ink.Runtime.StoryState.html": {
    "href": "api/Ink.Runtime.StoryState.html",
    "title": "Class StoryState | Czasoport Documentation",
    "keywords": "Class StoryState Namespace Ink.Runtime All story state information is included in the StoryState class, including global variables, read counts, the pointer to the current point in the story, the call stack (for tunnels, functions, etc), and a few other smaller bits and pieces. You can save the current state using the json serialisation functions ToJson and LoadJson. public class StoryState Inheritance object StoryState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StoryState(Story) public StoryState(Story story) Parameters story Story Fields kInkSaveStateVersion The current version of the state save file JSON-based format. public const int kInkSaveStateVersion = 10 Field Value int Properties aliveFlowNames public List<string> aliveFlowNames { get; } Property Value List<string> callStack public CallStack callStack { get; } Property Value CallStack callstackDepth public int callstackDepth { get; } Property Value int canContinue public bool canContinue { get; } Property Value bool currentChoices public List<Choice> currentChoices { get; } Property Value List<Choice> currentErrors public List<string> currentErrors { get; } Property Value List<string> currentFlowIsDefaultFlow public bool currentFlowIsDefaultFlow { get; } Property Value bool currentFlowName public string currentFlowName { get; } Property Value string currentPathString String representation of the location where the story currently is. public string currentPathString { get; } Property Value string currentPointer public Pointer currentPointer { get; set; } Property Value Pointer currentTags public List<string> currentTags { get; } Property Value List<string> currentText public string currentText { get; } Property Value string currentTurnIndex public int currentTurnIndex { get; } Property Value int currentWarnings public List<string> currentWarnings { get; } Property Value List<string> didSafeExit public bool didSafeExit { get; set; } Property Value bool divertedPointer public Pointer divertedPointer { get; set; } Property Value Pointer evaluationStack public List<Object> evaluationStack { get; } Property Value List<Object> generatedChoices public List<Choice> generatedChoices { get; } Property Value List<Choice> hasError public bool hasError { get; } Property Value bool hasWarning public bool hasWarning { get; } Property Value bool inExpressionEvaluation public bool inExpressionEvaluation { get; set; } Property Value bool inStringEvaluation public bool inStringEvaluation { get; } Property Value bool outputStream public List<Object> outputStream { get; } Property Value List<Object> outputStreamContainsContent public bool outputStreamContainsContent { get; } Property Value bool outputStreamEndsInNewline public bool outputStreamEndsInNewline { get; } Property Value bool previousPointer public Pointer previousPointer { get; set; } Property Value Pointer previousRandom public int previousRandom { get; set; } Property Value int story public Story story { get; set; } Property Value Story storySeed public int storySeed { get; set; } Property Value int variablesState public VariablesState variablesState { get; } Property Value VariablesState Methods AddError(string, bool) public void AddError(string message, bool isWarning) Parameters message string isWarning bool ApplyAnyPatch() public void ApplyAnyPatch() CleanOutputWhitespace(string) public string CleanOutputWhitespace(string str) Parameters str string Returns string CompleteFunctionEvaluationFromGame() public object CompleteFunctionEvaluationFromGame() Returns object CopyAndStartPatching() public StoryState CopyAndStartPatching() Returns StoryState ForceEnd() Ends the current ink flow, unwrapping the callstack but without affecting any variables. Useful if the ink is (say) in the middle a nested tunnel, and you want it to reset so that you can divert elsewhere using ChoosePathString(). Otherwise, after finishing the content you diverted to, it would continue where it left off. Calling this is equivalent to calling -> END in ink. public void ForceEnd() GoToStart() public void GoToStart() IncrementVisitCountForContainer(Container) public void IncrementVisitCountForContainer(Container container) Parameters container Container LoadJson(string) Loads a previously saved state in JSON format. public void LoadJson(string json) Parameters json string The JSON string to load. PassArgumentsToEvaluationStack(params object[]) public void PassArgumentsToEvaluationStack(params object[] arguments) Parameters arguments object[] PeekEvaluationStack() public Object PeekEvaluationStack() Returns Object PopCallstack(PushPopType?) public void PopCallstack(PushPopType? popType = null) Parameters popType PushPopType? PopEvaluationStack() public Object PopEvaluationStack() Returns Object PopEvaluationStack(int) public List<Object> PopEvaluationStack(int numberOfObjects) Parameters numberOfObjects int Returns List<Object> PopFromOutputStream(int) public void PopFromOutputStream(int count) Parameters count int PushEvaluationStack(Object) public void PushEvaluationStack(Object obj) Parameters obj Object PushToOutputStream(Object) public void PushToOutputStream(Object obj) Parameters obj Object RecordTurnIndexVisitToContainer(Container) public void RecordTurnIndexVisitToContainer(Container container) Parameters container Container ResetErrors() public void ResetErrors() ResetOutput(List<Object>) public void ResetOutput(List<Object> objs = null) Parameters objs List<Object> RestoreAfterPatch() public void RestoreAfterPatch() SetChosenPath(Path, bool) public void SetChosenPath(Path path, bool incrementingTurnIndex) Parameters path Path incrementingTurnIndex bool StartFunctionEvaluationFromGame(Container, params object[]) public void StartFunctionEvaluationFromGame(Container funcContainer, params object[] arguments) Parameters funcContainer Container arguments object[] ToJson() Exports the current state to json format, in order to save the game. public string ToJson() Returns string The save state in json format. ToJson(Stream) Exports the current state to json format, in order to save the game. For this overload you can pass in a custom stream, such as a FileStream. public void ToJson(Stream stream) Parameters stream Stream TryExitFunctionEvaluationFromGame() public bool TryExitFunctionEvaluationFromGame() Returns bool TurnsSinceForContainer(Container) public int TurnsSinceForContainer(Container container) Parameters container Container Returns int VisitCountAtPathString(string) Gets the visit/read count of a particular Container at the given path. For a knot or stitch, that path string will be in the form: knot knot.stitch public int VisitCountAtPathString(string pathString) Parameters pathString string The dot-separated path string of the specific knot or stitch. Returns int The number of times the specific knot or stitch has been enountered by the ink engine. VisitCountForContainer(Container) public int VisitCountForContainer(Container container) Parameters container Container Returns int Events onDidLoadState Callback for when a state is loaded public event Action onDidLoadState Event Type Action"
  },
  "api/Ink.Runtime.StringExt.html": {
    "href": "api/Ink.Runtime.StringExt.html",
    "title": "Class StringExt | Czasoport Documentation",
    "keywords": "Class StringExt Namespace Ink.Runtime public static class StringExt Inheritance object StringExt Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Join<T>(string, List<T>) public static string Join<T>(string separator, List<T> objects) Parameters separator string objects List<T> Returns string Type Parameters T"
  },
  "api/Ink.Runtime.StringValue.html": {
    "href": "api/Ink.Runtime.StringValue.html",
    "title": "Class StringValue | Czasoport Documentation",
    "keywords": "Class StringValue Namespace Ink.Runtime public class StringValue : Value<string> Inheritance object Object Value Value<string> StringValue Inherited Members Value<string>.value Value<string>.valueObject Value<string>.ToString() Value.Create(object) Value.Copy() Value.BadCastException(ValueType) Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StringValue() public StringValue() StringValue(string) public StringValue(string str) Parameters str string Properties isInlineWhitespace public bool isInlineWhitespace { get; } Property Value bool isNewline public bool isNewline { get; } Property Value bool isNonWhitespace public bool isNonWhitespace { get; } Property Value bool isTruthy public override bool isTruthy { get; } Property Value bool valueType public override ValueType valueType { get; } Property Value ValueType Methods Cast(ValueType) public override Value Cast(ValueType newType) Parameters newType ValueType Returns Value"
  },
  "api/Ink.Runtime.Tag.html": {
    "href": "api/Ink.Runtime.Tag.html",
    "title": "Class Tag | Czasoport Documentation",
    "keywords": "Class Tag Namespace Ink.Runtime public class Tag : Object Inheritance object Object Tag Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Tag(string) public Tag(string tagText) Parameters tagText string Properties text public string text { get; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.Value-1.html": {
    "href": "api/Ink.Runtime.Value-1.html",
    "title": "Class Value<T> | Czasoport Documentation",
    "keywords": "Class Value<T> Namespace Ink.Runtime public abstract class Value<T> : Value Type Parameters T Inheritance object Object Value Value<T> Derived BoolValue DivertTargetValue FloatValue IntValue ListValue StringValue VariablePointerValue Inherited Members Value.valueType Value.isTruthy Value.Cast(ValueType) Value.Create(object) Value.Copy() Value.BadCastException(ValueType) Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Value(T) public Value(T val) Parameters val T Properties value public T value { get; set; } Property Value T valueObject public override object valueObject { get; } Property Value object Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.Value.html": {
    "href": "api/Ink.Runtime.Value.html",
    "title": "Class Value | Czasoport Documentation",
    "keywords": "Class Value Namespace Ink.Runtime public abstract class Value : Object Inheritance object Object Value Derived Value<T> Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties isTruthy public abstract bool isTruthy { get; } Property Value bool valueObject public abstract object valueObject { get; } Property Value object valueType public abstract ValueType valueType { get; } Property Value ValueType Methods BadCastException(ValueType) protected StoryException BadCastException(ValueType targetType) Parameters targetType ValueType Returns StoryException Cast(ValueType) public abstract Value Cast(ValueType newType) Parameters newType ValueType Returns Value Copy() public override Object Copy() Returns Object Create(object) public static Value Create(object val) Parameters val object Returns Value"
  },
  "api/Ink.Runtime.ValueType.html": {
    "href": "api/Ink.Runtime.ValueType.html",
    "title": "Enum ValueType | Czasoport Documentation",
    "keywords": "Enum ValueType Namespace Ink.Runtime public enum ValueType Fields Bool = -1 DivertTarget = 4 Float = 1 Int = 0 List = 2 String = 3 VariablePointer = 5"
  },
  "api/Ink.Runtime.VariableAssignment.html": {
    "href": "api/Ink.Runtime.VariableAssignment.html",
    "title": "Class VariableAssignment | Czasoport Documentation",
    "keywords": "Class VariableAssignment Namespace Ink.Runtime public class VariableAssignment : Object Inheritance object Object VariableAssignment Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VariableAssignment() public VariableAssignment() VariableAssignment(string, bool) public VariableAssignment(string variableName, bool isNewDeclaration) Parameters variableName string isNewDeclaration bool Properties isGlobal public bool isGlobal { get; set; } Property Value bool isNewDeclaration public bool isNewDeclaration { get; protected set; } Property Value bool variableName public string variableName { get; protected set; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.VariablePointerValue.html": {
    "href": "api/Ink.Runtime.VariablePointerValue.html",
    "title": "Class VariablePointerValue | Czasoport Documentation",
    "keywords": "Class VariablePointerValue Namespace Ink.Runtime public class VariablePointerValue : Value<string> Inheritance object Object Value Value<string> VariablePointerValue Inherited Members Value<string>.value Value<string>.valueObject Value.Create(object) Value.BadCastException(ValueType) Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VariablePointerValue() public VariablePointerValue() VariablePointerValue(string, int) public VariablePointerValue(string variableName, int contextIndex = -1) Parameters variableName string contextIndex int Properties contextIndex public int contextIndex { get; set; } Property Value int isTruthy public override bool isTruthy { get; } Property Value bool valueType public override ValueType valueType { get; } Property Value ValueType variableName public string variableName { get; set; } Property Value string Methods Cast(ValueType) public override Value Cast(ValueType newType) Parameters newType ValueType Returns Value Copy() public override Object Copy() Returns Object ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.VariableReference.html": {
    "href": "api/Ink.Runtime.VariableReference.html",
    "title": "Class VariableReference | Czasoport Documentation",
    "keywords": "Class VariableReference Namespace Ink.Runtime public class VariableReference : Object Inheritance object Object VariableReference Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VariableReference() public VariableReference() VariableReference(string) public VariableReference(string name) Parameters name string Properties containerForCount public Container containerForCount { get; } Property Value Container name public string name { get; set; } Property Value string pathForCount public Path pathForCount { get; set; } Property Value Path pathStringForCount public string pathStringForCount { get; set; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.Runtime.VariablesState.VariableChanged.html": {
    "href": "api/Ink.Runtime.VariablesState.VariableChanged.html",
    "title": "Delegate VariablesState.VariableChanged | Czasoport Documentation",
    "keywords": "Delegate VariablesState.VariableChanged Namespace Ink.Runtime public delegate void VariablesState.VariableChanged(string variableName, Object newValue) Parameters variableName string newValue Object"
  },
  "api/Ink.Runtime.VariablesState.html": {
    "href": "api/Ink.Runtime.VariablesState.html",
    "title": "Class VariablesState | Czasoport Documentation",
    "keywords": "Class VariablesState Namespace Ink.Runtime Encompasses all the global variables in an ink Story, and allows binding of a VariableChanged event so that that game code can be notified whenever the global variables change. public class VariablesState : IEnumerable<string>, IEnumerable Inheritance object VariablesState Implements IEnumerable<string> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors VariablesState(CallStack, ListDefinitionsOrigin) public VariablesState(CallStack callStack, ListDefinitionsOrigin listDefsOrigin) Parameters callStack CallStack listDefsOrigin ListDefinitionsOrigin Fields dontSaveDefaultValues When saving out JSON state, we can skip saving global values that remain equal to the initial values that were declared in ink. This makes the save file (potentially) much smaller assuming that at least a portion of the globals haven't changed. However, it can also take marginally longer to save in the case that the majority HAVE changed, since it has to compare all globals. It may also be useful to turn this off for testing worst case save timing. public static bool dontSaveDefaultValues Field Value bool patch public StatePatch patch Field Value StatePatch Properties this[string] Get or set the value of a named global ink variable. The types available are the standard ink types. Certain types will be implicitly casted when setting. For example, doubles to floats, longs to ints, and bools to ints. public object this[string variableName] { get; set; } Parameters variableName string Property Value object batchObservingVariableChanges public bool batchObservingVariableChanges { get; set; } Property Value bool callStack public CallStack callStack { get; set; } Property Value CallStack Methods ApplyPatch() public void ApplyPatch() Assign(VariableAssignment, Object) public void Assign(VariableAssignment varAss, Object value) Parameters varAss VariableAssignment value Object GetEnumerator() Enumerator to allow iteration over all global variables by name. public IEnumerator<string> GetEnumerator() Returns IEnumerator<string> GetVariableWithName(string) public Object GetVariableWithName(string name) Parameters name string Returns Object GlobalVariableExistsWithName(string) public bool GlobalVariableExistsWithName(string name) Parameters name string Returns bool RuntimeObjectsEqual(Object, Object) public bool RuntimeObjectsEqual(Object obj1, Object obj2) Parameters obj1 Object obj2 Object Returns bool SetGlobal(string, Object) public void SetGlobal(string variableName, Object value) Parameters variableName string value Object SetJsonToken(Dictionary<string, object>) public void SetJsonToken(Dictionary<string, object> jToken) Parameters jToken Dictionary<string, object> SnapshotDefaultGlobals() public void SnapshotDefaultGlobals() TryGetDefaultVariableValue(string) public Object TryGetDefaultVariableValue(string name) Parameters name string Returns Object ValueAtVariablePointer(VariablePointerValue) public Object ValueAtVariablePointer(VariablePointerValue pointer) Parameters pointer VariablePointerValue Returns Object WriteJson(Writer) public void WriteJson(SimpleJson.Writer writer) Parameters writer SimpleJson.Writer Events variableChangedEvent public event VariablesState.VariableChanged variableChangedEvent Event Type VariablesState.VariableChanged"
  },
  "api/Ink.Runtime.Void.html": {
    "href": "api/Ink.Runtime.Void.html",
    "title": "Class Void | Czasoport Documentation",
    "keywords": "Class Void Namespace Ink.Runtime public class Void : Object Inheritance object Object Void Inherited Members Object.parent Object.debugMetadata Object.ownDebugMetadata Object.DebugLineNumberOfPath(Path) Object.path Object.ResolvePath(Path) Object.ConvertPathToRelative(Path) Object.CompactPathString(Path) Object.rootContentContainer Object.Copy() Object.SetChild<T>(ref T, T) Object.Equals(object) Object.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Void() public Void()"
  },
  "api/Ink.Runtime.html": {
    "href": "api/Ink.Runtime.html",
    "title": "Namespace Ink.Runtime | Czasoport Documentation",
    "keywords": "Namespace Ink.Runtime Classes BoolValue CallStack CallStack.Element CallStack.Thread Choice A generated Choice from the story. A single ChoicePoint in the Story could potentially generate different Choices dynamically dependent on state, so they're separated. ChoicePoint The ChoicePoint represents the point within the Story where a Choice instance gets generated. The distinction is made because the text of the Choice can be dynamically generated. Container ControlCommand DebugMetadata Divert DivertTargetValue FloatValue Flow Glue InkList The InkList is the underlying type that's used to store an instance of a list in ink. It's not used for the definition of the list, but for a list value that's stored in a variable. Somewhat confusingly, it's backed by a C# Dictionary, and has nothing to do with a C# List! IntValue Json ListDefinition ListDefinitionsOrigin ListValue NativeFunctionCall Object Base class for all ink runtime content. Path Path.Component ProfileNode Node used in the hierarchical tree of timings used by the Profiler. Each node corresponds to a single line viewable in a UI-based representation. Profiler Simple ink profiler that logs every instruction in the story and counts frequency and timing. To use: var profiler = story.StartProfiling(), (play your story for a bit) var reportStr = profiler.Report(); story.EndProfiling(); SimpleJson Simple custom JSON serialisation implementation that takes JSON-able System.Collections that are produced by the ink engine and converts to and from JSON text. SimpleJson.Writer StatePatch Story A Story is the core class that represents a complete Ink narrative, and manages the evaluation and state of it. StoryException Exception that represents an error when running a Story at runtime. An exception being thrown of this type is typically when there's a bug in your ink, rather than in the ink engine itself! StoryState All story state information is included in the StoryState class, including global variables, read counts, the pointer to the current point in the story, the call stack (for tunnels, functions, etc), and a few other smaller bits and pieces. You can save the current state using the json serialisation functions ToJson and LoadJson. StringExt StringValue Tag Value Value<T> VariableAssignment VariablePointerValue VariableReference VariablesState Encompasses all the global variables in an ink Story, and allows binding of a VariableChanged event so that that game code can be notified whenever the global variables change. Void Structs InkListItem The underlying type for a list item in ink. It stores the original list definition name as well as the item name, but without the value of the item. When the value is stored, it's stored in a KeyValuePair of InkListItem and int. Pointer Internal structure used to point to a particular / current point in the story. Where Path is a set of components that make content fully addressable, this is a reference to the current container, and the index of the current piece of content within that container. This scheme makes it as fast and efficient as possible to increment the pointer (move the story forwards) in a way that's as native to the internal engine as possible. SearchResult Interfaces INamedContent Enums Container.CountFlags ControlCommand.CommandType PushPopType ValueType Delegates Story.ExternalFunction General purpose delegate definition for bound EXTERNAL function definitions from ink. Note that this version isn't necessary if you have a function with three arguments or less - see the overloads of BindExternalFunction. Story.VariableObserver Delegate definition for variable observation - see ObserveVariable. VariablesState.VariableChanged"
  },
  "api/Ink.Stats.html": {
    "href": "api/Ink.Stats.html",
    "title": "Struct Stats | Czasoport Documentation",
    "keywords": "Struct Stats Namespace Ink public struct Stats Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields choices public int choices Field Value int diverts public int diverts Field Value int functions public int functions Field Value int gathers public int gathers Field Value int knots public int knots Field Value int stitches public int stitches Field Value int words public int words Field Value int Methods Generate(Story) public static Stats Generate(Story story) Parameters story Story Returns Stats"
  },
  "api/Ink.StringParser.ErrorHandler.html": {
    "href": "api/Ink.StringParser.ErrorHandler.html",
    "title": "Delegate StringParser.ErrorHandler | Czasoport Documentation",
    "keywords": "Delegate StringParser.ErrorHandler Namespace Ink public delegate void StringParser.ErrorHandler(string message, int index, int lineIndex, bool isWarning) Parameters message string index int lineIndex int isWarning bool"
  },
  "api/Ink.StringParser.ParseRule.html": {
    "href": "api/Ink.StringParser.ParseRule.html",
    "title": "Delegate StringParser.ParseRule | Czasoport Documentation",
    "keywords": "Delegate StringParser.ParseRule Namespace Ink public delegate object StringParser.ParseRule() Returns object"
  },
  "api/Ink.StringParser.ParseSuccessStruct.html": {
    "href": "api/Ink.StringParser.ParseSuccessStruct.html",
    "title": "Class StringParser.ParseSuccessStruct | Czasoport Documentation",
    "keywords": "Class StringParser.ParseSuccessStruct Namespace Ink public class StringParser.ParseSuccessStruct Inheritance object StringParser.ParseSuccessStruct Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Ink.StringParser.SpecificParseRule-1.html": {
    "href": "api/Ink.StringParser.SpecificParseRule-1.html",
    "title": "Delegate StringParser.SpecificParseRule<T> | Czasoport Documentation",
    "keywords": "Delegate StringParser.SpecificParseRule<T> Namespace Ink public delegate T StringParser.SpecificParseRule<T>() where T : class Returns T Type Parameters T"
  },
  "api/Ink.StringParser.html": {
    "href": "api/Ink.StringParser.html",
    "title": "Class StringParser | Czasoport Documentation",
    "keywords": "Class StringParser Namespace Ink public class StringParser Inheritance object StringParser Derived CommentEliminator InkParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StringParser(string) public StringParser(string str) Parameters str string Fields ParseSuccess public static StringParser.ParseSuccessStruct ParseSuccess Field Value StringParser.ParseSuccessStruct numbersCharacterSet public static CharacterSet numbersCharacterSet Field Value CharacterSet Properties characterInLineIndex public int characterInLineIndex { get; set; } Property Value int currentCharacter public char currentCharacter { get; } Property Value char endOfInput public bool endOfInput { get; } Property Value bool errorHandler protected StringParser.ErrorHandler errorHandler { get; set; } Property Value StringParser.ErrorHandler hadError public bool hadError { get; protected set; } Property Value bool index public int index { get; } Property Value int inputString public string inputString { get; } Property Value string lineIndex public int lineIndex { get; set; } Property Value int remainingLength public int remainingLength { get; } Property Value int remainingString public string remainingString { get; } Property Value string state public StringParserState state { get; } Property Value StringParserState Methods BeginRule() protected int BeginRule() Returns int CancelRule(int) protected void CancelRule(int expectedRuleId) Parameters expectedRuleId int Error(string, bool) protected void Error(string message, bool isWarning = false) Parameters message string isWarning bool ErrorOnLine(string, int, bool) protected void ErrorOnLine(string message, int lineNumber, bool isWarning) Parameters message string lineNumber int isWarning bool ErrorWithParsedObject(string, Object, bool) protected void ErrorWithParsedObject(string message, Object result, bool isWarning = false) Parameters message string result Object isWarning bool Exclude(ParseRule) public StringParser.ParseRule Exclude(StringParser.ParseRule rule) Parameters rule StringParser.ParseRule Returns StringParser.ParseRule Expect(ParseRule, string, ParseRule) protected object Expect(StringParser.ParseRule rule, string message = null, StringParser.ParseRule recoveryRule = null) Parameters rule StringParser.ParseRule message string recoveryRule StringParser.ParseRule Returns object FailRule(int) protected object FailRule(int expectedRuleId) Parameters expectedRuleId int Returns object GetFlag(uint) public bool GetFlag(uint flag) Parameters flag uint Returns bool Interleave<T>(ParseRule, ParseRule, ParseRule, bool) public List<T> Interleave<T>(StringParser.ParseRule ruleA, StringParser.ParseRule ruleB, StringParser.ParseRule untilTerminator = null, bool flatten = true) Parameters ruleA StringParser.ParseRule ruleB StringParser.ParseRule untilTerminator StringParser.ParseRule flatten bool Returns List<T> Type Parameters T LineRemainder() public string LineRemainder() Returns string OneOf(params ParseRule[]) public object OneOf(params StringParser.ParseRule[] array) Parameters array ParseRule[] Returns object OneOrMore(ParseRule) public List<object> OneOrMore(StringParser.ParseRule rule) Parameters rule StringParser.ParseRule Returns List<object> Optional(ParseRule) public StringParser.ParseRule Optional(StringParser.ParseRule rule) Parameters rule StringParser.ParseRule Returns StringParser.ParseRule OptionalExclude(ParseRule) public StringParser.ParseRule OptionalExclude(StringParser.ParseRule rule) Parameters rule StringParser.ParseRule Returns StringParser.ParseRule ParseCharactersFromCharSet(CharacterSet, bool, int) public string ParseCharactersFromCharSet(CharacterSet charSet, bool shouldIncludeChars = true, int maxCount = -1) Parameters charSet CharacterSet shouldIncludeChars bool maxCount int Returns string ParseCharactersFromString(string, bool, int) public string ParseCharactersFromString(string str, bool shouldIncludeStrChars, int maxCount = -1) Parameters str string shouldIncludeStrChars bool maxCount int Returns string ParseCharactersFromString(string, int) public string ParseCharactersFromString(string str, int maxCount = -1) Parameters str string maxCount int Returns string ParseFloat() public float? ParseFloat() Returns float? ParseInt() public int? ParseInt() Returns int? ParseNewline() protected string ParseNewline() Returns string ParseObject(ParseRule) public object ParseObject(StringParser.ParseRule rule) Parameters rule StringParser.ParseRule Returns object ParseSingleCharacter() public char ParseSingleCharacter() Returns char ParseString(string) public string ParseString(string str) Parameters str string Returns string ParseUntil(ParseRule, CharacterSet, CharacterSet) public string ParseUntil(StringParser.ParseRule stopRule, CharacterSet pauseCharacters = null, CharacterSet endCharacters = null) Parameters stopRule StringParser.ParseRule pauseCharacters CharacterSet endCharacters CharacterSet Returns string ParseUntilCharactersFromCharSet(CharacterSet, int) public string ParseUntilCharactersFromCharSet(CharacterSet charSet, int maxCount = -1) Parameters charSet CharacterSet maxCount int Returns string ParseUntilCharactersFromString(string, int) public string ParseUntilCharactersFromString(string str, int maxCount = -1) Parameters str string maxCount int Returns string Parse<T>(SpecificParseRule<T>) public T Parse<T>(StringParser.SpecificParseRule<T> rule) where T : class Parameters rule StringParser.SpecificParseRule<T> Returns T Type Parameters T Peek(ParseRule) public object Peek(StringParser.ParseRule rule) Parameters rule StringParser.ParseRule Returns object PreProcessInputString(string) protected virtual string PreProcessInputString(string str) Parameters str string Returns string RuleDidSucceed(object, Element, Element) protected virtual void RuleDidSucceed(object result, StringParserState.Element startState, StringParserState.Element endState) Parameters result object startState StringParserState.Element endState StringParserState.Element SetFlag(uint, bool) public void SetFlag(uint flag, bool trueOrFalse) Parameters flag uint trueOrFalse bool String(string) protected StringParser.ParseRule String(string str) Parameters str string Returns StringParser.ParseRule SucceedRule(int, object) protected object SucceedRule(int expectedRuleId, object result = null) Parameters expectedRuleId int result object Returns object Warning(string) protected void Warning(string message) Parameters message string"
  },
  "api/Ink.StringParserState.Element.html": {
    "href": "api/Ink.StringParserState.Element.html",
    "title": "Class StringParserState.Element | Czasoport Documentation",
    "keywords": "Class StringParserState.Element Namespace Ink public class StringParserState.Element Inheritance object StringParserState.Element Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Element() public Element() Fields characterInLineIndex public int characterInLineIndex Field Value int characterIndex public int characterIndex Field Value int customFlags public uint customFlags Field Value uint lineIndex public int lineIndex Field Value int reportedErrorInScope public bool reportedErrorInScope Field Value bool uniqueId public int uniqueId Field Value int Methods CopyFrom(Element) public void CopyFrom(StringParserState.Element fromElement) Parameters fromElement StringParserState.Element SquashFrom(Element) public void SquashFrom(StringParserState.Element fromElement) Parameters fromElement StringParserState.Element"
  },
  "api/Ink.StringParserState.html": {
    "href": "api/Ink.StringParserState.html",
    "title": "Class StringParserState | Czasoport Documentation",
    "keywords": "Class StringParserState Namespace Ink public class StringParserState Inheritance object StringParserState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors StringParserState() public StringParserState() Properties characterInLineIndex public int characterInLineIndex { get; set; } Property Value int characterIndex public int characterIndex { get; set; } Property Value int currentElement protected StringParserState.Element currentElement { get; } Property Value StringParserState.Element customFlags public uint customFlags { get; set; } Property Value uint errorReportedAlreadyInScope public bool errorReportedAlreadyInScope { get; } Property Value bool lineIndex public int lineIndex { get; set; } Property Value int stackHeight public int stackHeight { get; } Property Value int Methods NoteErrorReported() public void NoteErrorReported() Peek(int) public StringParserState.Element Peek(int expectedRuleId) Parameters expectedRuleId int Returns StringParserState.Element PeekPenultimate() public StringParserState.Element PeekPenultimate() Returns StringParserState.Element Pop(int) public void Pop(int expectedRuleId) Parameters expectedRuleId int Push() public int Push() Returns int Squash() public void Squash()"
  },
  "api/Ink.UnityIntegration.ColoredBackgroundGUIStyle.html": {
    "href": "api/Ink.UnityIntegration.ColoredBackgroundGUIStyle.html",
    "title": "Class ColoredBackgroundGUIStyle | Czasoport Documentation",
    "keywords": "Class ColoredBackgroundGUIStyle Namespace Ink.UnityIntegration public class ColoredBackgroundGUIStyle Inheritance object ColoredBackgroundGUIStyle Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ColoredBackgroundGUIStyle(Color) public ColoredBackgroundGUIStyle(Color color) Parameters color Color ColoredBackgroundGUIStyle(Color, Color) public ColoredBackgroundGUIStyle(Color colorFree, Color colorPro) Parameters colorFree Color colorPro Color ColoredBackgroundGUIStyle(Color, Color, Color, Color) public ColoredBackgroundGUIStyle(Color colorFree, Color colorPro, Color hoverColorFree, Color hoverColorPro) Parameters colorFree Color colorPro Color hoverColorFree Color hoverColorPro Color Fields guiStyle public GUIStyle guiStyle Field Value GUIStyle"
  },
  "api/Ink.UnityIntegration.Debugging.InkHistoryContentItem.ContentType.html": {
    "href": "api/Ink.UnityIntegration.Debugging.InkHistoryContentItem.ContentType.html",
    "title": "Enum InkHistoryContentItem.ContentType | Czasoport Documentation",
    "keywords": "Enum InkHistoryContentItem.ContentType Namespace Ink.UnityIntegration.Debugging public enum InkHistoryContentItem.ContentType Fields ChooseChoice = 1 ChoosePathString = 5 CompleteEvaluateFunction = 4 DebugNote = 8 Error = 7 EvaluateFunction = 3 PresentedChoice = 2 PresentedContent = 0 Warning = 6"
  },
  "api/Ink.UnityIntegration.Debugging.InkHistoryContentItem.html": {
    "href": "api/Ink.UnityIntegration.Debugging.InkHistoryContentItem.html",
    "title": "Class InkHistoryContentItem | Czasoport Documentation",
    "keywords": "Class InkHistoryContentItem Namespace Ink.UnityIntegration.Debugging [Serializable] public class InkHistoryContentItem Inheritance object InkHistoryContentItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields content public string content Field Value string contentType public InkHistoryContentItem.ContentType contentType Field Value InkHistoryContentItem.ContentType tags public List<string> tags Field Value List<string> Properties time public DateTime time { get; } Property Value DateTime Methods CreateForChoosePathString(string) public static InkHistoryContentItem CreateForChoosePathString(string choosePathStringText) Parameters choosePathStringText string Returns InkHistoryContentItem CreateForCompleteEvaluateFunction(string) public static InkHistoryContentItem CreateForCompleteEvaluateFunction(string functionInfoText) Parameters functionInfoText string Returns InkHistoryContentItem CreateForContent(string, List<string>) public static InkHistoryContentItem CreateForContent(string choiceText, List<string> tags) Parameters choiceText string tags List<string> Returns InkHistoryContentItem CreateForDebugNote(string) public static InkHistoryContentItem CreateForDebugNote(string noteText) Parameters noteText string Returns InkHistoryContentItem CreateForError(string) public static InkHistoryContentItem CreateForError(string errorText) Parameters errorText string Returns InkHistoryContentItem CreateForEvaluateFunction(string) public static InkHistoryContentItem CreateForEvaluateFunction(string functionInfoText) Parameters functionInfoText string Returns InkHistoryContentItem CreateForMakeChoice(Choice) public static InkHistoryContentItem CreateForMakeChoice(Choice choice) Parameters choice Choice Returns InkHistoryContentItem CreateForPresentChoice(Choice) public static InkHistoryContentItem CreateForPresentChoice(Choice choice) Parameters choice Choice Returns InkHistoryContentItem CreateForWarning(string) public static InkHistoryContentItem CreateForWarning(string warningText) Parameters warningText string Returns InkHistoryContentItem"
  },
  "api/Ink.UnityIntegration.Debugging.html": {
    "href": "api/Ink.UnityIntegration.Debugging.html",
    "title": "Namespace Ink.UnityIntegration.Debugging | Czasoport Documentation",
    "keywords": "Namespace Ink.UnityIntegration.Debugging Classes InkHistoryContentItem Enums InkHistoryContentItem.ContentType"
  },
  "api/Ink.UnityIntegration.DefaultAssetEditor.html": {
    "href": "api/Ink.UnityIntegration.DefaultAssetEditor.html",
    "title": "Class DefaultAssetEditor | Czasoport Documentation",
    "keywords": "Class DefaultAssetEditor Namespace Ink.UnityIntegration public class DefaultAssetEditor : Editor Inheritance object DefaultAssetEditor Methods OnHeaderGUI() protected override void OnHeaderGUI() OnInspectorGUI() public override void OnInspectorGUI()"
  },
  "api/Ink.UnityIntegration.DefaultAssetInspector.html": {
    "href": "api/Ink.UnityIntegration.DefaultAssetInspector.html",
    "title": "Class DefaultAssetInspector | Czasoport Documentation",
    "keywords": "Class DefaultAssetInspector Namespace Ink.UnityIntegration public abstract class DefaultAssetInspector Inheritance object DefaultAssetInspector Derived InkInspector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields editor public Editor editor Field Value Editor serializedObject public SerializedObject serializedObject Field Value SerializedObject target public Object target Field Value Object Methods IsValid(string) public abstract bool IsValid(string assetPath) Parameters assetPath string Returns bool OnDisable() public virtual void OnDisable() OnEnable() public virtual void OnEnable() OnHeaderGUI() public virtual void OnHeaderGUI() OnInspectorGUI() public virtual void OnInspectorGUI()"
  },
  "api/Ink.UnityIntegration.InkBrowserIcons.html": {
    "href": "api/Ink.UnityIntegration.InkBrowserIcons.html",
    "title": "Class InkBrowserIcons | Czasoport Documentation",
    "keywords": "Class InkBrowserIcons Namespace Ink.UnityIntegration public class InkBrowserIcons Inheritance object InkBrowserIcons Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties childIcon public static Texture2D childIcon { get; } Property Value Texture2D childIconLarge public static Texture2D childIconLarge { get; } Property Value Texture2D errorIcon public static Texture2D errorIcon { get; } Property Value Texture2D inkFileIcon public static Texture2D inkFileIcon { get; } Property Value Texture2D inkFileIconLarge public static Texture2D inkFileIconLarge { get; } Property Value Texture2D manualIcon public static Texture2D manualIcon { get; } Property Value Texture2D todoIcon public static Texture2D todoIcon { get; } Property Value Texture2D unknownFileIcon public static Texture2D unknownFileIcon { get; } Property Value Texture2D warningIcon public static Texture2D warningIcon { get; } Property Value Texture2D"
  },
  "api/Ink.UnityIntegration.InkCompiler.CompilationStackItemState.html": {
    "href": "api/Ink.UnityIntegration.InkCompiler.CompilationStackItemState.html",
    "title": "Enum InkCompiler.CompilationStackItemState | Czasoport Documentation",
    "keywords": "Enum InkCompiler.CompilationStackItemState Namespace Ink.UnityIntegration [Serializable] public enum InkCompiler.CompilationStackItemState Fields Compiling = 1 Complete = 2 Queued = 0"
  },
  "api/Ink.UnityIntegration.InkCompiler.OnCompleteInkCompliationStackEvent.html": {
    "href": "api/Ink.UnityIntegration.InkCompiler.OnCompleteInkCompliationStackEvent.html",
    "title": "Delegate InkCompiler.OnCompleteInkCompliationStackEvent | Czasoport Documentation",
    "keywords": "Delegate InkCompiler.OnCompleteInkCompliationStackEvent Namespace Ink.UnityIntegration public delegate void InkCompiler.OnCompleteInkCompliationStackEvent(InkFile[] inkFiles) Parameters inkFiles InkFile[]"
  },
  "api/Ink.UnityIntegration.InkCompiler.html": {
    "href": "api/Ink.UnityIntegration.InkCompiler.html",
    "title": "Class InkCompiler | Czasoport Documentation",
    "keywords": "Class InkCompiler Namespace Ink.UnityIntegration public class InkCompiler : ScriptableObject Inheritance object InkCompiler Constructors InkCompiler() protected InkCompiler() Properties created public static bool created { get; } Property Value bool executingCompilationStack public static bool executingCompilationStack { get; } Property Value bool instance public static InkCompiler instance { get; } Property Value InkCompiler Methods AddToPendingCompilationStack(string) public static void AddToPendingCompilationStack(string filePath) Parameters filePath string AnyOfStateInCompilationStack(CompilationStackItemState) public static bool AnyOfStateInCompilationStack(InkCompiler.CompilationStackItemState state) Parameters state InkCompiler.CompilationStackItemState Returns bool CompileInk(params InkFile[]) public static void CompileInk(params InkFile[] inkFiles) Parameters inkFiles InkFile[] CompileInk(InkFile[], bool, Action) public static void CompileInk(InkFile[] inkFiles, bool immediate, Action onComplete = null) Parameters inkFiles InkFile[] immediate bool onComplete Action CountOfStateInCompilationStack(CompilationStackItemState) public static int CountOfStateInCompilationStack(InkCompiler.CompilationStackItemState state) Parameters state InkCompiler.CompilationStackItemState Returns int GetEstimatedCompilationProgress() public static float GetEstimatedCompilationProgress() Returns float GetUniqueMasterInkFilesToCompile(List<string>) public static List<InkFile> GetUniqueMasterInkFilesToCompile(List<string> importedInkAssets) Parameters importedInkAssets List<string> Returns List<InkFile> IsInkFileOnCompilationStack(InkFile) public static bool IsInkFileOnCompilationStack(InkFile inkFile) Parameters inkFile InkFile Returns bool LoadOrCreateInstance() public static void LoadOrCreateInstance() RemoveFromPendingCompilationStack(InkFile) public static void RemoveFromPendingCompilationStack(InkFile inkFile) Parameters inkFile InkFile Save(bool) public void Save(bool saveAsText) Parameters saveAsText bool SetBuildBlocked() public static void SetBuildBlocked() ShowProgressBar() public static void ShowProgressBar() Events OnCompileInk public static event InkCompiler.OnCompleteInkCompliationStackEvent OnCompileInk Event Type InkCompiler.OnCompleteInkCompliationStackEvent"
  },
  "api/Ink.UnityIntegration.InkCompilerLog.html": {
    "href": "api/Ink.UnityIntegration.InkCompilerLog.html",
    "title": "Class InkCompilerLog | Czasoport Documentation",
    "keywords": "Class InkCompilerLog Namespace Ink.UnityIntegration [Serializable] public class InkCompilerLog Inheritance object InkCompilerLog Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InkCompilerLog(ErrorType, string, string, int) public InkCompilerLog(ErrorType type, string content, string relativeFilePath, int lineNumber = -1) Parameters type ErrorType content string relativeFilePath string lineNumber int Fields content public string content Field Value string lineNumber public int lineNumber Field Value int relativeFilePath public string relativeFilePath Field Value string type public ErrorType type Field Value ErrorType Methods GetAbsoluteFilePath(InkFile) public string GetAbsoluteFilePath(InkFile masterInkFile) Parameters masterInkFile InkFile Returns string TryParse(string, out InkCompilerLog) public static bool TryParse(string rawLog, out InkCompilerLog log) Parameters rawLog string log InkCompilerLog Returns bool"
  },
  "api/Ink.UnityIntegration.InkEditorUtils.html": {
    "href": "api/Ink.UnityIntegration.InkEditorUtils.html",
    "title": "Class InkEditorUtils | Czasoport Documentation",
    "keywords": "Class InkEditorUtils Namespace Ink.UnityIntegration public static class InkEditorUtils Inheritance object InkEditorUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields inkFileExtension public const string inkFileExtension = \".ink\" Field Value string Properties inkLogoIcon public static Texture2D inkLogoIcon { get; } Property Value Texture2D Methods AbsoluteToUnityRelativePath(string) public static string AbsoluteToUnityRelativePath(string fullPath) Parameters fullPath string Returns string CheckStoryIsValid(string, out Story) public static bool CheckStoryIsValid(string storyJSON, out Story story) Parameters storyJSON string story Story Returns bool CheckStoryIsValid(string, out Exception) public static bool CheckStoryIsValid(string storyJSON, out Exception exception) Parameters storyJSON string exception Exception Returns bool CheckStoryIsValid(string, out Exception, out Story) public static bool CheckStoryIsValid(string storyJSON, out Exception exception, out Story story) Parameters storyJSON string exception Exception story Story Returns bool CheckStoryStateIsValid(string, string) public static bool CheckStoryStateIsValid(string storyJSON, string storyStateJSON) Parameters storyJSON string storyStateJSON string Returns bool CombinePaths(string, string) public static string CombinePaths(string firstPath, string secondPath) Parameters firstPath string secondPath string Returns string CreateNewInkFileAtPath(string, string) public static DefaultAsset CreateNewInkFileAtPath(string filePath, string text) Parameters filePath string text string Returns DefaultAsset CreateNewInkFileAtPathWithTemplateAndStartNameEditing(string, string) public static void CreateNewInkFileAtPathWithTemplateAndStartNameEditing(string filePath, string templateFileLocation) Parameters filePath string templateFileLocation string CreateNewInkFileAtSelectedPathWithTemplateAndStartNameEditing() public static void CreateNewInkFileAtSelectedPathWithTemplateAndStartNameEditing() CreateStoryStateTextFile(string, string, string) public static TextAsset CreateStoryStateTextFile(string jsonStoryState, string defaultPath = \"Assets/Ink\", string defaultName = \"storyState\") Parameters jsonStoryState string defaultPath string defaultName string Returns TextAsset Donate() public static void Donate() DrawStoryPropertyField(Story, GUIContent) Draws a property field for a story using GUILayout, allowing you to attach stories to the player window for debugging. public static void DrawStoryPropertyField(Story story, GUIContent label) Parameters story Story Story. label GUIContent Label. DrawStoryPropertyField(Rect, Story, GUIContent) Draws a property field for a story using GUI, allowing you to attach stories to the player window for debugging. public static void DrawStoryPropertyField(Rect position, Story story, GUIContent label) Parameters position Rect Position. story Story Story. label GUIContent Label. FindAbsolutePluginDirectory() public static string FindAbsolutePluginDirectory() Returns string FormatJson(string) public static string FormatJson(string json) Parameters json string Returns string GetPackageInfo() public static UnityEditor.PackageManager.PackageInfo GetPackageInfo() Returns PackageInfo IsInkFile(string) Checks to see if the given path is an ink file or not, regardless of extension. public static bool IsInkFile(string path) Parameters path string The path to check. Returns bool True if it's an ink file, otherwise false. OnPostprocessBuild(BuildTarget, string) public static void OnPostprocessBuild(BuildTarget target, string pathToBuiltProject) Parameters target BuildTarget pathToBuiltProject string OpenAPIDocumentation() public static void OpenAPIDocumentation() OpenAbout() public static void OpenAbout() OpenDiscord() public static void OpenDiscord() OpenInEditor(InkFile, InkCompilerLog) Opens an ink file in the associated editor at the correct line number. TODO - If the editor is inky, this code should load the master file, but immediately show the correct child file at the correct line. public static void OpenInEditor(InkFile inkFile, InkCompilerLog log) Parameters inkFile InkFile log InkCompilerLog OpenInEditor(string, string, int) Opens an ink file in the associated editor at the correct line number. TODO - If the editor is inky, this code should load the master file, but immediately show the correct child file at the correct line. public static void OpenInEditor(string masterFilePath, string subFilePath, int lineNumber) Parameters masterFilePath string subFilePath string lineNumber int OpenWritingDocumentation() public static void OpenWritingDocumentation() RebuildLibrary() public static void RebuildLibrary() RecompileAll() public static void RecompileAll() RecompileAllImmediately() public static void RecompileAllImmediately() SanitizePathString(string) public static string SanitizePathString(string path) Parameters path string Returns string StoryContainsVariables(Story) public static bool StoryContainsVariables(Story story) Parameters story Story Returns bool UnityRelativeToAbsolutePath(string) public static string UnityRelativeToAbsolutePath(string filePath) Parameters filePath string Returns string"
  },
  "api/Ink.UnityIntegration.InkFile.InkIncludeParser.html": {
    "href": "api/Ink.UnityIntegration.InkFile.InkIncludeParser.html",
    "title": "Class InkFile.InkIncludeParser | Czasoport Documentation",
    "keywords": "Class InkFile.InkIncludeParser Namespace Ink.UnityIntegration public static class InkFile.InkIncludeParser Inheritance object InkFile.InkIncludeParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ParseIncludes(string) public static IEnumerable<string> ParseIncludes(string inkContents) Parameters inkContents string Returns IEnumerable<string>"
  },
  "api/Ink.UnityIntegration.InkFile.html": {
    "href": "api/Ink.UnityIntegration.InkFile.html",
    "title": "Class InkFile | Czasoport Documentation",
    "keywords": "Class InkFile Namespace Ink.UnityIntegration [Serializable] public class InkFile Inheritance object InkFile Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InkFile(DefaultAsset) public InkFile(DefaultAsset inkAsset) Parameters inkAsset DefaultAsset Fields errors public List<InkCompilerLog> errors Field Value List<InkCompilerLog> includes public List<DefaultAsset> includes Field Value List<DefaultAsset> inkAsset public DefaultAsset inkAsset Field Value DefaultAsset jsonAsset public TextAsset jsonAsset Field Value TextAsset jsonAssetDirectory public DefaultAsset jsonAssetDirectory Field Value DefaultAsset localIncludePaths public List<string> localIncludePaths Field Value List<string> masterInkAssets public List<DefaultAsset> masterInkAssets Field Value List<DefaultAsset> recursiveIncludeErrorPaths public List<string> recursiveIncludeErrorPaths Field Value List<string> todos public List<InkCompilerLog> todos Field Value List<InkCompilerLog> unhandledCompileErrors public List<string> unhandledCompileErrors Field Value List<string> warnings public List<InkCompilerLog> warnings Field Value List<InkCompilerLog> Properties absoluteFilePath public string absoluteFilePath { get; } Property Value string absoluteFolderPath public string absoluteFolderPath { get; } Property Value string absoluteJSONPath public string absoluteJSONPath { get; } Property Value string compileAutomatically public bool compileAutomatically { get; } Property Value bool filePath public string filePath { get; } Property Value string hasErrors public bool hasErrors { get; } Property Value bool hasRecursiveIncludeErrorPaths public bool hasRecursiveIncludeErrorPaths { get; } Property Value bool hasTodos public bool hasTodos { get; } Property Value bool hasUnhandledCompileErrors public bool hasUnhandledCompileErrors { get; } Property Value bool hasWarnings public bool hasWarnings { get; } Property Value bool includesInkFiles public List<InkFile> includesInkFiles { get; } Property Value List<InkFile> isIncludeFile public bool isIncludeFile { get; } Property Value bool isMarkedToCompileAsMasterFile public bool isMarkedToCompileAsMasterFile { get; } Property Value bool isMaster public bool isMaster { get; } Property Value bool jsonPath public string jsonPath { get; } Property Value string lastCompileDate Gets the last compile date of the story. public DateTime lastCompileDate { get; } Property Value DateTime The last compile date of the story. lastEditDate Gets the last edit date of the file. public DateTime lastEditDate { get; } Property Value DateTime The last edit date of the file. masterInkFiles public IEnumerable<InkFile> masterInkFiles { get; } Property Value IEnumerable<InkFile> masterInkFilesIncludingSelf public IEnumerable<InkFile> masterInkFilesIncludingSelf { get; } Property Value IEnumerable<InkFile> requiresCompile public bool requiresCompile { get; } Property Value bool Methods ClearAllHierarchyConnections() public void ClearAllHierarchyConnections() FindCompiledJSONAsset() public void FindCompiledJSONAsset() GetFileContents() public string GetFileContents() Returns string ParseContent() public void ParseContent() ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Ink.UnityIntegration.InkInspector.html": {
    "href": "api/Ink.UnityIntegration.InkInspector.html",
    "title": "Class InkInspector | Czasoport Documentation",
    "keywords": "Class InkInspector Namespace Ink.UnityIntegration public class InkInspector : DefaultAssetInspector Inheritance object DefaultAssetInspector InkInspector Inherited Members DefaultAssetInspector.editor DefaultAssetInspector.target DefaultAssetInspector.serializedObject object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods DrawLayoutInkLine(InkFile, int, string) public static void DrawLayoutInkLine(InkFile inkFile, int lineNumber, string label) Parameters inkFile InkFile lineNumber int label string IsValid(string) public override bool IsValid(string assetPath) Parameters assetPath string Returns bool OnDisable() public override void OnDisable() OnEnable() public override void OnEnable() OnHeaderGUI() public override void OnHeaderGUI() OnInspectorGUI() public override void OnInspectorGUI()"
  },
  "api/Ink.UnityIntegration.InkLibrary.AssetSaver.html": {
    "href": "api/Ink.UnityIntegration.InkLibrary.AssetSaver.html",
    "title": "Class InkLibrary.AssetSaver | Czasoport Documentation",
    "keywords": "Class InkLibrary.AssetSaver Namespace Ink.UnityIntegration public class InkLibrary.AssetSaver : UnityEditor.AssetModificationProcessor Inheritance object InkLibrary.AssetSaver"
  },
  "api/Ink.UnityIntegration.InkLibrary.html": {
    "href": "api/Ink.UnityIntegration.InkLibrary.html",
    "title": "Class InkLibrary | Czasoport Documentation",
    "keywords": "Class InkLibrary Namespace Ink.UnityIntegration public class InkLibrary : ScriptableObject, IEnumerable<InkFile>, IEnumerable Inheritance object InkLibrary Implements IEnumerable<InkFile> IEnumerable Constructors InkLibrary() protected InkLibrary() Fields inkLibrary public List<InkFile> inkLibrary Field Value List<InkFile> inkVersionCurrent public static Version inkVersionCurrent Field Value Version unityIntegrationVersionCurrent public static Version unityIntegrationVersionCurrent Field Value Version Properties Count public int Count { get; } Property Value int this[int] public InkFile this[int key] { get; set; } Parameters key int Property Value InkFile created public static bool created { get; } Property Value bool instance public static InkLibrary instance { get; } Property Value InkLibrary Methods AddNewInkFile(DefaultAsset) public static InkFile AddNewInkFile(DefaultAsset asset) Parameters asset DefaultAsset Returns InkFile Clean() Removes and null references in the library public static bool Clean() Returns bool CreateOrReadUpdatedInkFiles(List<string>) public static void CreateOrReadUpdatedInkFiles(List<string> importedInkAssets) Parameters importedInkAssets List<string> DeleteUnwantedCompiledJSONAssets() public static void DeleteUnwantedCompiledJSONAssets() FilesCompiledByRecompileAll() public static IEnumerable<InkFile> FilesCompiledByRecompileAll() Returns IEnumerable<InkFile> GetFilesRequiringRecompile() public static IEnumerable<InkFile> GetFilesRequiringRecompile() Returns IEnumerable<InkFile> GetInkFileWithAbsolutePath(string) Gets the ink file with absolute path. public static InkFile GetInkFileWithAbsolutePath(string absolutePath) Parameters absolutePath string Returns InkFile The ink file with path. GetInkFileWithFile(DefaultAsset, bool) Gets the ink file from the .ink file reference. public static InkFile GetInkFileWithFile(DefaultAsset file, bool addIfMissing = false) Parameters file DefaultAsset File asset. addIfMissing bool Adds the file if missing from inkLibrary. Returns InkFile The ink file with path. GetInkFileWithJSONFile(TextAsset) public static InkFile GetInkFileWithJSONFile(TextAsset inkJSONAsset) Parameters inkJSONAsset TextAsset Returns InkFile GetInkFileWithPath(string) Gets the ink file with path relative to Assets folder, for example: \"Assets/Ink/myStory.ink\". public static InkFile GetInkFileWithPath(string path) Parameters path string Path. Returns InkFile The ink file with path. GetInkFilesMarkedToCompileAsMasterFiles() public static IEnumerable<InkFile> GetInkFilesMarkedToCompileAsMasterFiles() Returns IEnumerable<InkFile> GetMasterInkFiles() public static IEnumerable<InkFile> GetMasterInkFiles() Returns IEnumerable<InkFile> LoadOrCreateInstance() public static void LoadOrCreateInstance() Rebuild() Updates the ink library. Executed whenever an ink file is changed by InkToJSONPostProcessor Can be called manually, but incurs a performance cost. public static void Rebuild() RebuildInkFileConnections() Rebuilds which files are master files and the connections between the files. INCLUDE is always relative to the master file. This means that every file should be assumed to be a master file until proven otherwise. public static void RebuildInkFileConnections() RemoveAt(int) public static void RemoveAt(int index) Parameters index int Save(bool) public void Save(bool saveAsText) Parameters saveAsText bool Validate() Checks if the library is corrupt and rebuilds if necessary. Returns true if the library was valid public static bool Validate() Returns bool"
  },
  "api/Ink.UnityIntegration.InkPlayerHistoryItem.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerHistoryItem.html",
    "title": "Class InkPlayerHistoryItem | Czasoport Documentation",
    "keywords": "Class InkPlayerHistoryItem Namespace Ink.UnityIntegration public class InkPlayerHistoryItem Inheritance object InkPlayerHistoryItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InkPlayerHistoryItem(string, List<InkHistoryContentItem>) public InkPlayerHistoryItem(string inkStateJSON, List<InkHistoryContentItem> storyHistory) Parameters inkStateJSON string storyHistory List<InkHistoryContentItem> Fields inkStateJSON public string inkStateJSON Field Value string storyHistory public List<InkHistoryContentItem> storyHistory Field Value List<InkHistoryContentItem>"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.AutoScrollSmoothingMode.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.AutoScrollSmoothingMode.html",
    "title": "Enum InkPlayerWindow.AutoScrollSmoothingMode | Czasoport Documentation",
    "keywords": "Enum InkPlayerWindow.AutoScrollSmoothingMode Namespace Ink.UnityIntegration public enum InkPlayerWindow.AutoScrollSmoothingMode Fields NONE = 0 Smooth = 2 Snap = 1"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.BaseStoryPanelState.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.BaseStoryPanelState.html",
    "title": "Class InkPlayerWindow.BaseStoryPanelState | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.BaseStoryPanelState Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.BaseStoryPanelState Inheritance object InkPlayerWindow.BaseStoryPanelState Derived InkPlayerWindow.FunctionPanelState InkPlayerWindow.NamedContentPanelState InkPlayerWindow.ObservedVariablesPanelState InkPlayerWindow.StoryPanelState InkPlayerWindow.VariablesPanelState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields height public float height Field Value float showing public bool showing Field Value bool y public float y Field Value float Properties scrollPosition public Vector2 scrollPosition { get; set; } Property Value Vector2"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.ContextMenuDelegate.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.ContextMenuDelegate.html",
    "title": "Delegate InkPlayerWindow.ContextMenuDelegate | Czasoport Documentation",
    "keywords": "Delegate InkPlayerWindow.ContextMenuDelegate Namespace Ink.UnityIntegration public delegate void InkPlayerWindow.ContextMenuDelegate(GenericMenu contextMenu, InkHistoryContentItem content) Parameters contextMenu GenericMenu content InkHistoryContentItem"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.DisplayOptions.VisibilityOptions.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.DisplayOptions.VisibilityOptions.html",
    "title": "Enum InkPlayerWindow.DisplayOptions.VisibilityOptions | Czasoport Documentation",
    "keywords": "Enum InkPlayerWindow.DisplayOptions.VisibilityOptions Namespace Ink.UnityIntegration [Flags] public enum InkPlayerWindow.DisplayOptions.VisibilityOptions Fields ChoosePathString = 64 Content = 4 DebugNotes = 128 EmptyEntries = 512 Errors = 2 Function = 32 PresentedChoices = 8 SelectedChoice = 16 Tags = 1024 TimeStamp = 256 Warnings = 1"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.DisplayOptions.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.DisplayOptions.html",
    "title": "Class InkPlayerWindow.DisplayOptions | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.DisplayOptions Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.DisplayOptions Inheritance object InkPlayerWindow.DisplayOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields displayErrorsInConsole public bool displayErrorsInConsole Field Value bool displayWarningsInConsole public bool displayWarningsInConsole Field Value bool visibilityOptions public InkPlayerWindow.DisplayOptions.VisibilityOptions visibilityOptions Field Value InkPlayerWindow.DisplayOptions.VisibilityOptions"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.FunctionInputType.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.FunctionInputType.html",
    "title": "Enum InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.FunctionInputType | Czasoport Documentation",
    "keywords": "Enum InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.FunctionInputType Namespace Ink.UnityIntegration public enum InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.FunctionInputType Fields Bool = 3 Float = 0 InkListVariable = 5 InkVariable = 4 Int = 1 String = 2"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.html",
    "title": "Class InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput Inheritance object InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput Inherited Members object.Equals(object) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields boolValue public bool boolValue Field Value bool floatValue public float floatValue Field Value float inkListVariablePath public string inkListVariablePath Field Value string inkListVariableValue public InkList inkListVariableValue Field Value InkList inkVariablePath public string inkVariablePath Field Value string inkVariableValue public object inkVariableValue Field Value object intValue public int intValue Field Value int stringValue public string stringValue Field Value string type public InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.FunctionInputType type Field Value InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.FunctionInputType Methods GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. RefreshInkListVariableValue(Story) public void RefreshInkListVariableValue(Story story) Parameters story Story RefreshInkVariableValue(Story) public void RefreshInkVariableValue(Story story) Parameters story Story"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.FunctionPanelState.FunctionParams.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.FunctionPanelState.FunctionParams.html",
    "title": "Class InkPlayerWindow.FunctionPanelState.FunctionParams | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.FunctionPanelState.FunctionParams Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.FunctionPanelState.FunctionParams Inheritance object InkPlayerWindow.FunctionPanelState.FunctionParams Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields functionName public string functionName Field Value string inputs public List<InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput> inputs Field Value List<InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput> Methods GetInputHashCode() public int GetInputHashCode() Returns int"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.FunctionPanelState.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.FunctionPanelState.html",
    "title": "Class InkPlayerWindow.FunctionPanelState | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.FunctionPanelState Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.FunctionPanelState : InkPlayerWindow.BaseStoryPanelState Inheritance object InkPlayerWindow.BaseStoryPanelState InkPlayerWindow.FunctionPanelState Inherited Members InkPlayerWindow.BaseStoryPanelState.showing InkPlayerWindow.BaseStoryPanelState.scrollPosition InkPlayerWindow.BaseStoryPanelState.y InkPlayerWindow.BaseStoryPanelState.height object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields functionParams public InkPlayerWindow.FunctionPanelState.FunctionParams functionParams Field Value InkPlayerWindow.FunctionPanelState.FunctionParams functionReturnValue public object functionReturnValue Field Value object testedFunctionHash public int testedFunctionHash Field Value int testedFunctionTime public DateTime testedFunctionTime Field Value DateTime"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.InkPlayerParams.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.InkPlayerParams.html",
    "title": "Struct InkPlayerWindow.InkPlayerParams | Czasoport Documentation",
    "keywords": "Struct InkPlayerWindow.InkPlayerParams Namespace Ink.UnityIntegration public struct InkPlayerWindow.InkPlayerParams Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields disableChoices public bool disableChoices Field Value bool disablePlayControls public bool disablePlayControls Field Value bool disableSettingVariables public bool disableSettingVariables Field Value bool disableStateLoading public bool disableStateLoading Field Value bool disableUndoHistory public bool disableUndoHistory Field Value bool profileOnStart public bool profileOnStart Field Value bool Properties DisableInteraction public static InkPlayerWindow.InkPlayerParams DisableInteraction { get; } Property Value InkPlayerWindow.InkPlayerParams Standard public static InkPlayerWindow.InkPlayerParams Standard { get; } Property Value InkPlayerWindow.InkPlayerParams"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.InkPlayerWindowState.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.InkPlayerWindowState.html",
    "title": "Class InkPlayerWindow.InkPlayerWindowState | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.InkPlayerWindowState Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.InkPlayerWindowState Inheritance object InkPlayerWindow.InkPlayerWindowState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields choicePanelState public InkPlayerWindow.BaseStoryPanelState choicePanelState Field Value InkPlayerWindow.BaseStoryPanelState functionPanelState public InkPlayerWindow.FunctionPanelState functionPanelState Field Value InkPlayerWindow.FunctionPanelState lastStoryJSONAssetPath public string lastStoryJSONAssetPath Field Value string lastStoryWasPlaying public bool lastStoryWasPlaying Field Value bool namedContentPanelState public InkPlayerWindow.NamedContentPanelState namedContentPanelState Field Value InkPlayerWindow.NamedContentPanelState observedVariablesPanelState public InkPlayerWindow.ObservedVariablesPanelState observedVariablesPanelState Field Value InkPlayerWindow.ObservedVariablesPanelState profilerPanelState public InkPlayerWindow.BaseStoryPanelState profilerPanelState Field Value InkPlayerWindow.BaseStoryPanelState saveLoadPanelState public InkPlayerWindow.BaseStoryPanelState saveLoadPanelState Field Value InkPlayerWindow.BaseStoryPanelState storyPanelState public InkPlayerWindow.StoryPanelState storyPanelState Field Value InkPlayerWindow.StoryPanelState storyStatePanelState public InkPlayerWindow.BaseStoryPanelState storyStatePanelState Field Value InkPlayerWindow.BaseStoryPanelState variablesPanelState public InkPlayerWindow.VariablesPanelState variablesPanelState Field Value InkPlayerWindow.VariablesPanelState Properties Instance public static InkPlayerWindow.InkPlayerWindowState Instance { get; } Property Value InkPlayerWindow.InkPlayerWindowState Methods CreateAndSave() public static void CreateAndSave() Save() public static void Save() Save(InkPlayerWindowState) public static void Save(InkPlayerWindow.InkPlayerWindowState settings) Parameters settings InkPlayerWindow.InkPlayerWindowState TryGetLastStoryJSONAsset() public TextAsset TryGetLastStoryJSONAsset() Returns TextAsset Events OnCreateOrLoad public static event Action OnCreateOrLoad Event Type Action"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.NamedContentPanelState.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.NamedContentPanelState.html",
    "title": "Class InkPlayerWindow.NamedContentPanelState | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.NamedContentPanelState Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.NamedContentPanelState : InkPlayerWindow.BaseStoryPanelState Inheritance object InkPlayerWindow.BaseStoryPanelState InkPlayerWindow.NamedContentPanelState Inherited Members InkPlayerWindow.BaseStoryPanelState.showing InkPlayerWindow.BaseStoryPanelState.scrollPosition InkPlayerWindow.BaseStoryPanelState.y InkPlayerWindow.BaseStoryPanelState.height object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields searchString public string searchString Field Value string"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.ObservedVariablesPanelState.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.ObservedVariablesPanelState.html",
    "title": "Class InkPlayerWindow.ObservedVariablesPanelState | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.ObservedVariablesPanelState Namespace Ink.UnityIntegration public class InkPlayerWindow.ObservedVariablesPanelState : InkPlayerWindow.BaseStoryPanelState Inheritance object InkPlayerWindow.BaseStoryPanelState InkPlayerWindow.ObservedVariablesPanelState Inherited Members InkPlayerWindow.BaseStoryPanelState.showing InkPlayerWindow.BaseStoryPanelState.scrollPosition InkPlayerWindow.BaseStoryPanelState.y InkPlayerWindow.BaseStoryPanelState.height object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields observedVariables public Dictionary<string, ObservedVariable> observedVariables Field Value Dictionary<string, ObservedVariable> restorableObservedVariableNames public List<string> restorableObservedVariableNames Field Value List<string>"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.PlayerOptions.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.PlayerOptions.html",
    "title": "Class InkPlayerWindow.PlayerOptions | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.PlayerOptions Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.PlayerOptions Inheritance object InkPlayerWindow.PlayerOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields chooseAutomatically public bool chooseAutomatically Field Value bool chooseAutomaticallyTimeInterval public float chooseAutomaticallyTimeInterval Field Value float continueAutomatically public bool continueAutomatically Field Value bool continueAutomaticallyTimeInterval public float continueAutomaticallyTimeInterval Field Value float"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.StoryPanelState.AutoScrollMode.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.StoryPanelState.AutoScrollMode.html",
    "title": "Enum InkPlayerWindow.StoryPanelState.AutoScrollMode | Czasoport Documentation",
    "keywords": "Enum InkPlayerWindow.StoryPanelState.AutoScrollMode Namespace Ink.UnityIntegration public enum InkPlayerWindow.StoryPanelState.AutoScrollMode Fields Always = 1 Off = 2 WhenAtBottom = 0"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.StoryPanelState.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.StoryPanelState.html",
    "title": "Class InkPlayerWindow.StoryPanelState | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.StoryPanelState Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.StoryPanelState : InkPlayerWindow.BaseStoryPanelState Inheritance object InkPlayerWindow.BaseStoryPanelState InkPlayerWindow.StoryPanelState Inherited Members InkPlayerWindow.BaseStoryPanelState.showing InkPlayerWindow.BaseStoryPanelState.scrollPosition InkPlayerWindow.BaseStoryPanelState.y InkPlayerWindow.BaseStoryPanelState.height object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields autoScrollMode public InkPlayerWindow.StoryPanelState.AutoScrollMode autoScrollMode Field Value InkPlayerWindow.StoryPanelState.AutoScrollMode displayOptions public InkPlayerWindow.DisplayOptions displayOptions Field Value InkPlayerWindow.DisplayOptions maxScrollRectHeight public const float maxScrollRectHeight = 480 Field Value float minScrollRectHeight public const float minScrollRectHeight = 30 Field Value float searchString public string searchString Field Value string"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.VariablesPanelState.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.VariablesPanelState.html",
    "title": "Class InkPlayerWindow.VariablesPanelState | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow.VariablesPanelState Namespace Ink.UnityIntegration [Serializable] public class InkPlayerWindow.VariablesPanelState : InkPlayerWindow.BaseStoryPanelState Inheritance object InkPlayerWindow.BaseStoryPanelState InkPlayerWindow.VariablesPanelState Inherited Members InkPlayerWindow.BaseStoryPanelState.showing InkPlayerWindow.BaseStoryPanelState.scrollPosition InkPlayerWindow.BaseStoryPanelState.y InkPlayerWindow.BaseStoryPanelState.height object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields expandedVariables public List<string> expandedVariables Field Value List<string> searchString public string searchString Field Value string"
  },
  "api/Ink.UnityIntegration.InkPlayerWindow.html": {
    "href": "api/Ink.UnityIntegration.InkPlayerWindow.html",
    "title": "Class InkPlayerWindow | Czasoport Documentation",
    "keywords": "Class InkPlayerWindow Namespace Ink.UnityIntegration Ink player window. Tests stories in an editor window. Stories may be attached at runtime. InkPlayerWindow.DrawStoryPropertyField may be used for this. public class InkPlayerWindow : EditorWindow Inheritance object InkPlayerWindow Fields OnChooseChoiceIndexOverride public static Action<int> OnChooseChoiceIndexOverride Field Value Action<int> OnDidSetStory public static Action<Story> OnDidSetStory Field Value Action<Story> OnDivertLabelOverride public static Func<string, GUIContent> OnDivertLabelOverride Field Value Func<string, GUIContent> OnDivertOverride public static Action<string> OnDivertOverride Field Value Action<string> contextMenuDelegates public static List<InkPlayerWindow.ContextMenuDelegate> contextMenuDelegates Field Value List<InkPlayerWindow.ContextMenuDelegate> playerOptions public static InkPlayerWindow.PlayerOptions playerOptions Field Value InkPlayerWindow.PlayerOptions playerParams public static InkPlayerWindow.InkPlayerParams playerParams Field Value InkPlayerWindow.InkPlayerParams Properties attached public static bool attached { get; } Property Value bool isOpen public static bool isOpen { get; } Property Value bool story public static Story story { get; } Property Value Story storyStateTextAsset public static TextAsset storyStateTextAsset { get; set; } Property Value TextAsset visible public static bool visible { get; } Property Value bool Methods Attach(Story) public static void Attach(Story story) Parameters story Story Attach(Story, InkPlayerParams) public static void Attach(Story story, InkPlayerWindow.InkPlayerParams inkPlayerParams) Parameters story Story inkPlayerParams InkPlayerWindow.InkPlayerParams Detach() public static void Detach() DrawStoryPropertyField(Story, InkPlayerParams, ref bool, GUIContent, bool) public static void DrawStoryPropertyField(Story story, InkPlayerWindow.InkPlayerParams playerParams, ref bool expanded, GUIContent label, bool interactable = false) Parameters story Story playerParams InkPlayerWindow.InkPlayerParams expanded bool label GUIContent interactable bool DrawStoryPropertyField(Story, ref bool, GUIContent) Draws a property field for a story using GUILayout, allowing you to attach stories to the player window for debugging. An example of how this is used is found in the Demo scene. public static void DrawStoryPropertyField(Story story, ref bool expanded, GUIContent label) Parameters story Story Story. expanded bool label GUIContent Label. DrawStoryPropertyField(Rect, Story, GUIContent) Draws a property field for a story using GUI, allowing you to attach stories to the player window for debugging. public static void DrawStoryPropertyField(Rect position, Story story, GUIContent label) Parameters position Rect Position. story Story Story. label GUIContent Label. GetGameWindowIsMaximised() public static bool GetGameWindowIsMaximised() Returns bool GetWindow() public static InkPlayerWindow GetWindow() Returns InkPlayerWindow GetWindow(bool) public static InkPlayerWindow GetWindow(bool focus) Parameters focus bool Returns InkPlayerWindow LoadAndPlay(string, bool) public static void LoadAndPlay(string storyJSON, bool focusWindow = true) Parameters storyJSON string focusWindow bool LoadAndPlay(TextAsset, bool) public static void LoadAndPlay(TextAsset storyJSONTextAsset, bool focusWindow = true) Parameters storyJSONTextAsset TextAsset focusWindow bool"
  },
  "api/Ink.UnityIntegration.InkPostProcessor.html": {
    "href": "api/Ink.UnityIntegration.InkPostProcessor.html",
    "title": "Class InkPostProcessor | Czasoport Documentation",
    "keywords": "Class InkPostProcessor Namespace Ink.UnityIntegration public class InkPostProcessor : AssetPostprocessor Inheritance object InkPostProcessor Fields compileImmediatelyOnImport public static bool compileImmediatelyOnImport Field Value bool disabled public static bool disabled Field Value bool"
  },
  "api/Ink.UnityIntegration.InkSettings.AssetSaver.html": {
    "href": "api/Ink.UnityIntegration.InkSettings.AssetSaver.html",
    "title": "Class InkSettings.AssetSaver | Czasoport Documentation",
    "keywords": "Class InkSettings.AssetSaver Namespace Ink.UnityIntegration public class InkSettings.AssetSaver : UnityEditor.AssetModificationProcessor Inheritance object InkSettings.AssetSaver"
  },
  "api/Ink.UnityIntegration.InkSettings.html": {
    "href": "api/Ink.UnityIntegration.InkSettings.html",
    "title": "Class InkSettings | Czasoport Documentation",
    "keywords": "Class InkSettings Namespace Ink.UnityIntegration public class InkSettings : ScriptableObject Inheritance object InkSettings Fields compileAllFilesAutomatically public bool compileAllFilesAutomatically Field Value bool compileTimeout public int compileTimeout Field Value int defaultJsonAssetPath public DefaultAsset defaultJsonAssetPath Field Value DefaultAsset delayInPlayMode public bool delayInPlayMode Field Value bool filesToCompileAutomatically public List<DefaultAsset> filesToCompileAutomatically Field Value List<DefaultAsset> handleJSONFilesAutomatically public bool handleJSONFilesAutomatically Field Value bool includeFilesToCompileAsMasterFiles public List<DefaultAsset> includeFilesToCompileAsMasterFiles Field Value List<DefaultAsset> printInkLogsInConsoleOnCompile public bool printInkLogsInConsoleOnCompile Field Value bool suppressStartupWindow public bool suppressStartupWindow Field Value bool templateFile public DefaultAsset templateFile Field Value DefaultAsset Properties created public static bool created { get; } Property Value bool instance public static InkSettings instance { get; } Property Value InkSettings templateFilePath public string templateFilePath { get; } Property Value string Methods Save(bool) public void Save(bool saveAsText) Parameters saveAsText bool SaveStatic(bool) public static void SaveStatic(bool saveAsText) Parameters saveAsText bool ShouldCompileInkFileAutomatically(InkFile) public bool ShouldCompileInkFileAutomatically(InkFile inkFile) Parameters inkFile InkFile Returns bool"
  },
  "api/Ink.UnityIntegration.InkSettingsEditor.html": {
    "href": "api/Ink.UnityIntegration.InkSettingsEditor.html",
    "title": "Class InkSettingsEditor | Czasoport Documentation",
    "keywords": "Class InkSettingsEditor Namespace Ink.UnityIntegration public class InkSettingsEditor : Editor Inheritance object InkSettingsEditor Fields data protected InkSettings data Field Value InkSettings Methods OnEnable() public void OnEnable() OnInspectorGUI() public override void OnInspectorGUI()"
  },
  "api/Ink.UnityIntegration.InkUnityIntegrationStartupWindow.html": {
    "href": "api/Ink.UnityIntegration.InkUnityIntegrationStartupWindow.html",
    "title": "Class InkUnityIntegrationStartupWindow | Czasoport Documentation",
    "keywords": "Class InkUnityIntegrationStartupWindow Namespace Ink.UnityIntegration public class InkUnityIntegrationStartupWindow : EditorWindow Inheritance object InkUnityIntegrationStartupWindow Methods ShowWindow() public static void ShowWindow()"
  },
  "api/Ink.UnityIntegration.ObservedVariable.ObservedVariableState.html": {
    "href": "api/Ink.UnityIntegration.ObservedVariable.ObservedVariableState.html",
    "title": "Class ObservedVariable.ObservedVariableState | Czasoport Documentation",
    "keywords": "Class ObservedVariable.ObservedVariableState Namespace Ink.UnityIntegration public class ObservedVariable.ObservedVariableState Inheritance object ObservedVariable.ObservedVariableState Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ObservedVariableState(object) public ObservedVariableState(object state) Parameters state object Fields dateTime public DateTime dateTime Field Value DateTime state public object state Field Value object"
  },
  "api/Ink.UnityIntegration.ObservedVariable.html": {
    "href": "api/Ink.UnityIntegration.ObservedVariable.html",
    "title": "Class ObservedVariable | Czasoport Documentation",
    "keywords": "Class ObservedVariable Namespace Ink.UnityIntegration public class ObservedVariable Inheritance object ObservedVariable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ObservedVariable(string) public ObservedVariable(string variable) Parameters variable string Fields expanded public bool expanded Field Value bool scrollPosition public Vector2 scrollPosition Field Value Vector2 values public List<ObservedVariable.ObservedVariableState> values Field Value List<ObservedVariable.ObservedVariableState> variable public string variable Field Value string variableObserver public Story.VariableObserver variableObserver Field Value Story.VariableObserver Methods AddValueState(object) public void AddValueState(object value) Parameters value object"
  },
  "api/Ink.UnityIntegration.UndoHistory-1.OnChangeHistoryIndexEvent.html": {
    "href": "api/Ink.UnityIntegration.UndoHistory-1.OnChangeHistoryIndexEvent.html",
    "title": "Delegate UndoHistory<T>.OnChangeHistoryIndexEvent | Czasoport Documentation",
    "keywords": "Delegate UndoHistory<T>.OnChangeHistoryIndexEvent Namespace Ink.UnityIntegration public delegate void UndoHistory<T>.OnChangeHistoryIndexEvent(T historyItem) Parameters historyItem T"
  },
  "api/Ink.UnityIntegration.UndoHistory-1.OnChangeUndoHistoryEvent.html": {
    "href": "api/Ink.UnityIntegration.UndoHistory-1.OnChangeUndoHistoryEvent.html",
    "title": "Delegate UndoHistory<T>.OnChangeUndoHistoryEvent | Czasoport Documentation",
    "keywords": "Delegate UndoHistory<T>.OnChangeUndoHistoryEvent Namespace Ink.UnityIntegration public delegate void UndoHistory<T>.OnChangeUndoHistoryEvent()"
  },
  "api/Ink.UnityIntegration.UndoHistory-1.OnRedoEvent.html": {
    "href": "api/Ink.UnityIntegration.UndoHistory-1.OnRedoEvent.html",
    "title": "Delegate UndoHistory<T>.OnRedoEvent | Czasoport Documentation",
    "keywords": "Delegate UndoHistory<T>.OnRedoEvent Namespace Ink.UnityIntegration public delegate void UndoHistory<T>.OnRedoEvent(T historyItem) Parameters historyItem T"
  },
  "api/Ink.UnityIntegration.UndoHistory-1.OnUndoEvent.html": {
    "href": "api/Ink.UnityIntegration.UndoHistory-1.OnUndoEvent.html",
    "title": "Delegate UndoHistory<T>.OnUndoEvent | Czasoport Documentation",
    "keywords": "Delegate UndoHistory<T>.OnUndoEvent Namespace Ink.UnityIntegration public delegate void UndoHistory<T>.OnUndoEvent(T historyItem) Parameters historyItem T"
  },
  "api/Ink.UnityIntegration.UndoHistory-1.html": {
    "href": "api/Ink.UnityIntegration.UndoHistory-1.html",
    "title": "Class UndoHistory<T> | Czasoport Documentation",
    "keywords": "Class UndoHistory<T> Namespace Ink.UnityIntegration [Serializable] public class UndoHistory<T> where T : class Type Parameters T Inheritance object UndoHistory<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors UndoHistory() public UndoHistory() UndoHistory(int) public UndoHistory(int maxHistoryItems) Parameters maxHistoryItems int Fields maxHistoryItems public int maxHistoryItems Field Value int undoHistory public List<T> undoHistory Field Value List<T> Properties canRedo public bool canRedo { get; } Property Value bool canUndo public bool canUndo { get; } Property Value bool undoHistoryIndex public int undoHistoryIndex { get; set; } Property Value int Methods AddToUndoHistory(T) public virtual void AddToUndoHistory(T state) Parameters state T ApplyHistoryItem(T) protected virtual void ApplyHistoryItem(T historyItem) Parameters historyItem T Clear() public virtual void Clear() Redo() public virtual T Redo() Returns T Undo() public virtual T Undo() Returns T Events OnChangeHistoryIndex public event UndoHistory<T>.OnChangeHistoryIndexEvent OnChangeHistoryIndex Event Type UndoHistory<T>.OnChangeHistoryIndexEvent OnChangeUndoHistory public event UndoHistory<T>.OnChangeUndoHistoryEvent OnChangeUndoHistory Event Type UndoHistory<T>.OnChangeUndoHistoryEvent OnRedo public event UndoHistory<T>.OnRedoEvent OnRedo Event Type UndoHistory<T>.OnRedoEvent OnUndo public event UndoHistory<T>.OnUndoEvent OnUndo Event Type UndoHistory<T>.OnUndoEvent"
  },
  "api/Ink.UnityIntegration.html": {
    "href": "api/Ink.UnityIntegration.html",
    "title": "Namespace Ink.UnityIntegration | Czasoport Documentation",
    "keywords": "Namespace Ink.UnityIntegration Classes ColoredBackgroundGUIStyle DefaultAssetEditor DefaultAssetInspector InkBrowserIcons InkCompiler InkCompilerLog InkEditorUtils InkFile InkFile.InkIncludeParser InkInspector InkLibrary InkLibrary.AssetSaver InkPlayerHistoryItem InkPlayerWindow Ink player window. Tests stories in an editor window. Stories may be attached at runtime. InkPlayerWindow.DrawStoryPropertyField may be used for this. InkPlayerWindow.BaseStoryPanelState InkPlayerWindow.DisplayOptions InkPlayerWindow.FunctionPanelState InkPlayerWindow.FunctionPanelState.FunctionParams InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput InkPlayerWindow.InkPlayerWindowState InkPlayerWindow.NamedContentPanelState InkPlayerWindow.ObservedVariablesPanelState InkPlayerWindow.PlayerOptions InkPlayerWindow.StoryPanelState InkPlayerWindow.VariablesPanelState InkPostProcessor InkSettings InkSettings.AssetSaver InkSettingsEditor InkUnityIntegrationStartupWindow ObservedVariable ObservedVariable.ObservedVariableState UndoHistory<T> Structs InkPlayerWindow.InkPlayerParams Enums InkCompiler.CompilationStackItemState InkPlayerWindow.AutoScrollSmoothingMode InkPlayerWindow.DisplayOptions.VisibilityOptions InkPlayerWindow.FunctionPanelState.FunctionParams.FunctionInput.FunctionInputType InkPlayerWindow.StoryPanelState.AutoScrollMode Delegates InkCompiler.OnCompleteInkCompliationStackEvent InkPlayerWindow.ContextMenuDelegate UndoHistory<T>.OnChangeHistoryIndexEvent UndoHistory<T>.OnChangeUndoHistoryEvent UndoHistory<T>.OnRedoEvent UndoHistory<T>.OnUndoEvent"
  },
  "api/Ink.html": {
    "href": "api/Ink.html",
    "title": "Namespace Ink | Czasoport Documentation",
    "keywords": "Namespace Ink Classes CharacterRange A class representing a character range. Allows for lazy-loading a corresponding character set. CharacterSet CommandLineInput CommentEliminator Pre-pass before main ink parser runs. It actually performs two main tasks: comment elimination to simplify the parse rules in the main parser Conversion of Windows line endings (\\r\\n) to the simpler Unix style (\\n), so we don't have to worry about them later. Compiler Compiler.CommandLineInputResult Compiler.Options DefaultFileHandler InkParser InkParser.FlowDecl InkParser.InfixOperator InkParser.NameWithMetadata InkStringConversionExtensions PluginManager StringParser StringParser.ParseSuccessStruct StringParserState StringParserState.Element Structs Compiler.DebugSourceRange Stats Interfaces IFileHandler IPlugin Enums ErrorType Author errors will only ever come from the compiler so don't need to be handled by your Story error handler. The \"Error\" ErrorType is by far the most common for a runtime story error (rather than compiler error), though the Warning type is also possible. InkParser.CustomFlags InkParser.StatementLevel Delegates ErrorHandler Callback for errors throughout both the ink runtime and compiler. StringParser.ErrorHandler StringParser.ParseRule StringParser.SpecificParseRule<T>"
  },
  "api/InteractableObjectSystem.InterObjectDefinition.html": {
    "href": "api/InteractableObjectSystem.InterObjectDefinition.html",
    "title": "Class InterObjectDefinition | Czasoport Documentation",
    "keywords": "Class InterObjectDefinition Namespace InteractableObjectSystem Scriptable object for items public class InterObjectDefinition : ScriptableObject Inheritance object InterObjectDefinition Fields description public string description Field Value string failedHandInterNotification public Notification failedHandInterNotification Field Value Notification failedItemInterNotification public Notification failedItemInterNotification Field Value Notification interactableName public string interactableName Field Value string prefab public GameObject prefab Field Value GameObject successfulHandInterNotification public Notification successfulHandInterNotification Field Value Notification successfulItemInterNotification public Notification successfulItemInterNotification Field Value Notification Methods ToString() public override string ToString() Returns string"
  },
  "api/InteractableObjectSystem.InteractableObject.html": {
    "href": "api/InteractableObjectSystem.InteractableObject.html",
    "title": "Class InteractableObject | Czasoport Documentation",
    "keywords": "Class InteractableObject Namespace InteractableObjectSystem public abstract class InteractableObject : MonoBehaviour, IItemInteractable, IHandInteractable, ILongHandInteractable, ILongItemInteractable Inheritance object InteractableObject Implements IItemInteractable IHandInteractable ILongHandInteractable ILongItemInteractable Derived Czasoport CzasoportPart BreakableRock Fireplace LockedChest LockedDoor NoFireSign TapePlayer DialogueNPC Trading Fields Logger protected readonly CLogger Logger Field Value CLogger definition protected InterObjectDefinition definition Field Value InterObjectDefinition Methods InteractionHand() public virtual void InteractionHand() InteractionItem(Item) public virtual bool InteractionItem(Item item) Parameters item Item Returns bool LongInteractionHand() public virtual void LongInteractionHand() LongInteractionItem(Item) public virtual bool LongInteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/InteractableObjectSystem.Objects.BreakableRock.html": {
    "href": "api/InteractableObjectSystem.Objects.BreakableRock.html",
    "title": "Class BreakableRock | Czasoport Documentation",
    "keywords": "Class BreakableRock Namespace InteractableObjectSystem.Objects public class BreakableRock : InteractableObject, IItemInteractable, IHandInteractable, ILongHandInteractable, ILongItemInteractable Inheritance object InteractableObject BreakableRock Implements IItemInteractable IHandInteractable ILongHandInteractable ILongItemInteractable Inherited Members InteractableObject.definition InteractableObject.Logger InteractableObject.LongInteractionItem(Item) InteractableObject.LongInteractionHand() Methods InteractionHand() public override void InteractionHand() InteractionItem(Item) public override bool InteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/InteractableObjectSystem.Objects.Fireplace.html": {
    "href": "api/InteractableObjectSystem.Objects.Fireplace.html",
    "title": "Class Fireplace | Czasoport Documentation",
    "keywords": "Class Fireplace Namespace InteractableObjectSystem.Objects public class Fireplace : InteractableObject, IItemInteractable, IHandInteractable, ILongHandInteractable, ILongItemInteractable Inheritance object InteractableObject Fireplace Implements IItemInteractable IHandInteractable ILongHandInteractable ILongItemInteractable Inherited Members InteractableObject.definition InteractableObject.Logger InteractableObject.LongInteractionItem(Item) InteractableObject.LongInteractionHand() Methods InteractionHand() public override void InteractionHand() InteractionItem(Item) public override bool InteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/InteractableObjectSystem.Objects.LockedChest.html": {
    "href": "api/InteractableObjectSystem.Objects.LockedChest.html",
    "title": "Class LockedChest | Czasoport Documentation",
    "keywords": "Class LockedChest Namespace InteractableObjectSystem.Objects public class LockedChest : InteractableObject, IItemInteractable, IHandInteractable, ILongHandInteractable, ILongItemInteractable Inheritance object InteractableObject LockedChest Implements IItemInteractable IHandInteractable ILongHandInteractable ILongItemInteractable Inherited Members InteractableObject.definition InteractableObject.Logger InteractableObject.LongInteractionItem(Item) InteractableObject.LongInteractionHand() Methods InteractionHand() public override void InteractionHand() InteractionItem(Item) public override bool InteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/InteractableObjectSystem.Objects.LockedDoor.html": {
    "href": "api/InteractableObjectSystem.Objects.LockedDoor.html",
    "title": "Class LockedDoor | Czasoport Documentation",
    "keywords": "Class LockedDoor Namespace InteractableObjectSystem.Objects public class LockedDoor : InteractableObject, IItemInteractable, IHandInteractable, ILongHandInteractable, ILongItemInteractable Inheritance object InteractableObject LockedDoor Implements IItemInteractable IHandInteractable ILongHandInteractable ILongItemInteractable Inherited Members InteractableObject.definition InteractableObject.Logger InteractableObject.LongInteractionItem(Item) InteractableObject.LongInteractionHand() Methods InteractionHand() public override void InteractionHand() InteractionItem(Item) public override bool InteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/InteractableObjectSystem.Objects.NoFireSign.html": {
    "href": "api/InteractableObjectSystem.Objects.NoFireSign.html",
    "title": "Class NoFireSign | Czasoport Documentation",
    "keywords": "Class NoFireSign Namespace InteractableObjectSystem.Objects public class NoFireSign : InteractableObject, IItemInteractable, IHandInteractable, ILongHandInteractable, ILongItemInteractable Inheritance object InteractableObject NoFireSign Implements IItemInteractable IHandInteractable ILongHandInteractable ILongItemInteractable Inherited Members InteractableObject.definition InteractableObject.Logger InteractableObject.LongInteractionItem(Item) InteractableObject.InteractionHand() InteractableObject.LongInteractionHand() Methods InteractionItem(Item) public override bool InteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/InteractableObjectSystem.Objects.TapePlayer.html": {
    "href": "api/InteractableObjectSystem.Objects.TapePlayer.html",
    "title": "Class TapePlayer | Czasoport Documentation",
    "keywords": "Class TapePlayer Namespace InteractableObjectSystem.Objects public class TapePlayer : InteractableObject, IItemInteractable, IHandInteractable, ILongHandInteractable, ILongItemInteractable Inheritance object InteractableObject TapePlayer Implements IItemInteractable IHandInteractable ILongHandInteractable ILongItemInteractable Inherited Members InteractableObject.definition InteractableObject.Logger InteractableObject.LongInteractionItem(Item) InteractableObject.InteractionHand() InteractableObject.LongInteractionHand() Methods InteractionItem(Item) public override bool InteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/InteractableObjectSystem.Objects.html": {
    "href": "api/InteractableObjectSystem.Objects.html",
    "title": "Namespace InteractableObjectSystem.Objects | Czasoport Documentation",
    "keywords": "Namespace InteractableObjectSystem.Objects Classes BreakableRock Fireplace LockedChest LockedDoor NoFireSign TapePlayer"
  },
  "api/InteractableObjectSystem.html": {
    "href": "api/InteractableObjectSystem.html",
    "title": "Namespace InteractableObjectSystem | Czasoport Documentation",
    "keywords": "Namespace InteractableObjectSystem Classes InterObjectDefinition Scriptable object for items InteractableObject"
  },
  "api/Interactions.HighlightInteraction.html": {
    "href": "api/Interactions.HighlightInteraction.html",
    "title": "Class HighlightInteraction | Czasoport Documentation",
    "keywords": "Class HighlightInteraction Namespace Interactions public class HighlightInteraction : MonoBehaviour, IHighlightable Inheritance object HighlightInteraction Implements IHighlightable Methods DisableFocusedHighlight() public void DisableFocusedHighlight() DisableHighlight() public void DisableHighlight() EnableFocusedHighlight() public void EnableFocusedHighlight() EnableHighlight() public void EnableHighlight()"
  },
  "api/Interactions.Interactions.html": {
    "href": "api/Interactions.Interactions.html",
    "title": "Class Interactions | Czasoport Documentation",
    "keywords": "Class Interactions Namespace Interactions public class Interactions : MonoBehaviour Inheritance object Interactions Fields Instance public static Interactions Instance Field Value Interactions Events handInteractionPerformed public event EventHandler handInteractionPerformed Event Type EventHandler itemInteractionPerformed public event EventHandler itemInteractionPerformed Event Type EventHandler"
  },
  "api/Interactions.InteractionsSettingsSO.html": {
    "href": "api/Interactions.InteractionsSettingsSO.html",
    "title": "Class InteractionsSettingsSO | Czasoport Documentation",
    "keywords": "Class InteractionsSettingsSO Namespace Interactions public class InteractionsSettingsSO : ScriptableObject Inheritance object InteractionsSettingsSO Fields defaultInteractionRadius public float defaultInteractionRadius Field Value float interactablesLayer public string interactablesLayer Field Value string interactionCheckInterval public float interactionCheckInterval Field Value float itemsLayer public string itemsLayer Field Value string"
  },
  "api/Interactions.Interfaces.IHandInteractable.html": {
    "href": "api/Interactions.Interfaces.IHandInteractable.html",
    "title": "Interface IHandInteractable | Czasoport Documentation",
    "keywords": "Interface IHandInteractable Namespace Interactions.Interfaces public interface IHandInteractable Methods InteractionHand() void InteractionHand()"
  },
  "api/Interactions.Interfaces.IHighlightable.html": {
    "href": "api/Interactions.Interfaces.IHighlightable.html",
    "title": "Interface IHighlightable | Czasoport Documentation",
    "keywords": "Interface IHighlightable Namespace Interactions.Interfaces public interface IHighlightable Methods DisableFocusedHighlight() void DisableFocusedHighlight() DisableHighlight() void DisableHighlight() EnableFocusedHighlight() void EnableFocusedHighlight() EnableHighlight() void EnableHighlight()"
  },
  "api/Interactions.Interfaces.IItemInteractable.html": {
    "href": "api/Interactions.Interfaces.IItemInteractable.html",
    "title": "Interface IItemInteractable | Czasoport Documentation",
    "keywords": "Interface IItemInteractable Namespace Interactions.Interfaces public interface IItemInteractable Methods InteractionItem(Item) bool InteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/Interactions.Interfaces.ILongHandInteractable.html": {
    "href": "api/Interactions.Interfaces.ILongHandInteractable.html",
    "title": "Interface ILongHandInteractable | Czasoport Documentation",
    "keywords": "Interface ILongHandInteractable Namespace Interactions.Interfaces public interface ILongHandInteractable Methods LongInteractionHand() void LongInteractionHand()"
  },
  "api/Interactions.Interfaces.ILongItemInteractable.html": {
    "href": "api/Interactions.Interfaces.ILongItemInteractable.html",
    "title": "Interface ILongItemInteractable | Czasoport Documentation",
    "keywords": "Interface ILongItemInteractable Namespace Interactions.Interfaces public interface ILongItemInteractable Methods LongInteractionItem(Item) bool LongInteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/Interactions.Interfaces.html": {
    "href": "api/Interactions.Interfaces.html",
    "title": "Namespace Interactions.Interfaces | Czasoport Documentation",
    "keywords": "Namespace Interactions.Interfaces Interfaces IHandInteractable IHighlightable IItemInteractable ILongHandInteractable ILongItemInteractable"
  },
  "api/Interactions.html": {
    "href": "api/Interactions.html",
    "title": "Namespace Interactions | Czasoport Documentation",
    "keywords": "Namespace Interactions Classes HighlightInteraction Interactions InteractionsSettingsSO"
  },
  "api/InventorySystem.EventArguments.ItemInsertedEventArgs.html": {
    "href": "api/InventorySystem.EventArguments.ItemInsertedEventArgs.html",
    "title": "Class ItemInsertedEventArgs | Czasoport Documentation",
    "keywords": "Class ItemInsertedEventArgs Namespace InventorySystem.EventArguments public class ItemInsertedEventArgs : EventArgs Inheritance object EventArgs ItemInsertedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Item public Item Item Field Value Item Slot public int Slot Field Value int"
  },
  "api/InventorySystem.EventArguments.ItemRemovedEventArgs.html": {
    "href": "api/InventorySystem.EventArguments.ItemRemovedEventArgs.html",
    "title": "Class ItemRemovedEventArgs | Czasoport Documentation",
    "keywords": "Class ItemRemovedEventArgs Namespace InventorySystem.EventArguments public class ItemRemovedEventArgs : EventArgs Inheritance object EventArgs ItemRemovedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Item public Item Item Field Value Item Slot public int Slot Field Value int"
  },
  "api/InventorySystem.EventArguments.ItemStateChangedEventArgs.html": {
    "href": "api/InventorySystem.EventArguments.ItemStateChangedEventArgs.html",
    "title": "Class ItemStateChangedEventArgs | Czasoport Documentation",
    "keywords": "Class ItemStateChangedEventArgs Namespace InventorySystem.EventArguments public class ItemStateChangedEventArgs Inheritance object ItemStateChangedEventArgs Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Item public Item Item Field Value Item Slot public int Slot Field Value int"
  },
  "api/InventorySystem.EventArguments.SelectedSlotChangedEventArgs.html": {
    "href": "api/InventorySystem.EventArguments.SelectedSlotChangedEventArgs.html",
    "title": "Class SelectedSlotChangedEventArgs | Czasoport Documentation",
    "keywords": "Class SelectedSlotChangedEventArgs Namespace InventorySystem.EventArguments public class SelectedSlotChangedEventArgs : EventArgs Inheritance object EventArgs SelectedSlotChangedEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Slot public int Slot Field Value int"
  },
  "api/InventorySystem.EventArguments.html": {
    "href": "api/InventorySystem.EventArguments.html",
    "title": "Namespace InventorySystem.EventArguments | Czasoport Documentation",
    "keywords": "Namespace InventorySystem.EventArguments Classes ItemInsertedEventArgs ItemRemovedEventArgs ItemStateChangedEventArgs SelectedSlotChangedEventArgs"
  },
  "api/InventorySystem.Inventory.html": {
    "href": "api/InventorySystem.Inventory.html",
    "title": "Class Inventory | Czasoport Documentation",
    "keywords": "Class Inventory Namespace InventorySystem public class Inventory : MonoBehaviour Inheritance object Inventory Fields Instance public static Inventory Instance Field Value Inventory itemHideout public Transform itemHideout Field Value Transform Methods ContainsItem(ItemSO) Check if inventory contains item with the same ItemSO definition. public bool ContainsItem(ItemSO itemSO) Parameters itemSO ItemSO ItemDefinition of the item we want to check. Returns bool GetAllItems() Get list of items in inventory without removing them. All null values are removed, so items won't keep their original indexes. public List<Item> GetAllItems() Returns List<Item> List of Items, without including empty slots. GetInventory() Get inventory, including empty slots, without removing items in it. Items are placed on their corresponding indexes. public Item[] GetInventory() Returns Item[] Array of Item objects including empty slots. GetSelectedItem(out Item) Get currently selected item, but do not remove this item from inventory. public bool GetSelectedItem(out Item item) Parameters item Item Retrieved item if slot was not empty. Returns bool True if slot was not empty, false if slot was empty. If empty, then item will be null. InsertItem(Item) Insert item into inventory. If the selected slot is empty, then item is placed into that slot. public bool InsertItem(Item item) Parameters item Item Item to insert. Returns bool RemoveItem(out Item) Retrieve and remove item from the Inventory. Empty slot is always the result. public bool RemoveItem(out Item item) Parameters item Item Removed item if selected slot was not empty. Returns bool True if item was removed, false if slot was empty. If false, retrieved item will be null. RemoveItem(ItemSO) Removes item based on provided ItemSO. If there are multiple items with the same ItemSO, only the first one will be removed. public bool RemoveItem(ItemSO itemSO) Parameters itemSO ItemSO Definition of the item to be removed. Returns bool UseItem() Changes durability of the selected item by one for each use. If durability is exactly 0, removes item from inventory. public bool UseItem() Returns bool True if item was removed, false if not. Events ItemInserted public event EventHandler<ItemInsertedEventArgs> ItemInserted Event Type EventHandler<ItemInsertedEventArgs> ItemRemoved public event EventHandler<ItemRemovedEventArgs> ItemRemoved Event Type EventHandler<ItemRemovedEventArgs> ItemStateChanged public event EventHandler<ItemStateChangedEventArgs> ItemStateChanged Event Type EventHandler<ItemStateChangedEventArgs> SelectedSlotChanged public event EventHandler<SelectedSlotChangedEventArgs> SelectedSlotChanged Event Type EventHandler<SelectedSlotChangedEventArgs>"
  },
  "api/InventorySystem.InventorySettingsSO.html": {
    "href": "api/InventorySystem.InventorySettingsSO.html",
    "title": "Class InventorySettingsSO | Czasoport Documentation",
    "keywords": "Class InventorySettingsSO Namespace InventorySystem public class InventorySettingsSO : ScriptableObject Inheritance object InventorySettingsSO Fields itemsCount public int itemsCount Field Value int"
  },
  "api/InventorySystem.Tests.InventoryGeneralTests.html": {
    "href": "api/InventorySystem.Tests.InventoryGeneralTests.html",
    "title": "Class InventoryGeneralTests | Czasoport Documentation",
    "keywords": "Class InventoryGeneralTests Namespace InventorySystem.Tests public class InventoryGeneralTests : MonoBehaviour Inheritance object InventoryGeneralTests Methods Start() public void Start()"
  },
  "api/InventorySystem.Tests.html": {
    "href": "api/InventorySystem.Tests.html",
    "title": "Namespace InventorySystem.Tests | Czasoport Documentation",
    "keywords": "Namespace InventorySystem.Tests Classes InventoryGeneralTests"
  },
  "api/InventorySystem.UI.InventoryUI.html": {
    "href": "api/InventorySystem.UI.InventoryUI.html",
    "title": "Class InventoryUI | Czasoport Documentation",
    "keywords": "Class InventoryUI Namespace InventorySystem.UI Manages UI of inventory slots. public class InventoryUI : MonoBehaviour Inheritance object InventoryUI Methods OnChangeSelectedSlot(object, SelectedSlotChangedEventArgs) Highlight choosed slot public void OnChangeSelectedSlot(object sender, SelectedSlotChangedEventArgs args) Parameters sender object args SelectedSlotChangedEventArgs OnItemAdded(object, ItemInsertedEventArgs) Change slot's image to newItem and set durability. public void OnItemAdded(object sender, ItemInsertedEventArgs args) Parameters sender object args ItemInsertedEventArgs OnItemChangeState(object, ItemStateChangedEventArgs) Change slot's image and durability. public void OnItemChangeState(object sender, ItemStateChangedEventArgs args) Parameters sender object args ItemStateChangedEventArgs OnItemRemoved(object, ItemRemovedEventArgs) Change slot's image.apha to 0 and set text responsible for durability to \"\". public void OnItemRemoved(object sender, ItemRemovedEventArgs args) Parameters sender object args ItemRemovedEventArgs"
  },
  "api/InventorySystem.UI.Slot.html": {
    "href": "api/InventorySystem.UI.Slot.html",
    "title": "Class Slot | Czasoport Documentation",
    "keywords": "Class Slot Namespace InventorySystem.UI UI slot class. public class Slot : MonoBehaviour Inheritance object Slot Methods Active() Active slot's frame public void Active() AddItem(Sprite) Add item to slot public void AddItem(Sprite newItem) Parameters newItem Sprite Disactive() Disactive slot's frame public void Disactive() RemoveItem() Remove item from slot public void RemoveItem() SetDurability(int) Change slot's text to new_durability or \"\" public void SetDurability(int new_durability) Parameters new_durability int"
  },
  "api/InventorySystem.UI.Test.TestEvents.html": {
    "href": "api/InventorySystem.UI.Test.TestEvents.html",
    "title": "Class TestEvents | Czasoport Documentation",
    "keywords": "Class TestEvents Namespace InventorySystem.UI.Test Script to test InventoryUI public class TestEvents : MonoBehaviour Inheritance object TestEvents"
  },
  "api/InventorySystem.UI.Test.html": {
    "href": "api/InventorySystem.UI.Test.html",
    "title": "Namespace InventorySystem.UI.Test | Czasoport Documentation",
    "keywords": "Namespace InventorySystem.UI.Test Classes TestEvents Script to test InventoryUI"
  },
  "api/InventorySystem.UI.html": {
    "href": "api/InventorySystem.UI.html",
    "title": "Namespace InventorySystem.UI | Czasoport Documentation",
    "keywords": "Namespace InventorySystem.UI Classes InventoryUI Manages UI of inventory slots. Slot UI slot class."
  },
  "api/InventorySystem.html": {
    "href": "api/InventorySystem.html",
    "title": "Namespace InventorySystem | Czasoport Documentation",
    "keywords": "Namespace InventorySystem Classes Inventory InventorySettingsSO"
  },
  "api/Items.Item.html": {
    "href": "api/Items.Item.html",
    "title": "Class Item | Czasoport Documentation",
    "keywords": "Class Item Namespace Items public class Item : MonoBehaviour, IHandInteractable, ILongHandInteractable Inheritance object Item Implements IHandInteractable ILongHandInteractable Constructors Item() public Item() Item(ItemSO) public Item(ItemSO itemScriptableObject) Parameters itemScriptableObject ItemSO Fields uniqueId public string uniqueId Field Value string Properties Durability public int Durability { get; set; } Property Value int ItemSO public ItemSO ItemSO { get; } Property Value ItemSO Methods InteractionHand() public void InteractionHand() LongInteractionHand() public void LongInteractionHand() ToString() public override string ToString() Returns string"
  },
  "api/Items.ItemSO.html": {
    "href": "api/Items.ItemSO.html",
    "title": "Class ItemSO | Czasoport Documentation",
    "keywords": "Class ItemSO Namespace Items Scriptable object for items public class ItemSO : ScriptableObject Inheritance object ItemSO Fields description public string description Field Value string dropNotification public Notification dropNotification Field Value Notification durability public int durability Field Value int image public Sprite image Field Value Sprite interactionDistance public float interactionDistance Field Value float itemName public string itemName Field Value string pickUpNotification public Notification pickUpNotification Field Value Notification prefab public GameObject prefab Field Value GameObject Methods ToString() public override string ToString() Returns string"
  },
  "api/Items.html": {
    "href": "api/Items.html",
    "title": "Namespace Items | Czasoport Documentation",
    "keywords": "Namespace Items Classes Item ItemSO Scriptable object for items"
  },
  "api/LevelTimeChange.LevelsLoader.LevelInfoSO.html": {
    "href": "api/LevelTimeChange.LevelsLoader.LevelInfoSO.html",
    "title": "Class LevelInfoSO | Czasoport Documentation",
    "keywords": "Class LevelInfoSO Namespace LevelTimeChange.LevelsLoader Stores information about one 'platform' in the game. public class LevelInfoSO : UniqueScriptableObject Inheritance object UniqueScriptableObject LevelInfoSO Inherited Members UniqueScriptableObject.uniqueId UniqueScriptableObject.GenerateUniqueId() Fields neighbourLevels public LevelInfoSO[] neighbourLevels Field Value LevelInfoSO[] sceneName public string sceneName Field Value string Methods ToString() public override string ToString() Returns string"
  },
  "api/LevelTimeChange.LevelsLoader.LevelManager.html": {
    "href": "api/LevelTimeChange.LevelsLoader.LevelManager.html",
    "title": "Class LevelManager | Czasoport Documentation",
    "keywords": "Class LevelManager Namespace LevelTimeChange.LevelsLoader LevelManager is responsible for managing one 'level platform'. It activates and deactivates level content, talks with LevelsManager and LevelPortals to perform Discovery process. public class LevelManager : MonoBehaviour Inheritance object LevelManager Fields currentLevel public LevelInfoSO currentLevel Field Value LevelInfoSO neighborLevels public List<LevelInfoSO> neighborLevels Field Value List<LevelInfoSO> Methods ActivateLevel() It will set all level content to be active. Use it only when this level is going to be one played on by the player. public void ActivateLevel() AddLevelObject(GameObject) Sets object's parent to current scene's content. public void AddLevelObject(GameObject levelObject) Parameters levelObject GameObject Object that should be part of the current scene DeactivateLevel() It will set all level content to be inactive and report to LevelsManager that this scene is ready for Discovery process. It is automatically called when scene is loaded. public void DeactivateLevel() FindTimelineMaps() public TimelineMaps FindTimelineMaps() Returns TimelineMaps MakeDiscovery(LevelInfoSO) Start discovery process with specified level. It tells portals on this scene to try to match with portals on another one. public void MakeDiscovery(LevelInfoSO levelToDiscover) Parameters levelToDiscover LevelInfoSO Level ready for discovery process. ReturnMatchingPortal(LevelInfoSO, LevelPortal) Used in discovery process. For specified portal and source level, return matching portal on this scene. public LevelPortal ReturnMatchingPortal(LevelInfoSO sourceLevel, LevelPortal sourcePortal) Parameters sourceLevel LevelInfoSO Level that asks for discovery. sourcePortal LevelPortal Specific portal that asks for discovery. Returns LevelPortal Matching portal. Exceptions Exception Exception is thrown when there is no matching portal. ToString() public override string ToString() Returns string"
  },
  "api/LevelTimeChange.LevelsLoader.LevelPortal.html": {
    "href": "api/LevelTimeChange.LevelsLoader.LevelPortal.html",
    "title": "Class LevelPortal | Czasoport Documentation",
    "keywords": "Class LevelPortal Namespace LevelTimeChange.LevelsLoader This component is used to define teleport to another platform. Based on information provided to it, it tries to discover matching teleport on another scene. When successful, it is able to teleport player to this scene. public class LevelPortal : MonoBehaviour Inheritance object LevelPortal Fields destinedLevel public LevelInfoSO destinedLevel Field Value LevelInfoSO Methods GetTeleportPoint() Returns point in the world this teleports point to. public Vector3 GetTeleportPoint() Returns Vector3 Point in game. IsMatch(LevelInfoSO, LevelPortal) Check if provided portal matches this portal. public bool IsMatch(LevelInfoSO sourceLevel, LevelPortal sourcePortal) Parameters sourceLevel LevelInfoSO Source level. sourcePortal LevelPortal Potential level match. Returns bool True if portal is a match, False otherwise. MakeDiscovery(LevelInfoSO) Start discovery process with destined level. Invoking this function on it's own will not ensure that destined level is loaded and can take part in discovery process. public void MakeDiscovery(LevelInfoSO currentLevel) Parameters currentLevel LevelInfoSO Source level of discovery. SetTimeLine(TimeLine) Set the timeline of the portal. Used during loading scenes. public void SetTimeLine(TimeLine timeLine) Parameters timeLine TimeLine ToString() public override string ToString() Returns string"
  },
  "api/LevelTimeChange.LevelsLoader.LevelsManager.html": {
    "href": "api/LevelTimeChange.LevelsLoader.LevelsManager.html",
    "title": "Class LevelsManager | Czasoport Documentation",
    "keywords": "Class LevelsManager Namespace LevelTimeChange.LevelsLoader Manager of levels loading and switching system. Central point of communication between rest of included components. It is a singleton, attached to object present through the game. public class LevelsManager : MonoBehaviour, IDataPersistence Inheritance object LevelsManager Implements IDataPersistence Fields LoadedLevels All currently loaded levels. public Dictionary<LevelInfoSO, LevelManager> LoadedLevels Field Value Dictionary<LevelInfoSO, LevelManager> Properties CurrentLevelManager public LevelManager CurrentLevelManager { get; } Property Value LevelManager Instance Singleton instance of this class. public static LevelsManager Instance { get; } Property Value LevelsManager Methods ChangeLevel(LevelInfoSO, LevelPortal) Change active level. public void ChangeLevel(LevelInfoSO destinedLevelInfo, LevelPortal destinationPortal) Parameters destinedLevelInfo LevelInfoSO Level to be switched to. destinationPortal LevelPortal Portal to be switched to. LoadFirstLevel() Load first scene after joining the game public void LoadFirstLevel() LoadPersistentData(GameData) public void LoadPersistentData(GameData gameData) Parameters gameData GameData ReportForDiscovery(LevelInfoSO) This method is used by the LevelManager of some scene to let the system know that the scene has been loaded and is ready for discovery process from current scene. public void ReportForDiscovery(LevelInfoSO level) Parameters level LevelInfoSO SavePersistentData(ref GameData) public void SavePersistentData(ref GameData gameData) Parameters gameData GameData ToString() public override string ToString() Returns string"
  },
  "api/LevelTimeChange.LevelsLoader.TimelineMaps.html": {
    "href": "api/LevelTimeChange.LevelsLoader.TimelineMaps.html",
    "title": "Class TimelineMaps | Czasoport Documentation",
    "keywords": "Class TimelineMaps Namespace LevelTimeChange.LevelsLoader public class TimelineMaps Inheritance object TimelineMaps Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TimelineMaps(Transform, Transform, Transform) public TimelineMaps(Transform past, Transform present, Transform future) Parameters past Transform present Transform future Transform Properties future public Transform future { get; set; } Property Value Transform past public Transform past { get; set; } Property Value Transform present public Transform present { get; set; } Property Value Transform"
  },
  "api/LevelTimeChange.LevelsLoader.html": {
    "href": "api/LevelTimeChange.LevelsLoader.html",
    "title": "Namespace LevelTimeChange.LevelsLoader | Czasoport Documentation",
    "keywords": "Namespace LevelTimeChange.LevelsLoader Classes LevelInfoSO Stores information about one 'platform' in the game. LevelManager LevelManager is responsible for managing one 'level platform'. It activates and deactivates level content, talks with LevelsManager and LevelPortals to perform Discovery process. LevelPortal This component is used to define teleport to another platform. Based on information provided to it, it tries to discover matching teleport on another scene. When successful, it is able to teleport player to this scene. LevelsManager Manager of levels loading and switching system. Central point of communication between rest of included components. It is a singleton, attached to object present through the game. TimelineMaps"
  },
  "api/LevelTimeChange.TimeChange.CheckCollider.html": {
    "href": "api/LevelTimeChange.TimeChange.CheckCollider.html",
    "title": "Class CheckCollider | Czasoport Documentation",
    "keywords": "Class CheckCollider Namespace LevelTimeChange.TimeChange Provides checking collision for time change mechanic. public class CheckCollider : MonoBehaviour Inheritance object CheckCollider Methods IsNotTouching() Checking if Player can change time. CheckCollider's collider isn't touching any not trigger collider. public bool IsNotTouching() Returns bool Whether Player can change time or not"
  },
  "api/LevelTimeChange.TimeChange.Tests.PlayerTTCtest.html": {
    "href": "api/LevelTimeChange.TimeChange.Tests.PlayerTTCtest.html",
    "title": "Class PlayerTTCtest | Czasoport Documentation",
    "keywords": "Class PlayerTTCtest Namespace LevelTimeChange.TimeChange.Tests public class PlayerTTCtest : MonoBehaviour Inheritance object PlayerTTCtest"
  },
  "api/LevelTimeChange.TimeChange.Tests.html": {
    "href": "api/LevelTimeChange.TimeChange.Tests.html",
    "title": "Namespace LevelTimeChange.TimeChange.Tests | Czasoport Documentation",
    "keywords": "Namespace LevelTimeChange.TimeChange.Tests Classes PlayerTTCtest"
  },
  "api/LevelTimeChange.TimeChange.TimeChanger.OnTimeChangeEventArgs.html": {
    "href": "api/LevelTimeChange.TimeChange.TimeChanger.OnTimeChangeEventArgs.html",
    "title": "Class TimeChanger.OnTimeChangeEventArgs | Czasoport Documentation",
    "keywords": "Class TimeChanger.OnTimeChangeEventArgs Namespace LevelTimeChange.TimeChange public class TimeChanger.OnTimeChangeEventArgs : EventArgs Inheritance object EventArgs TimeChanger.OnTimeChangeEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields time public TimeLine time Field Value TimeLine"
  },
  "api/LevelTimeChange.TimeChange.TimeChanger.html": {
    "href": "api/LevelTimeChange.TimeChange.TimeChanger.html",
    "title": "Class TimeChanger | Czasoport Documentation",
    "keywords": "Class TimeChanger Namespace LevelTimeChange.TimeChange Manages time changing mechanic. public class TimeChanger : MonoBehaviour, IDataPersistence Inheritance object TimeChanger Implements IDataPersistence Fields actualTime Timeline the player is currently on. public TimeLine actualTime Field Value TimeLine Properties Instance public static TimeChanger Instance { get; } Property Value TimeChanger Methods CanChangeTime(TimeLine) Asks appropriate CheckCollider if Player can change time. public bool CanChangeTime(TimeLine timeToCheck) Parameters timeToCheck TimeLine Returns bool EnableTimeChange() public void EnableTimeChange() IsTimeUnlocked(TimeLine) public bool IsTimeUnlocked(TimeLine timeLine) Parameters timeLine TimeLine Returns bool LoadPersistentData(GameData) public void LoadPersistentData(GameData gameData) Parameters gameData GameData LockTimeline(TimeLine) public void LockTimeline(TimeLine timelineToLock) Parameters timelineToLock TimeLine SavePersistentData(ref GameData) public void SavePersistentData(ref GameData gameData) Parameters gameData GameData ToString() public override string ToString() Returns string UnlockTimeline(TimeLine) public void UnlockTimeline(TimeLine timelineToUnlock) Parameters timelineToUnlock TimeLine Events OnTimeChange public event EventHandler<TimeChanger.OnTimeChangeEventArgs> OnTimeChange Event Type EventHandler<TimeChanger.OnTimeChangeEventArgs> TimeChangeUnlocked public event EventHandler TimeChangeUnlocked Event Type EventHandler"
  },
  "api/LevelTimeChange.TimeChange.html": {
    "href": "api/LevelTimeChange.TimeChange.html",
    "title": "Namespace LevelTimeChange.TimeChange | Czasoport Documentation",
    "keywords": "Namespace LevelTimeChange.TimeChange Classes CheckCollider Provides checking collision for time change mechanic. TimeChanger Manages time changing mechanic. TimeChanger.OnTimeChangeEventArgs"
  },
  "api/LevelTimeChange.TimeLine.html": {
    "href": "api/LevelTimeChange.TimeLine.html",
    "title": "Enum TimeLine | Czasoport Documentation",
    "keywords": "Enum TimeLine Namespace LevelTimeChange public enum TimeLine Fields Future = 2 Past = 0 Present = 1"
  },
  "api/LevelTimeChange.TimePlatformChangeSettingsSO.html": {
    "href": "api/LevelTimeChange.TimePlatformChangeSettingsSO.html",
    "title": "Class TimePlatformChangeSettingsSO | Czasoport Documentation",
    "keywords": "Class TimePlatformChangeSettingsSO Namespace LevelTimeChange Settings for scene changing and time changing systems. public class TimePlatformChangeSettingsSO : ScriptableObject Inheritance object TimePlatformChangeSettingsSO Fields loopTimeChange public bool loopTimeChange Field Value bool offsetFromPresentPlatform public Vector2 offsetFromPresentPlatform Field Value Vector2 platformChangeAnimLength public float platformChangeAnimLength Field Value float timelineChangeAnimLength public float timelineChangeAnimLength Field Value float"
  },
  "api/LevelTimeChange.html": {
    "href": "api/LevelTimeChange.html",
    "title": "Namespace LevelTimeChange | Czasoport Documentation",
    "keywords": "Namespace LevelTimeChange Classes TimePlatformChangeSettingsSO Settings for scene changing and time changing systems. Enums TimeLine"
  },
  "api/NPC.DialogueNPC.html": {
    "href": "api/NPC.DialogueNPC.html",
    "title": "Class DialogueNPC | Czasoport Documentation",
    "keywords": "Class DialogueNPC Namespace NPC public class DialogueNPC : InteractableObject, IItemInteractable, IHandInteractable, ILongHandInteractable, ILongItemInteractable Inheritance object InteractableObject DialogueNPC Implements IItemInteractable IHandInteractable ILongHandInteractable ILongItemInteractable Inherited Members InteractableObject.definition InteractableObject.Logger InteractableObject.InteractionItem(Item) InteractableObject.LongInteractionItem(Item) InteractableObject.LongInteractionHand() Methods InteractionHand() public override void InteractionHand()"
  },
  "api/NPC.PathWalking.html": {
    "href": "api/NPC.PathWalking.html",
    "title": "Class PathWalking | Czasoport Documentation",
    "keywords": "Class PathWalking Namespace NPC public class PathWalking : MonoBehaviour Inheritance object PathWalking Methods StartWalk() Npc continues walk by path public void StartWalk() StopWalk() Stop npc public void StopWalk()"
  },
  "api/NPC.Trading.html": {
    "href": "api/NPC.Trading.html",
    "title": "Class Trading | Czasoport Documentation",
    "keywords": "Class Trading Namespace NPC public class Trading : InteractableObject, IItemInteractable, IHandInteractable, ILongHandInteractable, ILongItemInteractable Inheritance object InteractableObject Trading Implements IItemInteractable IHandInteractable ILongHandInteractable ILongItemInteractable Inherited Members InteractableObject.definition InteractableObject.Logger InteractableObject.LongInteractionItem(Item) InteractableObject.LongInteractionHand() Methods InteractionHand() public override void InteractionHand() InteractionItem(Item) public override bool InteractionItem(Item item) Parameters item Item Returns bool"
  },
  "api/NPC.html": {
    "href": "api/NPC.html",
    "title": "Namespace NPC | Czasoport Documentation",
    "keywords": "Namespace NPC Classes DialogueNPC PathWalking Trading"
  },
  "api/Notifications.Notification.html": {
    "href": "api/Notifications.Notification.html",
    "title": "Class Notification | Czasoport Documentation",
    "keywords": "Class Notification Namespace Notifications [Serializable] public class Notification Inheritance object Notification Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Notification(string, float) public Notification(string message, float displayTime) Parameters message string displayTime float Fields displayTime public float displayTime Field Value float message public string message Field Value string"
  },
  "api/Notifications.html": {
    "href": "api/Notifications.html",
    "title": "Namespace Notifications | Czasoport Documentation",
    "keywords": "Namespace Notifications Classes Notification"
  },
  "api/PlayerScripts.Player.html": {
    "href": "api/PlayerScripts.Player.html",
    "title": "Class Player | Czasoport Documentation",
    "keywords": "Class Player Namespace PlayerScripts public class Player : MonoBehaviour, IDataPersistence Inheritance object Player Implements IDataPersistence Properties Instance public static Player Instance { get; } Property Value Player Methods LoadPersistentData(GameData) public void LoadPersistentData(GameData gameData) Parameters gameData GameData SavePersistentData(ref GameData) public void SavePersistentData(ref GameData gameData) Parameters gameData GameData ToString() public override string ToString() Returns string Events OnPlayerMoved public event EventHandler OnPlayerMoved Event Type EventHandler"
  },
  "api/PlayerScripts.PlayerSettingsSO.html": {
    "href": "api/PlayerScripts.PlayerSettingsSO.html",
    "title": "Class PlayerSettingsSO | Czasoport Documentation",
    "keywords": "Class PlayerSettingsSO Namespace PlayerScripts Settings for scene changing and time changing systems. public class PlayerSettingsSO : ScriptableObject Inheritance object PlayerSettingsSO Fields movementSpeed public float movementSpeed Field Value float"
  },
  "api/PlayerScripts.html": {
    "href": "api/PlayerScripts.html",
    "title": "Namespace PlayerScripts | Czasoport Documentation",
    "keywords": "Namespace PlayerScripts Classes Player PlayerSettingsSO Settings for scene changing and time changing systems."
  },
  "api/Settings.DeveloperSettings.html": {
    "href": "api/Settings.DeveloperSettings.html",
    "title": "Class DeveloperSettings | Czasoport Documentation",
    "keywords": "Class DeveloperSettings Namespace Settings Manages different setting sets used for internal settings. public class DeveloperSettings : MonoBehaviour Inheritance object DeveloperSettings Fields Instance public static DeveloperSettings Instance Field Value DeveloperSettings appSettings Application settings public ApplicationSettingsSO appSettings Field Value ApplicationSettingsSO dsdSettings Default settings for new game save public DefaultSaveDataSO dsdSettings Field Value DefaultSaveDataSO intSettings Interactions settings public InteractionsSettingsSO intSettings Field Value InteractionsSettingsSO invSettings Inventory settings public InventorySettingsSO invSettings Field Value InventorySettingsSO playerSettings Player settings public PlayerSettingsSO playerSettings Field Value PlayerSettingsSO tpcSettings Settings for Time Change and Platform Change systems public TimePlatformChangeSettingsSO tpcSettings Field Value TimePlatformChangeSettingsSO"
  },
  "api/Settings.html": {
    "href": "api/Settings.html",
    "title": "Namespace Settings | Czasoport Documentation",
    "keywords": "Namespace Settings Classes DeveloperSettings Manages different setting sets used for internal settings."
  },
  "api/UI.Menu.html": {
    "href": "api/UI.Menu.html",
    "title": "Class Menu | Czasoport Documentation",
    "keywords": "Class Menu Namespace UI Script for main menu in game public class Menu : MonoBehaviour Inheritance object Menu"
  },
  "api/UI.PauseUI.html": {
    "href": "api/UI.PauseUI.html",
    "title": "Class PauseUI | Czasoport Documentation",
    "keywords": "Class PauseUI Namespace UI Script for pause menu in game public class PauseUI : MonoBehaviour Inheritance object PauseUI Methods IsGamePaused() public bool IsGamePaused() Returns bool"
  },
  "api/UI.TimeChangeUI.html": {
    "href": "api/UI.TimeChangeUI.html",
    "title": "Class TimeChangeUI | Czasoport Documentation",
    "keywords": "Class TimeChangeUI Namespace UI public class TimeChangeUI : MonoBehaviour Inheritance object TimeChangeUI Methods ChangeInvBackground(TimeLine) public void ChangeInvBackground(TimeLine UnlockedTime) Parameters UnlockedTime TimeLine UpdateTimeUI() public void UpdateTimeUI()"
  },
  "api/UI.TimeUIToogle.html": {
    "href": "api/UI.TimeUIToogle.html",
    "title": "Class TimeUIToogle | Czasoport Documentation",
    "keywords": "Class TimeUIToogle Namespace UI public class TimeUIToogle : MonoBehaviour Inheritance object TimeUIToogle Methods SetStroke(bool) public void SetStroke(bool isActive) Parameters isActive bool"
  },
  "api/UI.html": {
    "href": "api/UI.html",
    "title": "Namespace UI | Czasoport Documentation",
    "keywords": "Namespace UI Classes Menu Script for main menu in game PauseUI Script for pause menu in game TimeChangeUI TimeUIToogle"
  },
  "api/Utils.Attributes.ObjectIdentifierAttribute.html": {
    "href": "api/Utils.Attributes.ObjectIdentifierAttribute.html",
    "title": "Class ObjectIdentifierAttribute | Czasoport Documentation",
    "keywords": "Class ObjectIdentifierAttribute Namespace Utils.Attributes public class ObjectIdentifierAttribute : PropertyAttribute Inheritance object ObjectIdentifierAttribute"
  },
  "api/Utils.Attributes.ReadOnlyAttribute.html": {
    "href": "api/Utils.Attributes.ReadOnlyAttribute.html",
    "title": "Class ReadOnlyAttribute | Czasoport Documentation",
    "keywords": "Class ReadOnlyAttribute Namespace Utils.Attributes public class ReadOnlyAttribute : PropertyAttribute Inheritance object ReadOnlyAttribute"
  },
  "api/Utils.Attributes.html": {
    "href": "api/Utils.Attributes.html",
    "title": "Namespace Utils.Attributes | Czasoport Documentation",
    "keywords": "Namespace Utils.Attributes Classes ObjectIdentifierAttribute ReadOnlyAttribute"
  },
  "api/Utils.Singleton.Singleton-1.html": {
    "href": "api/Utils.Singleton.Singleton-1.html",
    "title": "Class Singleton<T> | Czasoport Documentation",
    "keywords": "Class Singleton<T> Namespace Utils.Singleton public class Singleton<T> : MonoBehaviour where T : MonoBehaviour Type Parameters T Inheritance object Singleton<T> Derived DialogueManager Properties I public static T I { get; } Property Value T Methods Awake() protected virtual void Awake()"
  },
  "api/Utils.Singleton.SingletonOverrideException.html": {
    "href": "api/Utils.Singleton.SingletonOverrideException.html",
    "title": "Class SingletonOverrideException | Czasoport Documentation",
    "keywords": "Class SingletonOverrideException Namespace Utils.Singleton public class SingletonOverrideException : Exception, ISerializable Inheritance object Exception SingletonOverrideException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SingletonOverrideException() public SingletonOverrideException() SingletonOverrideException(string) public SingletonOverrideException(string message) Parameters message string SingletonOverrideException(string, Exception) public SingletonOverrideException(string message, Exception inner) Parameters message string inner Exception"
  },
  "api/Utils.Singleton.html": {
    "href": "api/Utils.Singleton.html",
    "title": "Namespace Utils.Singleton | Czasoport Documentation",
    "keywords": "Namespace Utils.Singleton Classes SingletonOverrideException Singleton<T>"
  },
  "api/Utils.UniqueScriptableObject.html": {
    "href": "api/Utils.UniqueScriptableObject.html",
    "title": "Class UniqueScriptableObject | Czasoport Documentation",
    "keywords": "Class UniqueScriptableObject Namespace Utils public class UniqueScriptableObject : ScriptableObject Inheritance object UniqueScriptableObject Derived LevelInfoSO Fields uniqueId public string uniqueId Field Value string Methods GenerateUniqueId() public void GenerateUniqueId()"
  },
  "api/Utils.html": {
    "href": "api/Utils.html",
    "title": "Namespace Utils | Czasoport Documentation",
    "keywords": "Namespace Utils Classes UniqueScriptableObject"
  },
  "gdd/Fabuła/Fabuła.html": {
    "href": "gdd/Fabuła/Fabuła.html",
    "title": "Fabuła | Czasoport Documentation",
    "keywords": "Fabuła <-- GDD Motyw Jesteś aspirującym funkcjonariuszem Rady Czasoprzestrzeni. Jako egzemin wstępny musisz \"uratować\" mało znaczący świat przed zagładą. Zarys Fabularny Daleka przyszłość, Ziemia wynalazła technologię umożliwiającą podróż w czasoprzestrzeni, ale w tym czasie zaczęło brakować im surowców. Inne planety systemu słonecznego okazały się nieadekwatne do życia lub produkcji. Aby rozwiązać problem, Rada Czasoprzestrzeni, wysyła swoich pracowników na inne planety, w innych czasoprzestrzeniach, aby przejęli ich surowce. Ci funkcjonariusze potrafią przemieszczać się po różnych czasach cywilizacji na tej planecie, aby manipulować ich rozwój w taki sposób, aby produkowała ona duże ilości pożądanego surowca. Ostatecznie, Ziemianie kradną te surowce, przez co cywilizacje widzą ich jako kosmitów. (Przykładowo, ziemianie kradną zboże przenosząc je na Ziemie w sposób, który tworzy kręgi w zbożu). Gracz jest aspirującym funkcjonariuszem Rady Czasoprzestrzeni i jako egzamin wstępny wysłany zostaje na planetę niskiej wartości, która bez pomocy ulegnie zagładzie. Jeżeli graczowi się uda ją uratować, Ziemia zyska surowce i nowego funkcjonariusza. Jeżeli nie, trudno, ta planeta nie jest tak ważna, a gracz najwyżej nie zostanie przyjęty do pracy :( (Stworzenie szczegółowej fabuły zajmie trochę dłużej) (To, jak dokładnie działa i funkcjonuje Rada Czasoprzestrzeni nie jest zbyt ważne na ten moment. Jeżeli graficy chcą stworzyć jakiś concept art to mogą dać ponieść się wyobraźni, ale ważniejszy jest świat obcy, na którym gracz będzie przez praktycznie całą rozgrywkę) Progresja Historii Do napisania (Stworzenie szczegółowej fabuły zajmie trochę dłużej) Miejsca Akcji Przykładowe pomysły: pola/przedmieścia/zrujnowane budynki wioska/miasto/zniszczona metropolia centrum wioski/rynek/pobojowisko las/park/spalony park jaskinia/kopalnia/zawalona jaskinia Intro Pierwsza lokalizacja z którą ma do czynienia gracz, jak również jedyna planowana lokacja do demo gry. Początki - pola rolnicze z namiotami nieopodal. Złoty Wiek - przedmieścia tętniące życiem nie różniącym się zbytnio od dzisiejszego, ziemskiego. Upadek - zawalony mur graniczny, spalony punkt kontrolny. Kilka domów w złym stanie nieopodal. Lore To później."
  },
  "gdd/GDD.html": {
    "href": "gdd/GDD.html",
    "title": "Game Design Document | Czasoport Documentation",
    "keywords": "Game Design Document <-- ReadMe --> Fabuła <-- Zawiera: Motyw gry Opis Głównej Historii Jak historia ma się rozwijać podczas rozgrywki Lokacje użyte podczas kreowania wydarzeń Lore świata (Opcjonalie) --> Rozgrywka <-- Zawiera: Cel Gry Mechanika gry Opis umiejętności Gracza Jak mechanika będzie się rozwijała podczas rozgrywki Ulepszenia oraz Przedmioty Kiedy następuję przegrana Rozgrywki --> Postacie i Obiekty <-- Zawiera: Opis Postaci występujących w grze Jaką spełniają role np. handlarz, pomocnik gracza Historia tych postaci oraz ich dialogi Przedmioty które wpływają na rozgrywkę Ich specjalne właściwości --> Poziomy <-- Zawiera: Szkice poziomów oraz wykorzystane lokacje do ich stworzenia Opis jak dany poziom będzie działał na rozgrywkę czyli. W jaki sposób on utrudnia czy też ułatwia w graczom wygranie Gry. Opis występujących w nim specjalnych przedmiotów i obiektów. --> Interfejs_Użytkownika <-- Zawiera: Opis wszystkich scen developera np. Menu główne, sklep Jak ma działać logika UI np. gdzie ma przekierowywać naciśnięty guzik. Jak wiele ekranu będzie zajmować interfejs podczas rozgrywki jakie statystyki mają być na nim wyświetlone --> Grafika <-- Zawiera: Grafiki koncepcyjne rozgrywki, takie jak mapa, wrogowie, gracze, przedmioty, ... Grafiki Interfejsu użytkownika Animacje postaci Modele obiektów Tekstury Użyte Shadery --> Muzyka <-- Zawiera: Muzykę do Gry Dialogi postaci Dźwięki efektów środowiskowych Dźwięki efektów Interfejsu Użytkownika --> Opis Techniczny <-- Zawiera: Używany silnik graficzny Platformy na które ma zostać wydana Gra Język Programowania Programy Potrzebne do Pracy na grą jak np. Photoshop, Blender, VS Code Użyte technologie Czy i Jak będzie wyglądała komunikacja sieciowa w Grze --> Marketing i Monetyzacja <-- Zawiera: Grupa Docelowa, jak jest wielka oraz czemu nie da się jej zwiększyć Ilość potencjalnych odbiorców w każdej Platformie (np. PC, Android, PS4) Jak i Gdzie zostanie gra upubliczniona w celu jej rozpromowania Czy jest ona Płatna czy Darmowa Szacunek odniesionych z niej przychodów. --> Nowe Pomysły <-- Zawiera: Jest to baza pomysłów które warto zapamiętać Każdy użytkownik powinien móc wpisywać tutaj co tylko zechce Należy dla każdego każdego pomysłu stworzyć w folderze \"Nowe Pomysły\" dowolny plik markdown a następnie go opisać"
  },
  "gdd/Grafika/Grafika.html": {
    "href": "gdd/Grafika/Grafika.html",
    "title": "Grafika | Czasoport Documentation",
    "keywords": "Grafika <-- GDD Zależna od grafików, ale gra przedstawiona będzie w 2.5D w widoku od góry/izometrycznym. Jeżeli 3D to raczej coś wystylizowanego i prostego jak \"Tunic\", albo \"Death's Door\". Może być też Pixel art, a nawet rysowane, jeżeli implementacja tego okaże się łatwiejsza. Sugeruję, aby graficy zdecydowali między sobą w jaki sposób najbardziej skutecznie będą w stanie przedstawić świat w grze. Grafiki Koncepcyjne Świata ... Grafiki Koncepcyjne Postaci Postać 1 Szkic Postaci lub model ... Animacja ... Grafiki Koncepcyjne Wrogów Wróg 1 Szkic Wroga lub model ... Animacja ... ... Grafiki Interfejsu Użytkownika ... Tekstury ... Użyte Shadery ..."
  },
  "gdd/Interfejs_Użytkownika/Interfejs_Użytkownika.html": {
    "href": "gdd/Interfejs_Użytkownika/Interfejs_Użytkownika.html",
    "title": "Interfejs Użytkownika | Czasoport Documentation",
    "keywords": "Interfejs Użytkownika <-- GDD Minimalny, podobnie jak kontrole. Gracz na ekranie widzi hotbar (ekwipunek). Gdy zbliży się do obiektu z którym może wejść w interakcję, ten obiekt otacza outline. Na ekranie widoczny jest także 'Czasoport', który wyświetla, w którym czasie jesteśmy i czy gracz może się bezpiecznie przenieść w danym kierunku w czasie (jeżeli jest w walce, albo w innym czasie ). Rozgrywka Szkic interfejsu Zrobiłem w pixel-arcie, bo tak było mi najłatwiej szybko zrobić coś kolorowego i czytelnego. Jak wiele zakrywa interfejs użytkownika Około 20-30% ekranu - jak najmniej, aby było funkcjonalnie (interfejs przedstawiony na szkicu jest bardzo powiększony, więc ostatecznie elementy będą mniejsze, ale ogólne ich rozmieszczenie jest prawidłowe, chociaż nie wyryte w kamieniu) Jakie Statystyki będą wyświetlane i gdzie Kursor (przedstawiony bardzo powiększonej wersji na szkicu) Przedmioty w ekwipunku Czas, w którym gracz się znajudje Czy jest bezpieczne przeniesienie się w czasie w daną stronę (czerwony kolor - niebezpiecznie, zielony - bezpiecznie) (opcjonalnie) cel/objective Jakie zdarzenia mają się wykonywać po naciśnięciu odpowiednich przycisków ... Menu Szkic interfejsu ... Jakie zdarzenia mają się wykonywać po naciśnięciu odpowiednich przycisków ... Sklep ..."
  },
  "gdd/Marketing_i_Monetyzacja/Marketing_i_Monetyzacja.html": {
    "href": "gdd/Marketing_i_Monetyzacja/Marketing_i_Monetyzacja.html",
    "title": "| Czasoport Documentation",
    "keywords": "Documentation\\GDD\\Marketing_i_Monetyzacja\\Marketing_i_Monetyzacja.md# Marketing i Monetyzacja <-- GDD Rodzaj Dystrybucji: Darmowa, Płatna ... Grupa Docelowa Zakres grupy ... Do kogo zwracamy się z naszą ofertą ... Czemu nie da się zwiększyć grupy docelowej ... Platformy wydania Gry PC Wielkość grupy docelowej ... Cena Produktu ... ... Jak i Gdzie gra zostanie upubliczniona Lista Platform Google Facebook ... W jaki sposób zamierzamy reklamować Grę ... Maksymalna ilość środków przeznaczona na Reklamę ... Szacunek Odniesionych z niech przychodów ..."
  },
  "gdd/Muzyka/Muzyka.html": {
    "href": "gdd/Muzyka/Muzyka.html",
    "title": "Muzyka | Czasoport Documentation",
    "keywords": "Muzyka <-- GDD Do ustalenia. Instrumenty będą zmieniać się w zależności od czasu, w którym gracz się znajduje, gdy melodia pozostanie mniej więcej taka sama. Muzyka podczas rozgrywki ... Dźwięki efektów środowiskowych ... Dialogi postaci ... Dźwięki efektów interfejsu użytkownika ..."
  },
  "gdd/Nowe_Pomysły/Nowe_Pomysły.html": {
    "href": "gdd/Nowe_Pomysły/Nowe_Pomysły.html",
    "title": "Nowe Pomysły | Czasoport Documentation",
    "keywords": "Nowe Pomysły <-- GDD Pomysł 1 ... Pomysł 2 ... ..."
  },
  "gdd/Opis_Techniczny/Opis_Techniczny.html": {
    "href": "gdd/Opis_Techniczny/Opis_Techniczny.html",
    "title": "Opis Techniczny | Czasoport Documentation",
    "keywords": "Opis Techniczny <-- GDD Używany silnik graficzny Unity 2021.3.12f1 Język Programowania C# Użyte technologie ... Programy potrzebne do pracy nad grą Unity, IDE, GIMP Platformy wydania gry WebGL, Windows, Linux, MacOS Komunikacja sieciowa jeżeli jest Brak, gra nie wymaga komunikacji sieciowej. Komunikacja z Bazą danych Brak, gra nie wymaga komunikacji z bazą danych."
  },
  "gdd/Postacie_i_Obiekty/Postacie_i_Obiekty.html": {
    "href": "gdd/Postacie_i_Obiekty/Postacie_i_Obiekty.html",
    "title": "Postacie i obiekty | Czasoport Documentation",
    "keywords": "Postacie i obiekty <-- GDD Postacie występujące w grze (Ostateczne wyglądy zależne od grafików, to są jedynie pomysły, ale inspiracja kulturami prekolumbijskimi jest ważna) Postać gracza Najważniejszą postacią w grze jest postać gracza. Postać na ogół nie będzie wiele mówić. Jest bardziej po prostu sposobem, w jaki gracz może poruszać się po świecie i wchodzić z nim w interakcję. Postać gracza przy interakcji z niektórymi przedmiotami może podawać wskazówki w formie dymku dialogowego. Ubiór postaci będzie przypominał ubiór reszty Ziemian – nowoczesny i inspirowany połączeniem konkwistadora z astronautą. Będzie to wyraźna odskocznia od wyglądu obywateli planety, którą gracz ma za zadanie “uratować”. Płeć postaci nie odgrywa tu zbyt wielkiej roli, ale ważne żeby wyglądała na około 20-25 lat. NPC Z reguły żadna postać nie będzie nazywana po imieniu, gdyż mówić będą bardzo mało. W tym momencie nie ma konkretnego wyglądu żadnej postaci, ale wygląd obywateli świata, “ratowanego” przez gracza będzie inspirowany aztekami i ich bóstwem. Kolor skóry może być żółty, czerwony, niebieski, a ich ubiór będzie bardziej “kwadratowy” i kanciasty w porównaniu z bardziej zaokrąglonym wyglądem gracza. Ci obywatele mogliby też różnić się od ludzi, np. większa ilość kończyn, lekko nieludzkimi kształty, itp. Ważne jednak, aby nie byli zbyt \"obcy\". Nie mają odstraszać gracza. Mają po prostu sprawiać wrażenie mieszkańców, którzy jednak nie są dokładnie tacy jak gracz. Mają oni swoje prace i życia, ale nie są one zbyt ważne dla gracza, chyba, że musi z nimi wejść w interakcję. Przedmioty Przedmioty są bardzo ważną częścią gry i będzie ich stosunkowo wiele. Większość z nich będzie wykorzystywana do rozwiązywania zagadek i przekonywania bądź niwelowania NPC. Gracz bedzie w stanie łączyć lub ulepszać niektóre przedmioty w specyficznych miejscach. Przedmioty mogą być brońmi, kluczami, narzędziami, itp. Dokładne przedmioty powstaną przy wypisywaniu fabuły. Jedynym przedmiotem różniącym się od reszty jest czasoport, ale on nie jest umieszczony w ekwipunku. Gracz zawsze go ma – jest integralną mechaniką gry jedynie przedstawioną w postaci fizycznej."
  },
  "gdd/Poziomy/Poziomy.html": {
    "href": "gdd/Poziomy/Poziomy.html",
    "title": "Poziomy | Czasoport Documentation",
    "keywords": "Poziomy <-- GDD Koncepcja ogólna (Ostateczne wyglądy zależne od grafików, to są jedynie pomysły, ale inspiracja kulturami prekolumbijskimi jest ważna) Akcja gry toczy się na jednej planecie, ale w trzech czasach (“początki”, “złoty wiek” i “upadek” cywilizacji). Nie jest to jednak całkiem otwarty świat. Każda czasoprzestrzeń podzielona jest na strefy. Przykładowo, gracz jest w wiosce, ale gdy przejdzie do lasu ładuje się nowy poziom. Budynki w różnych czasach Podobnie jak obywatele tej planety, ich budynki powinny być stosunkowo kanciaste. początki cywilizacji – namioty stworzone z wielkich liści i kolorowego drewna złoty wiek – budynki inspirowane pod względem kształtu świątyniami Azteków i Majów. Może w niektórych miejscach graffiti zamiast rytów upadek cywilizacji – budynki podobne jak w złotym wieku, ale wyższe, z większą ilością metalu, jednak zrujnowane. Fauna i Flora (Świat naturalny) Rozgrywka będzie odbywać się na obcej planecie. Rośliny obce inne niż na ziemi. Niebieska/Czerwona/Pomarańczowa roślinność. Ogólnie obca paleta barw, ale nie może być zbyt rażąca, gdyż gracz będzie się na nią patrzył przez sporą część rozgrywki. Wielkie rośliny z wielkimi liśćmi i małymi kwiatami. Zwierzęta także powinny być obce. Nie musimy pokazywać ich wiele, ale gatunki powinny być inspirowane kulturami przedkolumbijskimi, możliwie z nietypowymi połączeniami, np. latające jaszczurki, pumo-axolotl… Przykładowe poziomy pola/przedmieścia/zrujnowane budynki wioska/miasto/zniszczona metropolia centrum wioski/rynek/pobojowisko las/park/spalony park jaskinia/kopalnia/zawalona jaskinia Poziom 1 Szkic Poziomu ... Opis użytych do jego stworzenia bloków i przedmiotów ... W jaki sposób na wpływać na rozgrywkę Jest wprowadzeniem do świata i mechaniki gry (samouczkiem) i to w nim gracz zdobywa przynajmniej pierwszy czas, do którego może się przenosić. Myślimy, że lepiej, gdyby gracz nie mógł od razu przenosić się pomiędzy czasami. Po rozwiązaniu jednej łamigłówki/pokonaniu pierwszej przeszkody i przyzwyczajeniu się do rozgrywki odblokowuje tę moc. Ogólnie powinno zająć to ok. 5 min. Szczegóły poziomu zostaną opracowane niedługo."
  },
  "gdd/Poziomy/Samouczek.html": {
    "href": "gdd/Poziomy/Samouczek.html",
    "title": "Samouczek | Czasoport Documentation",
    "keywords": "Samouczek <-- GDD Tekst w nawiasach () to prompty, które będą się wyświetlać na ekranie gracza podczas samouczka, aby pokazać mu kontrole. W akcjach uwzględniony jest tylko jeden przycisk (np. LPM), ale mogą wyświetlać się wszystkie możliwości (LPM, J, F, South) W nawiasach [] wypisane są przedmioty do podniesienia. Area 1 Teleportujemy się do zniszczonej przyszłości. Znajdujemy się w zniszczonym magazynie. W pomieszczeniu mogą być futurystyczne pudła, szafki, półki itp. Wyraźnie widać ślady wybuchu, jednym z nich są zawalone gruzem drzwi. Oświetlenie zapewnia dziura w suficie. Mamy czasoport, ale nie mamy części, które pozwalają na przenoszenie się w czasie. Przechodzimy się po pomieszczeniu (WSAD - chodzenie) Na ziemi leży [młotek] (LPM - podnoszenie). Drugie co rzuca nam się w oczy to drzwi, które są oczywiście zablokowane, po interakcji z nimi dostajemy informację że potrzebujemy czegoś do odsunięcia gruzu - rozpoczynamy więc przeszukiwanie pomieszczenia i podnoszenie następnych itemów. Rzeczy na podłodze to póki co zapychacze eq, [kamień], [deska], lub [placeholdery], ale po lewej stronie pomieszczenia znajduje się szafka, która po otwarciu przyciskiem interakcji ma w sobie [łom], niezbędny do odsłonięcia drzwi. Po podniesieniu łomu otrzymujemy podpowiedź (prompt) jak go wybrać w ekwipunku, (PPM - użycie przedmiotu / 1,2,3 - wybieranie z ekwipunku) Po czym używamy go do otwarcia drzwi Area 1.5 Wchodzimy do długiego korytarza. Otrzymujemy powiadomienie dźwiękowe (lub inne ostrzeżenie, np. trzęsienie się ekranu i dźwięk spadających kamieni), a po przejściu pewnej odległości korytarz zaczyna się walić - (Tryb biegu - shift [przytrzymanie]) Wybiegamy z walącego się korytarza i wpadamy do następnego pomieszczenia. Area 2 W tym pomieszczeniu prąd dawno nie działa, pokój jest opustoszały i opuszczony. Siatka znajdująca się w pomieszczeniu oddziela nas od schodów prowadzących na górę. W siatce znajdują się drzwi zamknięte na kłódkę. Pokój ten jest byłym magazynem/pomieszczeniem z generatorami, bezpiecznikami itp., powinien on wyglądać na zamieszkiwanego w przeszłości i wskazywać na zagładę właścicieli - nie tylko ten pokój ale całą lokacja samouczka. Przeszukujemy więc pomieszczenie dostając kilka opisów (przy interakcjach nasza postać może powiedzieć coś krótkiego). Obok siebie znajdują się 3 przedmioty, [fragment czasoportu pozwalający na przenoszenie się do współczesności] i 2 bezużyteczne [kamienie] (Zmiana celu interakcji – L) Dodatkowo, jeśli nazbieraliśmy się śmieci uczymy się jak je wyrzucać (Wyrzucenie przedmiotu – T) (Użycie czasoportu - Q (do tyłu) E (do przodu)) - w tym momencie gracz ma możliwość przenoszenia się jedynie pomiędzy upadkiem a współczesnością. Przenosisz się do współczesności. Prąd działa, pokój jest oświetlony, ale potrzebujesz klucza (z przyszłości), lub młotka, aby otworzyć drzwi. Po użyciu klucza możesz wyjść przez drzwi, na schody, które się za nimi znajdują. Area 3 Wychodzisz schodami do \"głównej strefy\" gry. Pewnego rodzaju main hub (ala Metroidvania). Jest to już koniec samouczka. Myślimy, że main hub będzie rynkiem/galerią handlową wewnątrz świątyni, ale jeszcze musimy to przemyśleć. Oczywiście w tej wersji gry ten main hub nie będzie bardzo rozbudowany, gdyż tworzymy tylko jedną ścieżkę fabularną."
  },
  "gdd/README.html": {
    "href": "gdd/README.html",
    "title": "Nazwa gry: Timeport | Czasoport Documentation",
    "keywords": "Nazwa gry: Timeport Opis świata Gry Świat gry podzielony jest na 3 przestrzenie czasowe: początki cywilizacji - dominują tam wydeptane szlaki, lasy, pola, małe osady, namioty z liści, domki z gliny, pierwsze uprawy, itp. złoty wiek cywilizacji - dominują tam twierdze, miasta, świątynie, wsie, itp. upadek cywilizacji - dominują tam ruiny, wody zanieczyszczone kwasem, skażona atmosefera, ogólny niepokój, itp. Składa się on z wielu plansz przedstawiających pojedyczne lokalizacje, pomiędzy którymi gracz może swobodnie się przemieszczać. Niektóre plansze przeznaczone będą do eksploracji, a niektóre stawiać będą przed graczem przeszkody. Główny Bohater Bezimienny kandydat na stażystę Komisji Czasoprzestrzennej. W przeciwieństwie do reszty postaci spotkanych podczas rozgrywki jest człowiekiem. Grafiki koncepcyjne Gatunek oraz Styl Gatunek - Future Fantasy Adventure and Puzzle Rodzaj Grafiki - 2.5D, styl wykonania do ustalanie z grafikami Widok - Isometryczny Mechanika wyróżniająca grę Rozgrywka w kilku przestrzeniach czasowych, pomiędzy którymi gracz może przemieszczać się w dowolnym momencie. Pozwala to na obchodzenie przejść, używanie przedmiotów z jednej przestrzeni w innej, zmianie stanu przestrzeni znajdującej się dalej w przyszłość, itp. Używane Technologie Silnik: Unity 2021.3.12f1 Edytor Graficzny: Według uznania grafików Marketing oraz Monetyzacja Grupa Docelowa - Gen z Monetyzacja - ... --> Pełna Dokumentacja <--"
  },
  "gdd/Rozgrywka/Rozgrywka.html": {
    "href": "gdd/Rozgrywka/Rozgrywka.html",
    "title": "Rozgrywka | Czasoport Documentation",
    "keywords": "Rozgrywka <-- GDD Cel Gry Przejście przez fabułę poprzez rozwiązywanie problemów. Zamysł, jest taki, że ostatecznie ścieżek i zakończeń będzie wiele, ale póki co skupimy się na linearnej fabule, bez żadnych ścieżek pobocznych i dodatkowych zakończeń. Na ten moment gracz ma doświadczyć solidnej 30 minutowej rozgrywki. Progresja gry Gracz znajduje się w pseudo-otwartym świecie podobnym w strukturze do starych gier Zelda. Świat jest na tyle otwarty, że gracz może iść prawie gdzie chce, ale niektóre ścieżki będą zamknięte, dopóki nie: znajdzie (lub stworzy) pewnego przedmiotu, dokona jakiegoś czynu lub rozwiąże zagadki Poziom trudności zagadek będzie się zwiększał wraz z postępem gry. Umiejętności Gracza Oprócz podstawowych umiejętności poruszania się i interakcji ze światem, gracz posiada możliwość przenoszenia się w czasie. Istnieją 3 czasy, które może odwiedzać – “początki”, “złoty wiek” i “upadek” cywilizacji. Tradycyjny system walki nie istnieje. Każda broń jest zarówno przedmiotem w ekwipunku z ograniczoną ilością amunicji, którą gracz może użyć w danej sytuacji, aby ją rozwiązać. Bronie automatycznie celują w najbliższy adekwatny cel. Mechanika Przenoszenie się w czasie. Proste integracje z przedmiotami (na początek każdy przedmiot ma 1 cel) Sterowanie jest stosunkowo proste. Gracz może się poruszać, biegać, wchodzić w interakcję ze światem/przedmiotami i przenosić się w czasie. Rozgrywka polegać będzie na przemieszczaniu się przez świat, pokonując przy tym przeszkody stawiane przed graczem. W zależności od sposobu pokonania problemu rzeczy w świecie będą się zmieniać. Przynajmniej tak wyglądałaby pełna wersja gry. W tej wersji rozwiązanie na daną sytuację będzie jedno, a gracz będzie przechodził przez fabułę w sposób przewidziany przez twórców gry. Rozgrywka pod tym względem przypominać będzie gry przygodowe typu point and click, szczególnie, że niektóre problemy trzeba będzie rozwiązać za pomocą znalezionych lub stworzonych/połączonych w specjalnych miejscach przedmiotach. Znaczną część rozgrywki będzie zajmować przenoszenie się między czasami aby rozwiązać lub ominąć problem, bądź zdobyć jakiś potrzebny przedmiot. Mechanika ta przypominać będzie misje \"Effect and Cause\" z gry \"Titanfall 2\". Różnicą będzie to, że w naszej grze są 3 płaszczyzny czasowe, a gra nie jest skupiona na akcji. Ulepszenie oraz Przedmioty Gracz jest w stanie łączyć oraz ulepszać przedmioty w specyficznych miejscach. Np. przy osełce może zaostrzyć przedmiot 'Tępa siekiera' i otrzymać przedmiot 'Ostra siekiera'. Kiedy następuje przegrana W ostatecznej wersji gry nie dochodziłoby do przegranej. Najwyżej po dokonaniu wystarczającej liczby złych wyborów gracz otrzymałby “bad ending”. Nawet po “złej” decyzji gra toczyłaby się dalej. W wersji, którą tworzymy najprawdopodobniej będzie musiał istnieć ekran “game over”, gdyż nie sposób szybko stworzyć wiele różnych ścieżek w krótkim czasie. Game over wyświetlałby się jednak jedynie w rzeczywiście niebezpiecznych sytuacjach (np. zabity przez wściekły tłum, bo nie użyłeś przedmiotu, który pozwalał na obronę). W innych wypadkach gracz po prostu pozostaje w miejscu, aż rozwiąże problem."
  },
  "index.html": {
    "href": "index.html",
    "title": "Nazwa gry: Timeport | Czasoport Documentation",
    "keywords": "Nazwa gry: Timeport Opis świata Gry Świat gry podzielony jest na 3 przestrzenie czasowe: początki cywilizacji - dominują tam wydeptane szlaki, lasy, pola, małe osady, namioty z liści, domki z gliny, pierwsze uprawy, itp. złoty wiek cywilizacji - dominują tam twierdze, miasta, świątynie, wsie, itp. upadek cywilizacji - dominują tam ruiny, wody zanieczyszczone kwasem, skażona atmosefera, ogólny niepokój, itp. Składa się on z wielu plansz przedstawiających pojedyczne lokalizacje, pomiędzy którymi gracz może swobodnie się przemieszczać. Niektóre plansze przeznaczone będą do eksploracji, a niektóre stawiać będą przed graczem przeszkody. Główny Bohater Bezimienny kandydat na stażystę Komisji Czasoprzestrzennej. W przeciwieństwie do reszty postaci spotkanych podczas rozgrywki jest człowiekiem. Grafiki koncepcyjne Gatunek oraz Styl Gatunek - Future Fantasy Adventure and Puzzle Rodzaj Grafiki - 2.5D, styl wykonania do ustalanie z grafikami Widok - Isometryczny Mechanika wyróżniająca grę Rozgrywka w kilku przestrzeniach czasowych, pomiędzy którymi gracz może przemieszczać się w dowolnym momencie. Pozwala to na obchodzenie przejść, używanie przedmiotów z jednej przestrzeni w innej, zmianie stanu przestrzeni znajdującej się dalej w przyszłość, itp. Używane Technologie Silnik: Unity 2021.3.12f1 Edytor Graficzny: Według uznania grafików Marketing oraz Monetyzacja Grupa Docelowa - Gen z Monetyzacja - ..."
  },
  "manual/manuals/cinput-manual.html": {
    "href": "manual/manuals/cinput-manual.html",
    "title": "Custom Input System | Czasoport Documentation",
    "keywords": "Custom Input System"
  },
  "manual/manuals/system-architecture.html": {
    "href": "manual/manuals/system-architecture.html",
    "title": "System Architecture | Czasoport Documentation",
    "keywords": "System Architecture"
  },
  "manual/tutorials-info/generating-docs.html": {
    "href": "manual/tutorials-info/generating-docs.html",
    "title": "Generating Documentation Manually | Czasoport Documentation",
    "keywords": "Generating Documentation Manually Project uses DocFX to generate documentation. GitHub will generate documentation automatically on each push to master branch. However, before merging branch you are currently working to master, it is recommended to generate documentation locally and check if everything is fine. Note Updating the documentation after making relevant changes is required by anyone working on the project. Installing DocFX Please follow steps described in section Create New Website in DocFX installation guide. Czasoport documentation structure Two important folders in Documentation folder are: manual and resources. Manual folder contains Markdown files, that are basically standalone articles published on the site. In order to add new article, create new .md file in one of the subfolders and add link to it in manual/toc.yml file. Structure of toc.yml file is self-explanatory. Resources folder contains images and other files that are used in articles. Folder structure should follow structure of manual folder, but resources for each article should be placed in additional folder with the name of the article. Please check how this picture of a cute cat is placed in the folders in order to understand how it works: ![Cute cat](~/resources/tutorials-info/generating-docs/cat.jpg)"
  },
  "manual/tutorials-info/major-settings-changes.html": {
    "href": "manual/tutorials-info/major-settings-changes.html",
    "title": "Major settings changes | Czasoport Documentation",
    "keywords": "Major settings changes Some settings chages might be the key to game performance, stability and quality. Some settings may break the game entirely. This page will list the most important settings that have been changed, why they were changed and what the old values were. In case of any errors in the future, please refer to this page and check if some change might be the reason for it. Important Each time an important setting is changed, MSC should be created and documented here and on corresponding pull request. Template for MSC can be found at the end of source code for this page. [MSC #1] Api Compatability Level MSC #1 Api Compatability Level Pull Request Input Lock Setting Project Settings -> Player -> Other Settings -> Configuration -> Api Compatability Level Old Value .NET Standard 2.1 New Value .NET Framework Reason for change Ability to use dynamic type Possible implications Worse cross-platform compatibility, problems with building for different platforms might arise MSC #2 Gravity Pull Request [NAME OF PR](LINK TO PR) Setting Project Settings -> Physics 2D -> Gravity Old Value X:0 Y:-9.81 New Value X:0 Y:0 Reason for change We don't need gravity in our game. Possible implications Object with RigidBody will not fall by default."
  },
  "manual/tutorials-info/workflow.html": {
    "href": "manual/tutorials-info/workflow.html",
    "title": "Workflow | Czasoport Documentation",
    "keywords": "Workflow Git Branches Pushes to master branch are protected. Each change, addition, hotfix etc. must be done on separate branch and then merged to master via pull request. Branch names must follow this pattern: type/short-description. For example: feature/adding-new-weapon. Available types are: feature - new addition, system, interaction, item, etc. bugfix - fixing a known bug, error, etc. hotfix - fixing a bug that is critical and needs to be fixed as soon as possible refactor - refactoring code, changing code structure, etc. documentation - adding new documentation, changing existing documentation, etc. spike - trying out new idea, testing new system, etc. short-description must be short, but descriptive. For example: feature/adding-new-weapon is good, but feature/weapon is not. Only kebab-case is allowed. Commits There are no enforced rules on commit messages, but please use descriptive ones. Pull Requests Please provide good name and at least short description of your pull request. If you are adding new feature, describe it as good as you can. If you are fixing a bug, describe what was the bug and how did you fix it. Pull Requests must be approved by at least one code owner. Code owners are automatically added to each pull request. Merge commits are disabled. Each pull request must be merged via squash and merge. Resolving conflicts If you are resolving conflicts, please use rebase instead of merge. This will keep commit history clean. If you are not sure how to do it, please ask for help. Pair programming If you are working on the same branch with someone else, please also use rebase instead of normal pull."
  }
}