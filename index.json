{
  "api/Application.StartupManager.html": {
    "href": "api/Application.StartupManager.html",
    "title": "Class StartupManager | Czasoport Documentation",
    "keywords": "Class StartupManager Namespace Application public class StartupManager : MonoBehaviour Inheritance object StartupManager"
  },
  "api/Application.html": {
    "href": "api/Application.html",
    "title": "Namespace Application | Czasoport Documentation",
    "keywords": "Namespace Application Classes StartupManager"
  },
  "api/CustomInput.CInput.html": {
    "href": "api/CustomInput.CInput.html",
    "title": "Class CInput | Czasoport Documentation",
    "keywords": "Class CInput Namespace CustomInput Wrapper for automatically generated InputActions. Provides easier access to reading values from input, takes care of processing for common input values. Incorporates locking mechanism. public static class CInput Inheritance object CInput Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields InputActions InputActions object that CInput is based on. Should be used if there is no wrapper implemented by CInput. public static readonly InputActions InputActions Field Value InputActions InteractionsLock public static readonly InteractionsLock InteractionsLock Field Value InteractionsLock InventoryLock public static readonly InventoryLock InventoryLock Field Value InventoryLock MouseLock public static readonly MouseLock MouseLock Field Value MouseLock MovementLock public static readonly MovementLock MovementLock Field Value MovementLock TeleportLock public static readonly TeleportLock TeleportLock Field Value TeleportLock Properties MousePosition Normal mouse position from InputActions. If you want point in game over which mouse is hovering, use MouseWorldPosition. public static Vector2 MousePosition { get; } Property Value Vector2 MouseWorldPosition Mouse position casted to world coordinates. public static Vector2 MouseWorldPosition { get; } Property Value Vector2 NavigationAxis Vector2 desired player direction/ public static Vector2 NavigationAxis { get; } Property Value Vector2 Run Whether player is running, and how fast he is running (effective on gamepads). public static float Run { get; } Property Value float"
  },
  "api/CustomInput.Exceptions.NoMainCameraException.html": {
    "href": "api/CustomInput.Exceptions.NoMainCameraException.html",
    "title": "Class NoMainCameraException | Czasoport Documentation",
    "keywords": "Class NoMainCameraException Namespace CustomInput.Exceptions public class NoMainCameraException : Exception, ISerializable Inheritance object Exception NoMainCameraException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NoMainCameraException() public NoMainCameraException() NoMainCameraException(string) public NoMainCameraException(string message) Parameters message string NoMainCameraException(string, Exception) public NoMainCameraException(string message, Exception inner) Parameters message string inner Exception"
  },
  "api/CustomInput.Exceptions.html": {
    "href": "api/CustomInput.Exceptions.html",
    "title": "Namespace CustomInput.Exceptions | Czasoport Documentation",
    "keywords": "Namespace CustomInput.Exceptions Classes NoMainCameraException"
  },
  "api/CustomInput.InputTest.html": {
    "href": "api/CustomInput.InputTest.html",
    "title": "Class InputTest | Czasoport Documentation",
    "keywords": "Class InputTest Namespace CustomInput public class InputTest : MonoBehaviour Inheritance object InputTest"
  },
  "api/CustomInput.Interactions.CustomHold.html": {
    "href": "api/CustomInput.Interactions.CustomHold.html",
    "title": "Class CustomHold | Czasoport Documentation",
    "keywords": "Class CustomHold Namespace CustomInput.Interactions public class CustomHold : IInputInteraction Inheritance object CustomHold Fields MinimalTime public float MinimalTime Field Value float Methods Process(ref InputInteractionContext) public void Process(ref InputInteractionContext context) Parameters context InputInteractionContext Reset() public void Reset()"
  },
  "api/CustomInput.Interactions.html": {
    "href": "api/CustomInput.Interactions.html",
    "title": "Namespace CustomInput.Interactions | Czasoport Documentation",
    "keywords": "Namespace CustomInput.Interactions Classes CustomHold"
  },
  "api/CustomInput.Locks.InteractionsLock.html": {
    "href": "api/CustomInput.Locks.InteractionsLock.html",
    "title": "Class InteractionsLock | Czasoport Documentation",
    "keywords": "Class InteractionsLock Namespace CustomInput.Locks Provides locking mechanism for Interactions actions. public class InteractionsLock Inheritance object InteractionsLock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InteractionsLock(InteractionsActions) public InteractionsLock(InputActions.InteractionsActions input) Parameters input InputActions.InteractionsActions Methods Lock() Lets CustomInput know that current thread is not ready to receive input from user. 'Thread' safe, use instead of Enable and Disable on individual actions. public string Lock() Returns string Key that is needed to unlock the actions. Unlock(string) Lets CustomInput know that current thread is ready to receive input from user. public void Unlock(string key) Parameters key string Obtained by invoking Lock(). Exceptions Exception"
  },
  "api/CustomInput.Locks.InventoryLock.html": {
    "href": "api/CustomInput.Locks.InventoryLock.html",
    "title": "Class InventoryLock | Czasoport Documentation",
    "keywords": "Class InventoryLock Namespace CustomInput.Locks Provides locking mechanism for user Inventory actions. public class InventoryLock Inheritance object InventoryLock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors InventoryLock(InventoryActions) public InventoryLock(InputActions.InventoryActions input) Parameters input InputActions.InventoryActions Methods Lock() Lets CustomInput know that current thread is not ready to receive input from user. 'Thread' safe, use instead of Enable and Disable on individual actions. public string Lock() Returns string Key that is needed to unlock the actions. Unlock(string) Lets CustomInput know that current thread is ready to receive input from user. public void Unlock(string key) Parameters key string Obtained by invoking Lock(). Exceptions Exception"
  },
  "api/CustomInput.Locks.MouseLock.html": {
    "href": "api/CustomInput.Locks.MouseLock.html",
    "title": "Class MouseLock | Czasoport Documentation",
    "keywords": "Class MouseLock Namespace CustomInput.Locks Provides locking mechanism for Mouse actions. public class MouseLock Inheritance object MouseLock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MouseLock(MouseActions) public MouseLock(InputActions.MouseActions input) Parameters input InputActions.MouseActions Methods Lock() Lets CustomInput know that current thread is not ready to receive input from user. 'Thread' safe, use instead of Enable and Disable on individual actions. public string Lock() Returns string Key that is needed to unlock the actions. Unlock(string) Lets CustomInput know that current thread is ready to receive input from user. public void Unlock(string key) Parameters key string Obtained by invoking Lock(). Exceptions Exception"
  },
  "api/CustomInput.Locks.MovementLock.html": {
    "href": "api/CustomInput.Locks.MovementLock.html",
    "title": "Class MovementLock | Czasoport Documentation",
    "keywords": "Class MovementLock Namespace CustomInput.Locks Provides locking mechanism for Movement actions. public class MovementLock Inheritance object MovementLock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MovementLock(MovementActions) public MovementLock(InputActions.MovementActions input) Parameters input InputActions.MovementActions Methods Lock() Lets CustomInput know that current thread is not ready to receive input from user. 'Thread' safe, use instead of Enable and Disable on individual actions. public string Lock() Returns string Key that is needed to unlock the actions. Unlock(string) Lets CustomInput know that current thread is ready to receive input from user. public void Unlock(string key) Parameters key string Obtained by invoking Lock(). Exceptions Exception"
  },
  "api/CustomInput.Locks.TeleportLock.html": {
    "href": "api/CustomInput.Locks.TeleportLock.html",
    "title": "Class TeleportLock | Czasoport Documentation",
    "keywords": "Class TeleportLock Namespace CustomInput.Locks Provides locking mechanism for Teleport actions. public class TeleportLock Inheritance object TeleportLock Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TeleportLock(TeleportActions) public TeleportLock(InputActions.TeleportActions input) Parameters input InputActions.TeleportActions Methods Lock() Lets CustomInput know that current thread is not ready to receive input from user. 'Thread' safe, use instead of Enable and Disable on individual actions. public string Lock() Returns string Key that is needed to unlock the actions. Unlock(string) Lets CustomInput know that current thread is ready to receive input from user. public void Unlock(string key) Parameters key string Obtained by invoking Lock(). Exceptions Exception"
  },
  "api/CustomInput.Locks.html": {
    "href": "api/CustomInput.Locks.html",
    "title": "Namespace CustomInput.Locks | Czasoport Documentation",
    "keywords": "Namespace CustomInput.Locks Classes InteractionsLock Provides locking mechanism for Interactions actions. InventoryLock Provides locking mechanism for user Inventory actions. MouseLock Provides locking mechanism for Mouse actions. MovementLock Provides locking mechanism for Movement actions. TeleportLock Provides locking mechanism for Teleport actions."
  },
  "api/CustomInput.html": {
    "href": "api/CustomInput.html",
    "title": "Namespace CustomInput | Czasoport Documentation",
    "keywords": "Namespace CustomInput Classes CInput Wrapper for automatically generated InputActions. Provides easier access to reading values from input, takes care of processing for common input values. Incorporates locking mechanism. InputTest"
  },
  "api/Global.InputActions.IInteractionsActions.html": {
    "href": "api/Global.InputActions.IInteractionsActions.html",
    "title": "Interface InputActions.IInteractionsActions | Czasoport Documentation",
    "keywords": "Interface InputActions.IInteractionsActions Namespace Global public interface InputActions.IInteractionsActions Methods OnInteraction(CallbackContext) void OnInteraction(InputAction.CallbackContext context) Parameters context CallbackContext OnItemInteraction(CallbackContext) void OnItemInteraction(InputAction.CallbackContext context) Parameters context CallbackContext OnLongInteraction(CallbackContext) void OnLongInteraction(InputAction.CallbackContext context) Parameters context CallbackContext OnLongItemInteraction(CallbackContext) void OnLongItemInteraction(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/Global.InputActions.IInventoryActions.html": {
    "href": "api/Global.InputActions.IInventoryActions.html",
    "title": "Interface InputActions.IInventoryActions | Czasoport Documentation",
    "keywords": "Interface InputActions.IInventoryActions Namespace Global public interface InputActions.IInventoryActions Methods OnChooseItem(CallbackContext) void OnChooseItem(InputAction.CallbackContext context) Parameters context CallbackContext OnDrop(CallbackContext) void OnDrop(InputAction.CallbackContext context) Parameters context CallbackContext OnNextItem(CallbackContext) void OnNextItem(InputAction.CallbackContext context) Parameters context CallbackContext OnPreviousItem(CallbackContext) void OnPreviousItem(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/Global.InputActions.IMouseActions.html": {
    "href": "api/Global.InputActions.IMouseActions.html",
    "title": "Interface InputActions.IMouseActions | Czasoport Documentation",
    "keywords": "Interface InputActions.IMouseActions Namespace Global public interface InputActions.IMouseActions Methods OnLeftClick(CallbackContext) void OnLeftClick(InputAction.CallbackContext context) Parameters context CallbackContext OnMiddleClick(CallbackContext) void OnMiddleClick(InputAction.CallbackContext context) Parameters context CallbackContext OnMousePosition(CallbackContext) void OnMousePosition(InputAction.CallbackContext context) Parameters context CallbackContext OnRightClick(CallbackContext) void OnRightClick(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/Global.InputActions.IMovementActions.html": {
    "href": "api/Global.InputActions.IMovementActions.html",
    "title": "Interface InputActions.IMovementActions | Czasoport Documentation",
    "keywords": "Interface InputActions.IMovementActions Namespace Global public interface InputActions.IMovementActions Methods OnFocusChange(CallbackContext) void OnFocusChange(InputAction.CallbackContext context) Parameters context CallbackContext OnNavigation(CallbackContext) void OnNavigation(InputAction.CallbackContext context) Parameters context CallbackContext OnRun(CallbackContext) void OnRun(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/Global.InputActions.ITeleportActions.html": {
    "href": "api/Global.InputActions.ITeleportActions.html",
    "title": "Interface InputActions.ITeleportActions | Czasoport Documentation",
    "keywords": "Interface InputActions.ITeleportActions Namespace Global public interface InputActions.ITeleportActions Methods OnTeleportBack(CallbackContext) void OnTeleportBack(InputAction.CallbackContext context) Parameters context CallbackContext OnTeleportForward(CallbackContext) void OnTeleportForward(InputAction.CallbackContext context) Parameters context CallbackContext"
  },
  "api/Global.InputActions.InteractionsActions.html": {
    "href": "api/Global.InputActions.InteractionsActions.html",
    "title": "Struct InputActions.InteractionsActions | Czasoport Documentation",
    "keywords": "Struct InputActions.InteractionsActions Namespace Global public struct InputActions.InteractionsActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors InteractionsActions(InputActions) public InteractionsActions(InputActions wrapper) Parameters wrapper InputActions Properties Interaction public InputAction Interaction { get; } Property Value InputAction ItemInteraction public InputAction ItemInteraction { get; } Property Value InputAction LongInteraction public InputAction LongInteraction { get; } Property Value InputAction LongItemInteraction public InputAction LongItemInteraction { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(IInteractionsActions) public void SetCallbacks(InputActions.IInteractionsActions instance) Parameters instance InputActions.IInteractionsActions Operators implicit operator InputActionMap(InteractionsActions) public static implicit operator InputActionMap(InputActions.InteractionsActions set) Parameters set InputActions.InteractionsActions Returns InputActionMap"
  },
  "api/Global.InputActions.InventoryActions.html": {
    "href": "api/Global.InputActions.InventoryActions.html",
    "title": "Struct InputActions.InventoryActions | Czasoport Documentation",
    "keywords": "Struct InputActions.InventoryActions Namespace Global public struct InputActions.InventoryActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors InventoryActions(InputActions) public InventoryActions(InputActions wrapper) Parameters wrapper InputActions Properties ChooseItem public InputAction ChooseItem { get; } Property Value InputAction Drop public InputAction Drop { get; } Property Value InputAction NextItem public InputAction NextItem { get; } Property Value InputAction PreviousItem public InputAction PreviousItem { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(IInventoryActions) public void SetCallbacks(InputActions.IInventoryActions instance) Parameters instance InputActions.IInventoryActions Operators implicit operator InputActionMap(InventoryActions) public static implicit operator InputActionMap(InputActions.InventoryActions set) Parameters set InputActions.InventoryActions Returns InputActionMap"
  },
  "api/Global.InputActions.MouseActions.html": {
    "href": "api/Global.InputActions.MouseActions.html",
    "title": "Struct InputActions.MouseActions | Czasoport Documentation",
    "keywords": "Struct InputActions.MouseActions Namespace Global public struct InputActions.MouseActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors MouseActions(InputActions) public MouseActions(InputActions wrapper) Parameters wrapper InputActions Properties LeftClick public InputAction LeftClick { get; } Property Value InputAction MiddleClick public InputAction MiddleClick { get; } Property Value InputAction MousePosition public InputAction MousePosition { get; } Property Value InputAction RightClick public InputAction RightClick { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(IMouseActions) public void SetCallbacks(InputActions.IMouseActions instance) Parameters instance InputActions.IMouseActions Operators implicit operator InputActionMap(MouseActions) public static implicit operator InputActionMap(InputActions.MouseActions set) Parameters set InputActions.MouseActions Returns InputActionMap"
  },
  "api/Global.InputActions.MovementActions.html": {
    "href": "api/Global.InputActions.MovementActions.html",
    "title": "Struct InputActions.MovementActions | Czasoport Documentation",
    "keywords": "Struct InputActions.MovementActions Namespace Global public struct InputActions.MovementActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors MovementActions(InputActions) public MovementActions(InputActions wrapper) Parameters wrapper InputActions Properties FocusChange public InputAction FocusChange { get; } Property Value InputAction Navigation public InputAction Navigation { get; } Property Value InputAction Run public InputAction Run { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(IMovementActions) public void SetCallbacks(InputActions.IMovementActions instance) Parameters instance InputActions.IMovementActions Operators implicit operator InputActionMap(MovementActions) public static implicit operator InputActionMap(InputActions.MovementActions set) Parameters set InputActions.MovementActions Returns InputActionMap"
  },
  "api/Global.InputActions.TeleportActions.html": {
    "href": "api/Global.InputActions.TeleportActions.html",
    "title": "Struct InputActions.TeleportActions | Czasoport Documentation",
    "keywords": "Struct InputActions.TeleportActions Namespace Global public struct InputActions.TeleportActions Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors TeleportActions(InputActions) public TeleportActions(InputActions wrapper) Parameters wrapper InputActions Properties TeleportBack public InputAction TeleportBack { get; } Property Value InputAction TeleportForward public InputAction TeleportForward { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(ITeleportActions) public void SetCallbacks(InputActions.ITeleportActions instance) Parameters instance InputActions.ITeleportActions Operators implicit operator InputActionMap(TeleportActions) public static implicit operator InputActionMap(InputActions.TeleportActions set) Parameters set InputActions.TeleportActions Returns InputActionMap"
  },
  "api/Global.InputActions.html": {
    "href": "api/Global.InputActions.html",
    "title": "Class InputActions | Czasoport Documentation",
    "keywords": "Class InputActions Namespace Global public class InputActions : IInputActionCollection2, IDisposable Inheritance object InputActions Implements IDisposable Constructors InputActions() public InputActions() Properties Interactions public InputActions.InteractionsActions Interactions { get; } Property Value InputActions.InteractionsActions Inventory public InputActions.InventoryActions Inventory { get; } Property Value InputActions.InventoryActions Mouse public InputActions.MouseActions Mouse { get; } Property Value InputActions.MouseActions Movement public InputActions.MovementActions Movement { get; } Property Value InputActions.MovementActions Teleport public InputActions.TeleportActions Teleport { get; } Property Value InputActions.TeleportActions asset public InputActionAsset asset { get; } Property Value InputActionAsset bindingMask public InputBinding? bindingMask { get; set; } Property Value InputBinding? bindings public IEnumerable<InputBinding> bindings { get; } Property Value IEnumerable<InputBinding> controlSchemes public ReadOnlyArray<InputControlScheme> controlSchemes { get; } Property Value ReadOnlyArray<InputControlScheme> devices public ReadOnlyArray<InputDevice>? devices { get; set; } Property Value ReadOnlyArray<InputDevice>? Methods Contains(InputAction) public bool Contains(InputAction action) Parameters action InputAction Returns bool Disable() public void Disable() Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Enable() public void Enable() FindAction(string, bool) public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false) Parameters actionNameOrId string throwIfNotFound bool Returns InputAction FindBinding(InputBinding, out InputAction) public int FindBinding(InputBinding bindingMask, out InputAction action) Parameters bindingMask InputBinding action InputAction Returns int GetEnumerator() public IEnumerator<InputAction> GetEnumerator() Returns IEnumerator<InputAction>"
  },
  "api/Global.SettingsTests.html": {
    "href": "api/Global.SettingsTests.html",
    "title": "Class SettingsTests | Czasoport Documentation",
    "keywords": "Class SettingsTests Namespace Global public class SettingsTests : MonoBehaviour Inheritance object SettingsTests"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace | Czasoport Documentation",
    "keywords": "Namespace Classes InputActions SettingsTests Structs InputActions.InteractionsActions InputActions.InventoryActions InputActions.MouseActions InputActions.MovementActions InputActions.TeleportActions Interfaces InputActions.IInteractionsActions InputActions.IInventoryActions InputActions.IMouseActions InputActions.IMovementActions InputActions.ITeleportActions"
  },
  "api/LevelsLoader.AvailableLevels.html": {
    "href": "api/LevelsLoader.AvailableLevels.html",
    "title": "Enum AvailableLevels | Czasoport Documentation",
    "keywords": "Enum AvailableLevels Namespace LevelsLoader public enum AvailableLevels Fields Level1 = 0 Level2 = 1 Level3 = 2 Level4 = 3 Level5 = 4"
  },
  "api/LevelsLoader.LevelInfoSO.html": {
    "href": "api/LevelsLoader.LevelInfoSO.html",
    "title": "Class LevelInfoSO | Czasoport Documentation",
    "keywords": "Class LevelInfoSO Namespace LevelsLoader public class LevelInfoSO : ScriptableObject Inheritance object LevelInfoSO Fields level public AvailableLevels level Field Value AvailableLevels neighbourLevels public AvailableLevels[] neighbourLevels Field Value AvailableLevels[]"
  },
  "api/LevelsLoader.LevelsManager.html": {
    "href": "api/LevelsLoader.LevelsManager.html",
    "title": "Class LevelsManager | Czasoport Documentation",
    "keywords": "Class LevelsManager Namespace LevelsLoader public class LevelsManager : MonoBehaviour Inheritance object LevelsManager Properties Instance public static LevelsManager Instance { get; } Property Value LevelsManager Methods ChangeLevel(LevelInfoSO) public void ChangeLevel(LevelInfoSO levelInfo) Parameters levelInfo LevelInfoSO"
  },
  "api/LevelsLoader.TeleportToAnotherLevel.html": {
    "href": "api/LevelsLoader.TeleportToAnotherLevel.html",
    "title": "Class TeleportToAnotherLevel | Czasoport Documentation",
    "keywords": "Class TeleportToAnotherLevel Namespace LevelsLoader public class TeleportToAnotherLevel : MonoBehaviour Inheritance object TeleportToAnotherLevel"
  },
  "api/LevelsLoader.html": {
    "href": "api/LevelsLoader.html",
    "title": "Namespace LevelsLoader | Czasoport Documentation",
    "keywords": "Namespace LevelsLoader Classes LevelInfoSO LevelsManager TeleportToAnotherLevel Enums AvailableLevels"
  },
  "api/Settings.Developer.ApplicationSettingsSO.html": {
    "href": "api/Settings.Developer.ApplicationSettingsSO.html",
    "title": "Class ApplicationSettingsSO | Czasoport Documentation",
    "keywords": "Class ApplicationSettingsSO Namespace Settings.Developer Settings for entire application that defines variables for startup, core processes and shutdown public class ApplicationSettingsSO : ScriptableObject Inheritance object ApplicationSettingsSO Fields globalDataSceneName public string globalDataSceneName Field Value string"
  },
  "api/Settings.Developer.TimePlatformChangeSettingsSO.html": {
    "href": "api/Settings.Developer.TimePlatformChangeSettingsSO.html",
    "title": "Class TimePlatformChangeSettingsSO | Czasoport Documentation",
    "keywords": "Class TimePlatformChangeSettingsSO Namespace Settings.Developer Settings for scene changing and time changing systems. public class TimePlatformChangeSettingsSO : ScriptableObject Inheritance object TimePlatformChangeSettingsSO Fields offsetFromPresentPlatform public Vector2 offsetFromPresentPlatform Field Value Vector2"
  },
  "api/Settings.Developer.html": {
    "href": "api/Settings.Developer.html",
    "title": "Namespace Settings.Developer | Czasoport Documentation",
    "keywords": "Namespace Settings.Developer Classes ApplicationSettingsSO Settings for entire application that defines variables for startup, core processes and shutdown TimePlatformChangeSettingsSO Settings for scene changing and time changing systems."
  },
  "api/Settings.DeveloperSettings.html": {
    "href": "api/Settings.DeveloperSettings.html",
    "title": "Class DeveloperSettings | Czasoport Documentation",
    "keywords": "Class DeveloperSettings Namespace Settings Manages different setting sets used for internal settings. public class DeveloperSettings : MonoBehaviour Inheritance object DeveloperSettings Fields Instance public static DeveloperSettings Instance Field Value DeveloperSettings appSettings public ApplicationSettingsSO appSettings Field Value ApplicationSettingsSO tpcSettings public TimePlatformChangeSettingsSO tpcSettings Field Value TimePlatformChangeSettingsSO"
  },
  "api/Settings.html": {
    "href": "api/Settings.html",
    "title": "Namespace Settings | Czasoport Documentation",
    "keywords": "Namespace Settings Classes DeveloperSettings Manages different setting sets used for internal settings."
  },
  "api/TimeChange.CheckCollider.html": {
    "href": "api/TimeChange.CheckCollider.html",
    "title": "Class CheckCollider | Czasoport Documentation",
    "keywords": "Class CheckCollider Namespace TimeChange public class CheckCollider : MonoBehaviour Inheritance object CheckCollider Methods IsNotTouching() public bool IsNotTouching() Returns bool"
  },
  "api/TimeChange.Test.CameraTest.html": {
    "href": "api/TimeChange.Test.CameraTest.html",
    "title": "Class CameraTest | Czasoport Documentation",
    "keywords": "Class CameraTest Namespace TimeChange.Test public class CameraTest : MonoBehaviour Inheritance object CameraTest"
  },
  "api/TimeChange.Test.PlayerTTCtest.html": {
    "href": "api/TimeChange.Test.PlayerTTCtest.html",
    "title": "Class PlayerTTCtest | Czasoport Documentation",
    "keywords": "Class PlayerTTCtest Namespace TimeChange.Test public class PlayerTTCtest : MonoBehaviour Inheritance object PlayerTTCtest"
  },
  "api/TimeChange.Test.html": {
    "href": "api/TimeChange.Test.html",
    "title": "Namespace TimeChange.Test | Czasoport Documentation",
    "keywords": "Namespace TimeChange.Test Classes CameraTest PlayerTTCtest"
  },
  "api/TimeChange.TimeChanger.html": {
    "href": "api/TimeChange.TimeChanger.html",
    "title": "Class TimeChanger | Czasoport Documentation",
    "keywords": "Class TimeChanger Namespace TimeChange public class TimeChanger : MonoBehaviour Inheritance object TimeChanger Fields actualTime public TimeLine actualTime Field Value TimeLine"
  },
  "api/TimeChange.TimeLine.html": {
    "href": "api/TimeChange.TimeLine.html",
    "title": "Enum TimeLine | Czasoport Documentation",
    "keywords": "Enum TimeLine Namespace TimeChange public enum TimeLine Fields Future = 2 Past = 0 Present = 1"
  },
  "api/TimeChange.html": {
    "href": "api/TimeChange.html",
    "title": "Namespace TimeChange | Czasoport Documentation",
    "keywords": "Namespace TimeChange Classes CheckCollider TimeChanger Enums TimeLine"
  },
  "index.html": {
    "href": "index.html",
    "title": "Nazwa gry: Timeport | Czasoport Documentation",
    "keywords": "Nazwa gry: Timeport Opis świata Gry Świat gry podzielony jest na 3 przestrzenie czasowe: początki cywilizacji - dominują tam wydeptane szlaki, lasy, pola, małe osady, namioty z liści, domki z gliny, pierwsze uprawy, itp. złoty wiek cywilizacji - dominują tam twierdze, miasta, świątynie, wsie, itp. upadek cywilizacji - dominują tam ruiny, wody zanieczyszczone kwasem, skażona atmosefera, ogólny niepokój, itp. Składa się on z wielu plansz przedstawiających pojedyczne lokalizacje, pomiędzy którymi gracz może swobodnie się przemieszczać. Niektóre plansze przeznaczone będą do eksploracji, a niektóre stawiać będą przed graczem przeszkody. Główny Bohater Bezimienny kandydat na stażystę Komisji Czasoprzestrzennej. W przeciwieństwie do reszty postaci spotkanych podczas rozgrywki jest człowiekiem. Grafiki koncepcyjne Gatunek oraz Styl Gatunek - Future Fantasy Adventure and Puzzle Rodzaj Grafiki - 2.5D, styl wykonania do ustalanie z grafikami Widok - Isometryczny Mechanika wyróżniająca grę Rozgrywka w kilku przestrzeniach czasowych, pomiędzy którymi gracz może przemieszczać się w dowolnym momencie. Pozwala to na obchodzenie przejść, używanie przedmiotów z jednej przestrzeni w innej, zmianie stanu przestrzeni znajdującej się dalej w przyszłość, itp. Używane Technologie Silnik: Unity 2021.3.12f1 Edytor Graficzny: Według uznania grafików Marketing oraz Monetyzacja Grupa Docelowa - Gen z Monetyzacja - ..."
  },
  "manual/manuals/cinput-manual.html": {
    "href": "manual/manuals/cinput-manual.html",
    "title": "Custom Input System | Czasoport Documentation",
    "keywords": "Custom Input System"
  },
  "manual/manuals/system-architecture.html": {
    "href": "manual/manuals/system-architecture.html",
    "title": "System Architecture | Czasoport Documentation",
    "keywords": "System Architecture"
  },
  "manual/tutorials-info/generating-docs.html": {
    "href": "manual/tutorials-info/generating-docs.html",
    "title": "Generating Documentation Manually | Czasoport Documentation",
    "keywords": "Generating Documentation Manually Project uses DocFX to generate documentation. GitHub will generate documentation automatically on each push to master branch. However, before merging branch you are currently working to master, it is recommended to generate documentation locally and check if everything is fine. Note Updating the documentation after making relevant changes is required by anyone working on the project. Installing DocFX Please follow steps described in section Create New Website in DocFX installation guide. Czasoport documentation structure Two important folders in Documentation folder are: manual and resources. Manual folder contains Markdown files, that are basically standalone articles published on the site. In order to add new article, create new .md file in one of the subfolders and add link to it in manual/toc.yml file. Structure of toc.yml file is self-explanatory. Resources folder contains images and other files that are used in articles. Folder structure should follow structure of manual folder, but resources for each article should be placed in additional folder with the name of the article. Please check how this picture of a cute cat is placed in the folders in order to understand how it works: ![Cute cat](~/resources/tutorials-info/generating-docs/cat.jpg)"
  },
  "manual/tutorials-info/major-settings-changes.html": {
    "href": "manual/tutorials-info/major-settings-changes.html",
    "title": "Major settings changes | Czasoport Documentation",
    "keywords": "Major settings changes Some settings chages might be the key to game performance, stability and quality. Some settings may break the game entirely. This page will list the most important settings that have been changed, why they were changed and what the old values were. In case of any errors in the future, please refer to this page and check if some change might be the reason for it. Important Each time an important setting is changed, MSC should be created and documented here and on corresponding pull request. Template for MSC can be found at the end of source code for this page. [MSC #1] Api Compatability Level MSC #1 Api Compatability Level Pull Request Input Lock Setting Project Settings -> Player -> Other Settings -> Configuration -> Api Compatability Level Old Value .NET Standard 2.1 New Value .NET Framework Reason for change Ability to use dynamic type Possible implications Worse cross-platform compatibility, problems with building for different platforms might arise"
  },
  "manual/tutorials-info/workflow.html": {
    "href": "manual/tutorials-info/workflow.html",
    "title": "Workflow | Czasoport Documentation",
    "keywords": "Workflow Git Branches Pushes to master branch are protected. Each change, addition, hotfix etc. must be done on separate branch and then merged to master via pull request. Branch names must follow this pattern: type/short-description. For example: feature/adding-new-weapon. Available types are: feature - new addition, system, interaction, item, etc. bugfix - fixing a known bug, error, etc. hotfix - fixing a bug that is critical and needs to be fixed as soon as possible refactor - refactoring code, changing code structure, etc. documentation - adding new documentation, changing existing documentation, etc. spike - trying out new idea, testing new system, etc. short-description must be short, but descriptive. For example: feature/adding-new-weapon is good, but feature/weapon is not. Only kebab-case is allowed. Commits There are no enforced rules on commit messages, but please use descriptive ones. Pull Requests Please provide good name and at least short description of your pull request. If you are adding new feature, describe it as good as you can. If you are fixing a bug, describe what was the bug and how did you fix it. Pull Requests must be approved by at least one code owner. Code owners are automatically added to each pull request. Merge commits are disabled. Each pull request must be merged via squash and merge. Resolving conflicts If you are resolving conflicts, please use rebase instead of merge. This will keep commit history clean. If you are not sure how to do it, please ask for help. Pair programming If you are working on the same branch with someone else, please also use rebase instead of normal pull."
  }
}